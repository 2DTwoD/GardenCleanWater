Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    main.o(.text.__cxx_global_var_init) refers to main.o(.bss.B1) for B1
    main.o(.text.__cxx_global_var_init) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init) refers to main.o(.text.__cxx_global_var_init) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.1) refers to main.o(.bss.H1) for H1
    main.o(.text.__cxx_global_var_init.1) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.1) refers to main.o(.text.__cxx_global_var_init.1) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.2) refers to main.o(.bss.B2) for B2
    main.o(.text.__cxx_global_var_init.2) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.2) refers to main.o(.text.__cxx_global_var_init.2) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.3) refers to main.o(.bss.H2) for H2
    main.o(.text.__cxx_global_var_init.3) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.3) refers to main.o(.text.__cxx_global_var_init.3) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.4) refers to main.o(.bss.B3) for B3
    main.o(.text.__cxx_global_var_init.4) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.4) refers to main.o(.text.__cxx_global_var_init.4) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.5) refers to main.o(.bss.H3) for H3
    main.o(.text.__cxx_global_var_init.5) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.5) refers to main.o(.text.__cxx_global_var_init.5) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.6) refers to main.o(.bss.S4) for S4
    main.o(.text.__cxx_global_var_init.6) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.6) refers to main.o(.text.__cxx_global_var_init.6) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.7) refers to main.o(.bss.S5) for S5
    main.o(.text.__cxx_global_var_init.7) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.7) refers to main.o(.text.__cxx_global_var_init.7) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.8) refers to main.o(.bss.S6) for S6
    main.o(.text.__cxx_global_var_init.8) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.8) refers to main.o(.text.__cxx_global_var_init.8) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.9) refers to main.o(.bss.C1) for C1
    main.o(.text.__cxx_global_var_init.9) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.9) refers to main.o(.text.__cxx_global_var_init.9) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.10) refers to main.o(.bss.O1) for O1
    main.o(.text.__cxx_global_var_init.10) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.10) refers to main.o(.text.__cxx_global_var_init.10) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.11) refers to main.o(.bss.D1) for D1
    main.o(.text.__cxx_global_var_init.11) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.11) refers to main.o(.text.__cxx_global_var_init.11) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.12) refers to main.o(.bss.M1) for M1
    main.o(.text.__cxx_global_var_init.12) refers to coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) for CoilPulse::CoilPulse(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.12) refers to main.o(.text.__cxx_global_var_init.12) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.13) refers to main.o(.bss.C2) for C2
    main.o(.text.__cxx_global_var_init.13) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.13) refers to main.o(.text.__cxx_global_var_init.13) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.14) refers to main.o(.bss.O2) for O2
    main.o(.text.__cxx_global_var_init.14) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.14) refers to main.o(.text.__cxx_global_var_init.14) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.15) refers to main.o(.bss.D2) for D2
    main.o(.text.__cxx_global_var_init.15) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.15) refers to main.o(.text.__cxx_global_var_init.15) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.16) refers to main.o(.bss.M2) for M2
    main.o(.text.__cxx_global_var_init.16) refers to coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) for CoilPulse::CoilPulse(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.16) refers to main.o(.text.__cxx_global_var_init.16) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.17) refers to main.o(.bss.C3) for C3
    main.o(.text.__cxx_global_var_init.17) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.17) refers to main.o(.text.__cxx_global_var_init.17) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.18) refers to main.o(.bss.O3) for O3
    main.o(.text.__cxx_global_var_init.18) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.18) refers to main.o(.text.__cxx_global_var_init.18) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.19) refers to main.o(.bss.D3) for D3
    main.o(.text.__cxx_global_var_init.19) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.19) refers to main.o(.text.__cxx_global_var_init.19) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.20) refers to main.o(.bss.M3) for M3
    main.o(.text.__cxx_global_var_init.20) refers to coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) for CoilPulse::CoilPulse(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.20) refers to main.o(.text.__cxx_global_var_init.20) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.21) refers to main.o(.bss.D4) for D4
    main.o(.text.__cxx_global_var_init.21) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.21) refers to main.o(.text.__cxx_global_var_init.21) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.22) refers to main.o(.bss.M6) for M6
    main.o(.text.__cxx_global_var_init.22) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.22) refers to main.o(.text.__cxx_global_var_init.22) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.23) refers to main.o(.bss.M7) for M7
    main.o(.text.__cxx_global_var_init.23) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.23) refers to main.o(.text.__cxx_global_var_init.23) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.24) refers to main.o(.bss.Me1) for Me1
    main.o(.text.__cxx_global_var_init.24) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.24) refers to main.o(.text.__cxx_global_var_init.24) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.25) refers to main.o(.bss.Me2) for Me2
    main.o(.text.__cxx_global_var_init.25) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.25) refers to main.o(.text.__cxx_global_var_init.25) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.26) refers to main.o(.bss.Me3) for Me3
    main.o(.text.__cxx_global_var_init.26) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.26) refers to main.o(.text.__cxx_global_var_init.26) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.27) refers to main.o(.bss.OB1s0) for OB1s0
    main.o(.text.__cxx_global_var_init.27) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.27) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.27) refers to main.o(.text.__cxx_global_var_init.27) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.28) refers to main.o(.bss.OB1s1) for OB1s1
    main.o(.text.__cxx_global_var_init.28) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.28) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.28) refers to main.o(.text.__cxx_global_var_init.28) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.29) refers to main.o(.bss.OB1s2) for OB1s2
    main.o(.text.__cxx_global_var_init.29) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.29) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.29) refers to main.o(.text.__cxx_global_var_init.29) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.30) refers to main.o(.bss.OB1s3) for OB1s3
    main.o(.text.__cxx_global_var_init.30) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.30) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.30) refers to main.o(.text.__cxx_global_var_init.30) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.31) refers to main.o(.bss.OB1s4) for OB1s4
    main.o(.text.__cxx_global_var_init.31) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.31) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.31) refers to main.o(.text.__cxx_global_var_init.31) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.32) refers to main.o(.bss.OB1s5) for OB1s5
    main.o(.text.__cxx_global_var_init.32) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.32) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.32) refers to main.o(.text.__cxx_global_var_init.32) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.33) refers to main.o(.bss.OB1s1Delay) for OB1s1Delay
    main.o(.text.__cxx_global_var_init.33) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for OnDelay::OnDelay(unsigned int)
    main.o(.text.__cxx_global_var_init.33) refers to on_delay.o(.text._ZN7OnDelayD2Ev) for OnDelay::~OnDelay()
    main.o(.text.__cxx_global_var_init.33) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.33) refers to main.o(.text.__cxx_global_var_init.33) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.34) refers to main.o(.bss.OB1s2Delay) for OB1s2Delay
    main.o(.text.__cxx_global_var_init.34) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for OnDelay::OnDelay(unsigned int)
    main.o(.text.__cxx_global_var_init.34) refers to on_delay.o(.text._ZN7OnDelayD2Ev) for OnDelay::~OnDelay()
    main.o(.text.__cxx_global_var_init.34) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.34) refers to main.o(.text.__cxx_global_var_init.34) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.35) refers to main.o(.bss.OB1s4Delay) for OB1s4Delay
    main.o(.text.__cxx_global_var_init.35) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for OnDelay::OnDelay(unsigned int)
    main.o(.text.__cxx_global_var_init.35) refers to on_delay.o(.text._ZN7OnDelayD2Ev) for OnDelay::~OnDelay()
    main.o(.text.__cxx_global_var_init.35) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.35) refers to main.o(.text.__cxx_global_var_init.35) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.36) refers to main.o(.bss.OB1s4MeTimer) for OB1s4MeTimer
    main.o(.text.__cxx_global_var_init.36) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.36) refers to main.o(.text.__cxx_global_var_init.36) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.37) refers to main.o(.bss.CHBs0) for CHBs0
    main.o(.text.__cxx_global_var_init.37) refers to main.o(.bss.CHBstep) for CHBstep
    main.o(.text.__cxx_global_var_init.37) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.37) refers to main.o(.text.__cxx_global_var_init.37) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.38) refers to main.o(.bss.CHBs1) for CHBs1
    main.o(.text.__cxx_global_var_init.38) refers to main.o(.bss.CHBstep) for CHBstep
    main.o(.text.__cxx_global_var_init.38) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.38) refers to main.o(.text.__cxx_global_var_init.38) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.39) refers to main.o(.bss.CHBs2) for CHBs2
    main.o(.text.__cxx_global_var_init.39) refers to main.o(.bss.CHBstep) for CHBstep
    main.o(.text.__cxx_global_var_init.39) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.39) refers to main.o(.text.__cxx_global_var_init.39) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.40) refers to main.o(.bss.CHBs1Delay) for CHBs1Delay
    main.o(.text.__cxx_global_var_init.40) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for OnDelay::OnDelay(unsigned int)
    main.o(.text.__cxx_global_var_init.40) refers to on_delay.o(.text._ZN7OnDelayD2Ev) for OnDelay::~OnDelay()
    main.o(.text.__cxx_global_var_init.40) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.40) refers to main.o(.text.__cxx_global_var_init.40) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationIdleHook) refers to main.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationTickHook) refers to main.o(.text.vApplicationTickHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to main.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to main.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    main.o(.text.TIM2_IRQHandler) refers to main.o(.data.updateObjectsSize) for updateObjectsSize
    main.o(.text.TIM2_IRQHandler) refers to main.o(.data.update1msObjects) for update1msObjects
    main.o(.ARM.exidx.text.TIM2_IRQHandler) refers to main.o(.text.TIM2_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to init.o(.text._Z7rccInitv) for rccInit()
    main.o(.text.main) refers to init.o(.text._Z8tickInitv) for tickInit()
    main.o(.text.main) refers to init.o(.text._Z10commonInitv) for commonInit()
    main.o(.text.main) refers to ob1.o(.text._Z7OB1TaskPv) for OB1Task(void*)
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init) for __cxx_global_var_init
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.1) for __cxx_global_var_init.1
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.2) for __cxx_global_var_init.2
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.3) for __cxx_global_var_init.3
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.4) for __cxx_global_var_init.4
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.5) for __cxx_global_var_init.5
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.6) for __cxx_global_var_init.6
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.7) for __cxx_global_var_init.7
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.8) for __cxx_global_var_init.8
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.9) for __cxx_global_var_init.9
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.10) for __cxx_global_var_init.10
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.11) for __cxx_global_var_init.11
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.12) for __cxx_global_var_init.12
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.13) for __cxx_global_var_init.13
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.14) for __cxx_global_var_init.14
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.15) for __cxx_global_var_init.15
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.16) for __cxx_global_var_init.16
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.17) for __cxx_global_var_init.17
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.18) for __cxx_global_var_init.18
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.19) for __cxx_global_var_init.19
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.20) for __cxx_global_var_init.20
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.21) for __cxx_global_var_init.21
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.22) for __cxx_global_var_init.22
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.23) for __cxx_global_var_init.23
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.24) for __cxx_global_var_init.24
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.25) for __cxx_global_var_init.25
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.26) for __cxx_global_var_init.26
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.27) for __cxx_global_var_init.27
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.28) for __cxx_global_var_init.28
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.29) for __cxx_global_var_init.29
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.30) for __cxx_global_var_init.30
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.31) for __cxx_global_var_init.31
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.32) for __cxx_global_var_init.32
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.33) for __cxx_global_var_init.33
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.34) for __cxx_global_var_init.34
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.35) for __cxx_global_var_init.35
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.36) for __cxx_global_var_init.36
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.37) for __cxx_global_var_init.37
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.38) for __cxx_global_var_init.38
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.39) for __cxx_global_var_init.39
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.40) for __cxx_global_var_init.40
    main.o(.ARM.exidx.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text._GLOBAL__sub_I_main.cpp) for [Anonymous Symbol]
    main.o(.data.update1msObjects) refers to main.o(.bss.B1) for B1
    main.o(.data.update1msObjects) refers to main.o(.bss.H1) for H1
    main.o(.data.update1msObjects) refers to main.o(.bss.B2) for B2
    main.o(.data.update1msObjects) refers to main.o(.bss.H2) for H2
    main.o(.data.update1msObjects) refers to main.o(.bss.B3) for B3
    main.o(.data.update1msObjects) refers to main.o(.bss.H3) for H3
    main.o(.data.update1msObjects) refers to main.o(.bss.S4) for S4
    main.o(.data.update1msObjects) refers to main.o(.bss.S5) for S5
    main.o(.data.update1msObjects) refers to main.o(.bss.S6) for S6
    main.o(.data.update1msObjects) refers to main.o(.bss.M1) for M1
    main.o(.data.update1msObjects) refers to main.o(.bss.M2) for M2
    main.o(.data.update1msObjects) refers to main.o(.bss.M3) for M3
    main.o(.data.update1msObjects) refers to main.o(.bss.OB1s1Delay) for OB1s1Delay
    main.o(.data.update1msObjects) refers to main.o(.bss.OB1s2Delay) for OB1s2Delay
    main.o(.data.update1msObjects) refers to main.o(.bss.OB1s4Delay) for OB1s4Delay
    main.o(.data.update1msObjects) refers to main.o(.bss.OB1s4MeTimer) for OB1s4MeTimer
    main.o(.init_array) refers to main.o(.text._GLOBAL__sub_I_main.cpp) for _GLOBAL__sub_I_main.cpp
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to rt_memclr.o(.text) for __aeabi_memclr
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to main.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to main.o(.text.vApplicationIdleHook) for vApplicationIdleHook
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to main.o(.text.vApplicationTickHook) for vApplicationTickHook
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    ob1.o(.text._Z13resetAllStepsv) refers to main.o(.bss.OB1s0) for OB1s0
    ob1.o(.text._Z13resetAllStepsv) refers to sequence.o(.text._ZN8Sequence5resetEv) for Sequence::reset()
    ob1.o(.text._Z13resetAllStepsv) refers to main.o(.bss.OB1s1) for OB1s1
    ob1.o(.text._Z13resetAllStepsv) refers to main.o(.bss.OB1s2) for OB1s2
    ob1.o(.text._Z13resetAllStepsv) refers to main.o(.bss.OB1s3) for OB1s3
    ob1.o(.text._Z13resetAllStepsv) refers to main.o(.bss.OB1s4) for OB1s4
    ob1.o(.text._Z13resetAllStepsv) refers to main.o(.bss.OB1s5) for OB1s5
    ob1.o(.ARM.exidx.text._Z13resetAllStepsv) refers to ob1.o(.text._Z13resetAllStepsv) for [Anonymous Symbol]
    ob1.o(.text._Z7OB1TaskPv) refers to ob1.o(.text._Z13resetAllStepsv) for resetAllSteps()
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s1) for OB1s1
    ob1.o(.text._Z7OB1TaskPv) refers to sequence.o(.text._ZN8Sequence7startedEv) for Sequence::started()
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s1Delay) for OB1s1Delay
    ob1.o(.text._Z7OB1TaskPv) refers to on_delay.o(.text._ZN7OnDelayaSEb) for OnDelay::operator=(bool)
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s2) for OB1s2
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s2Delay) for OB1s2Delay
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s4) for OB1s4
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s4Delay) for OB1s4Delay
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s4MeTimer) for OB1s4MeTimer
    ob1.o(.text._Z7OB1TaskPv) refers to common_timer.o(.text._ZN11CommonTimeraSEb) for CommonTimer::operator=(bool)
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1step) for OB1step
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.H1) for H1
    ob1.o(.text._Z7OB1TaskPv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s0) for OB1s0
    ob1.o(.text._Z7OB1TaskPv) refers to sequence.o(.text._ZN8Sequence6slfSetEbbb) for Sequence::slfSet(bool, bool, bool)
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.C1) for C1
    ob1.o(.text._Z7OB1TaskPv) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.M1) for M1
    ob1.o(.text._Z7OB1TaskPv) refers to coil.o(.text._ZN9CoilPulseaSEb) for CoilPulse::operator=(bool)
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.Me1) for Me1
    ob1.o(.text._Z7OB1TaskPv) refers to on_delay.o(.text._ZN7OnDelay3getEv) for OnDelay::get()
    ob1.o(.text._Z7OB1TaskPv) refers to ob1.o(.text._ZL8setCoilsbbbbb) for setCoils(bool, bool, bool, bool, bool)
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.B1) for B1
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s3) for OB1s3
    ob1.o(.text._Z7OB1TaskPv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    ob1.o(.text._Z7OB1TaskPv) refers to sequence.o(.text._ZN8Sequence8finishedEv) for Sequence::finished()
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.S4) for S4
    ob1.o(.text._Z7OB1TaskPv) refers to simple_input.o(.text._ZN11SimpleInput11isNotActiveEv) for SimpleInput::isNotActive()
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s5) for OB1s5
    ob1.o(.text._Z7OB1TaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    ob1.o(.ARM.exidx.text._Z7OB1TaskPv) refers to ob1.o(.text._Z7OB1TaskPv) for [Anonymous Symbol]
    ob1.o(.text._ZL8setCoilsbbbbb) refers to main.o(.bss.C1) for C1
    ob1.o(.text._ZL8setCoilsbbbbb) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    ob1.o(.text._ZL8setCoilsbbbbb) refers to main.o(.bss.O1) for O1
    ob1.o(.text._ZL8setCoilsbbbbb) refers to main.o(.bss.D1) for D1
    ob1.o(.text._ZL8setCoilsbbbbb) refers to main.o(.bss.M1) for M1
    ob1.o(.text._ZL8setCoilsbbbbb) refers to coil.o(.text._ZN9CoilPulseaSEb) for CoilPulse::operator=(bool)
    ob1.o(.text._ZL8setCoilsbbbbb) refers to main.o(.bss.Me1) for Me1
    ob1.o(.ARM.exidx.text._ZL8setCoilsbbbbb) refers to ob1.o(.text._ZL8setCoilsbbbbb) for [Anonymous Symbol]
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.CHBs1) for CHBs1
    chb.o(.text._Z7CHBTaskPv) refers to sequence.o(.text._ZN8Sequence7startedEv) for Sequence::started()
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.CHBs1Delay) for CHBs1Delay
    chb.o(.text._Z7CHBTaskPv) refers to on_delay.o(.text._ZN7OnDelayaSEb) for OnDelay::operator=(bool)
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.CHBstep) for CHBstep
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.S5) for S5
    chb.o(.text._Z7CHBTaskPv) refers to simple_input.o(.text._ZN11SimpleInput11isNotActiveEv) for SimpleInput::isNotActive()
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.CHBs0) for CHBs0
    chb.o(.text._Z7CHBTaskPv) refers to sequence.o(.text._ZN8Sequence6slfSetEbbb) for Sequence::slfSet(bool, bool, bool)
    chb.o(.text._Z7CHBTaskPv) refers to chb.o(.text._ZL8setCoilsbb) for setCoils(bool, bool)
    chb.o(.text._Z7CHBTaskPv) refers to on_delay.o(.text._ZN7OnDelay3getEv) for OnDelay::get()
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.S4) for S4
    chb.o(.text._Z7CHBTaskPv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.CHBs2) for CHBs2
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.S6) for S6
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.M6) for M6
    chb.o(.text._Z7CHBTaskPv) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    chb.o(.text._Z7CHBTaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    chb.o(.ARM.exidx.text._Z7CHBTaskPv) refers to chb.o(.text._Z7CHBTaskPv) for [Anonymous Symbol]
    chb.o(.text._ZL8setCoilsbb) refers to main.o(.bss.D4) for D4
    chb.o(.text._ZL8setCoilsbb) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    chb.o(.text._ZL8setCoilsbb) refers to main.o(.bss.M7) for M7
    chb.o(.ARM.exidx.text._ZL8setCoilsbb) refers to chb.o(.text._ZL8setCoilsbb) for [Anonymous Symbol]
    common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence) refers to main.o(.bss.queue) for queue
    common_for_tasks.o(.ARM.exidx.text._Z14pushSeqInQueueP8Sequence) refers to common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence) for [Anonymous Symbol]
    common_for_tasks.o(.text._Z15getSeqFromQueuev) refers to main.o(.bss.queue) for queue
    common_for_tasks.o(.ARM.exidx.text._Z15getSeqFromQueuev) refers to common_for_tasks.o(.text._Z15getSeqFromQueuev) for [Anonymous Symbol]
    common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence) refers to main.o(.bss.queue) for queue
    common_for_tasks.o(.ARM.exidx.text._Z18deleteSeqFromQueueP8Sequence) refers to common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence) for [Anonymous Symbol]
    common.o(.ARM.exidx.text._Z10badTimeOutj) refers to common.o(.text._Z10badTimeOutj) for [Anonymous Symbol]
    common.o(.ARM.exidx.text._Z11getPositionj) refers to common.o(.text._Z11getPositionj) for [Anonymous Symbol]
    init.o(.text._Z10commonInitv) refers to init.o(.text._ZL26__NVIC_SetPriorityGroupingj) for __NVIC_SetPriorityGrouping(unsigned int)
    init.o(.text._Z10commonInitv) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    init.o(.ARM.exidx.text._Z10commonInitv) refers to init.o(.text._Z10commonInitv) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL26__NVIC_SetPriorityGroupingj) refers to init.o(.text._ZL26__NVIC_SetPriorityGroupingj) for [Anonymous Symbol]
    init.o(.text._Z7rccInitv) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    init.o(.ARM.exidx.text._Z7rccInitv) refers to init.o(.text._Z7rccInitv) for [Anonymous Symbol]
    init.o(.text._Z8tickInitv) refers to init.o(.text._ZL16__NVIC_EnableIRQ4IRQn) for __NVIC_EnableIRQ(IRQn)
    init.o(.text._Z8tickInitv) refers to init.o(.text._ZL18__NVIC_SetPriority4IRQnj) for __NVIC_SetPriority(IRQn, unsigned int)
    init.o(.ARM.exidx.text._Z8tickInitv) refers to init.o(.text._Z8tickInitv) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL16__NVIC_EnableIRQ4IRQn) refers to init.o(.text._ZL16__NVIC_EnableIRQ4IRQn) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL18__NVIC_SetPriority4IRQnj) refers to init.o(.text._ZL18__NVIC_SetPriority4IRQnj) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil8isActiveEv) refers to coil.o(.text._ZN12ProgrammCoil8isActiveEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil8setValueEb) refers to coil.o(.text._ZN12ProgrammCoil8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil3setEv) refers to coil.o(.text._ZN12ProgrammCoil3setEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil5resetEv) refers to coil.o(.text._ZN12ProgrammCoil5resetEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil6toggleEv) refers to coil.o(.text._ZN12ProgrammCoil6toggleEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoilaSEb) refers to coil.o(.text._ZN12ProgrammCoilaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN12ProgrammCoilC2Ev) for ProgrammCoil::ProgrammCoil__sub_object()
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.rodata._ZTV4Coil) for vtable for Coil
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    coil.o(.ARM.exidx.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4Coil8isActiveEv) refers to coil.o(.text._ZN4Coil8isActiveEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4Coil8setValueEb) refers to coil.o(.text._ZN4Coil8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4CoilaSEb) refers to coil.o(.text._ZN4CoilaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    coil.o(.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht) refers to coil.o(.rodata._ZTV11CoilDelayed) for vtable for CoilDelayed
    coil.o(.ARM.exidx.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    coil.o(.text._ZN11CoilDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer9update1msEv) for CommonTimer::update1ms()
    coil.o(.text._ZN11CoilDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    coil.o(.text._ZN11CoilDelayed9update1msEv) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.ARM.exidx.text._ZN11CoilDelayed9update1msEv) refers to coil.o(.text._ZN11CoilDelayed9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZThn16_N11CoilDelayed9update1msEv) refers to coil.o(.text._ZN11CoilDelayed9update1msEv) for CoilDelayed::update1ms()
    coil.o(.ARM.exidx.text._ZThn16_N11CoilDelayed9update1msEv) refers to coil.o(.text._ZThn16_N11CoilDelayed9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZN11CoilDelayed8isActiveEv) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.ARM.exidx.text._ZN11CoilDelayed8isActiveEv) refers to coil.o(.text._ZN11CoilDelayed8isActiveEv) for [Anonymous Symbol]
    coil.o(.text._ZN11CoilDelayed8setValueEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    coil.o(.ARM.exidx.text._ZN11CoilDelayed8setValueEb) refers to coil.o(.text._ZN11CoilDelayed8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN11CoilDelayedaSEb) refers to coil.o(.text._ZN11CoilDelayedaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.rodata._ZTV9CoilPulse) for vtable for CoilPulse
    coil.o(.ARM.exidx.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    coil.o(.text._ZN9CoilPulse9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer9update1msEv) for CommonTimer::update1ms()
    coil.o(.text._ZN9CoilPulse9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    coil.o(.text._ZN9CoilPulse9update1msEv) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.ARM.exidx.text._ZN9CoilPulse9update1msEv) refers to coil.o(.text._ZN9CoilPulse9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZThn16_N9CoilPulse9update1msEv) refers to coil.o(.text._ZN9CoilPulse9update1msEv) for CoilPulse::update1ms()
    coil.o(.ARM.exidx.text._ZThn16_N9CoilPulse9update1msEv) refers to coil.o(.text._ZThn16_N9CoilPulse9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZN9CoilPulse8isActiveEv) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.ARM.exidx.text._ZN9CoilPulse8isActiveEv) refers to coil.o(.text._ZN9CoilPulse8isActiveEv) for [Anonymous Symbol]
    coil.o(.text._ZN9CoilPulse8setValueEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    coil.o(.ARM.exidx.text._ZN9CoilPulse8setValueEb) refers to coil.o(.text._ZN9CoilPulse8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN9CoilPulseaSEb) refers to coil.o(.text._ZN9CoilPulseaSEb) for [Anonymous Symbol]
    coil.o(.rodata._ZTV4Coil) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.rodata._ZTV4Coil) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.rodata._ZTV11CoilDelayed) refers to coil.o(.text._ZN11CoilDelayed8isActiveEv) for CoilDelayed::isActive()
    coil.o(.rodata._ZTV11CoilDelayed) refers to coil.o(.text._ZN11CoilDelayed8setValueEb) for CoilDelayed::setValue(bool)
    coil.o(.rodata._ZTV11CoilDelayed) refers to coil.o(.text._ZN11CoilDelayed9update1msEv) for CoilDelayed::update1ms()
    coil.o(.rodata._ZTV11CoilDelayed) refers to coil.o(.text._ZThn16_N11CoilDelayed9update1msEv) for non-virtual thunk to CoilDelayed::update1ms()
    coil.o(.rodata._ZTV11CoilDelayed) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZN9CoilPulse8isActiveEv) for CoilPulse::isActive()
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZN9CoilPulse8setValueEb) for CoilPulse::setValue(bool)
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZN9CoilPulse9update1msEv) for CoilPulse::update1ms()
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZThn16_N9CoilPulse9update1msEv) for non-virtual thunk to CoilPulse::update1ms()
    coil.o(.rodata._ZTV9CoilPulse) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    coil.o(.rodata._ZTV12ProgrammCoil) refers to coil.o(.text._ZN12ProgrammCoil8isActiveEv) for ProgrammCoil::isActive()
    coil.o(.rodata._ZTV12ProgrammCoil) refers to coil.o(.text._ZN12ProgrammCoil8setValueEb) for ProgrammCoil::setValue(bool)
    gpio_common.o(.ARM.exidx.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseC2E7IMPULSE) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for [Anonymous Symbol]
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3setEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for [Anonymous Symbol]
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3getEv) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for [Anonymous Symbol]
    rf_impulse.o(.text._ZN9RFimpulseaSEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseaSEb) refers to rf_impulse.o(.text._ZN9RFimpulseaSEb) for [Anonymous Symbol]
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char)
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN7ISwitchC2Ev) for ISwitch::ISwitch__sub_object()
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to simple_input.o(.rodata._ZTV11SimpleInput) for vtable for SimpleInput
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    simple_input.o(.ARM.exidx.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    simple_input.o(.ARM.exidx.text._ZN11SimpleInput8isActiveEv) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.ARM.exidx.text._ZN11SimpleInput11isNotActiveEv) refers to simple_input.o(.text._ZN11SimpleInput11isNotActiveEv) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) for SimpleInput::SimpleInput__sub_object(GPIO_TypeDef*, unsigned char)
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.rodata._ZTV18SimpleInputDelayed) for vtable for SimpleInputDelayed
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for SimpleInput::isActive()
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer9update1msEv) for CommonTimer::update1ms()
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for [Anonymous Symbol]
    simple_input.o(.text._ZThn16_N18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for SimpleInputDelayed::update1ms()
    simple_input.o(.ARM.exidx.text._ZThn16_N18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZThn16_N18SimpleInputDelayed9update1msEv) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed8isActiveEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.rodata._ZTV11SimpleInput) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for SimpleInput::isActive()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for SimpleInputDelayed::update1ms()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZThn16_N18SimpleInputDelayed9update1msEv) for non-virtual thunk to SimpleInputDelayed::update1ms()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) refers to switch_delay.o(.rodata._ZTV11SwitchDelay) for vtable for SwitchDelay
    switch_delay.o(.ARM.exidx.text._ZN11SwitchDelayC2EP7ISwitcht) refers to switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) for [Anonymous Symbol]
    switch_delay.o(.text._ZN11SwitchDelay7startedEv) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay7startedEv) refers to switch_delay.o(.text._ZN11SwitchDelay7startedEv) for [Anonymous Symbol]
    switch_delay.o(.rodata._ZTV11SwitchDelay) refers to common_timer.o(.text._ZN11CommonTimer9update1msEv) for CommonTimer::update1ms()
    switch_delay.o(.rodata._ZTV11SwitchDelay) refers to switch_delay.o(.text._ZN11SwitchDelay7startedEv) for SwitchDelay::started()
    common_timer.o(.text._ZN11CommonTimerC2Ej) refers to common_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    common_timer.o(.text._ZN11CommonTimerC2Ej) refers to common_timer.o(.rodata._ZTV11CommonTimer) for vtable for CommonTimer
    common_timer.o(.ARM.exidx.text._ZN11CommonTimerC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer9update1msEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer8finishedEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer9getPeriodEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer9setPeriodEj) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer14getCurrentTimeEv) refers to common_timer.o(.text._ZN11CommonTimer14getCurrentTimeEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer14setCurrentTimeEj) refers to common_timer.o(.text._ZN11CommonTimer14setCurrentTimeEj) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5startEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5pauseEv) refers to common_timer.o(.text._ZN11CommonTimer5pauseEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer5pauseEv) for CommonTimer::pause()
    common_timer.o(.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for CommonTimer::reset()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5resetEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6finishEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6finishEv) refers to common_timer.o(.text._ZN11CommonTimer6finishEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimeraSEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    common_timer.o(.ARM.exidx.text._ZN11CommonTimeraSEb) refers to common_timer.o(.text._ZN11CommonTimeraSEb) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer7startedEv) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer10notStartedEv) refers to common_timer.o(.text._ZN11CommonTimer10notStartedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer11notFinishedEv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer15finishedImpulseEv) refers to common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6inWorkEv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for CommonTimer::notFinished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6inWorkEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer10notStartedEv) for CommonTimer::notStarted()
    common_timer.o(.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer6isFreeEv) for [Anonymous Symbol]
    common_timer.o(.rodata._ZTV11CommonTimer) refers to common_timer.o(.text._ZN11CommonTimer9update1msEv) for CommonTimer::update1ms()
    common_timer.o(.rodata._ZTV11CommonTimer) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to common_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to off_delay.o(.rodata._ZTV8OffDelay) for vtable for OffDelay
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer(unsigned int)
    off_delay.o(.ARM.exidx.text._ZN8OffDelayC2Ej) refers to off_delay.o(.text._ZN8OffDelayC2Ej) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelayD2Ev) refers to off_delay.o(.rodata._ZTV8OffDelay) for vtable for OffDelay
    off_delay.o(.text._ZN8OffDelayD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    off_delay.o(.ARM.exidx.text._ZN8OffDelayD2Ev) refers to off_delay.o(.text._ZN8OffDelayD2Ev) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelay9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    off_delay.o(.text._ZN8OffDelay9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    off_delay.o(.ARM.exidx.text._ZN8OffDelay9update1msEv) refers to off_delay.o(.text._ZN8OffDelay9update1msEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelay3setEb) refers to common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) for CommonTimer::prepareAndStart()
    off_delay.o(.text._ZN8OffDelay3setEb) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    off_delay.o(.ARM.exidx.text._ZN8OffDelay3setEb) refers to off_delay.o(.text._ZN8OffDelay3setEb) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelay3getEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    off_delay.o(.ARM.exidx.text._ZN8OffDelay3getEv) refers to off_delay.o(.text._ZN8OffDelay3getEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelay5resetEv) refers to common_timer.o(.text._ZN11CommonTimer6finishEv) for CommonTimer::finish()
    off_delay.o(.ARM.exidx.text._ZN8OffDelay5resetEv) refers to off_delay.o(.text._ZN8OffDelay5resetEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelayaSEb) refers to off_delay.o(.text._ZN8OffDelay3setEb) for OffDelay::set(bool)
    off_delay.o(.ARM.exidx.text._ZN8OffDelayaSEb) refers to off_delay.o(.text._ZN8OffDelayaSEb) for [Anonymous Symbol]
    off_delay.o(.rodata._ZTV8OffDelay) refers to off_delay.o(.text._ZN8OffDelay9update1msEv) for OffDelay::update1ms()
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to common_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to on_delay.o(.rodata._ZTV7OnDelay) for vtable for OnDelay
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer(unsigned int)
    on_delay.o(.ARM.exidx.text._ZN7OnDelayC2Ej) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelayD2Ev) refers to on_delay.o(.rodata._ZTV7OnDelay) for vtable for OnDelay
    on_delay.o(.text._ZN7OnDelayD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    on_delay.o(.ARM.exidx.text._ZN7OnDelayD2Ev) refers to on_delay.o(.text._ZN7OnDelayD2Ev) for [Anonymous Symbol]
    on_delay.o(.ARM.exidx.text._ZN7OnDelay9update1msEv) refers to on_delay.o(.text._ZN7OnDelay9update1msEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelay3setEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    on_delay.o(.ARM.exidx.text._ZN7OnDelay3setEb) refers to on_delay.o(.text._ZN7OnDelay3setEb) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelay3getEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    on_delay.o(.ARM.exidx.text._ZN7OnDelay3getEv) refers to on_delay.o(.text._ZN7OnDelay3getEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelay5resetEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for CommonTimer::reset()
    on_delay.o(.ARM.exidx.text._ZN7OnDelay5resetEv) refers to on_delay.o(.text._ZN7OnDelay5resetEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelayaSEb) refers to on_delay.o(.text._ZN7OnDelay3setEb) for OnDelay::set(bool)
    on_delay.o(.ARM.exidx.text._ZN7OnDelayaSEb) refers to on_delay.o(.text._ZN7OnDelayaSEb) for [Anonymous Symbol]
    on_delay.o(.rodata._ZTV7OnDelay) refers to on_delay.o(.text._ZN7OnDelay9update1msEv) for OnDelay::update1ms()
    pulse.o(.text._ZN5PulseC2Ej) refers to common_timer.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    pulse.o(.text._ZN5PulseC2Ej) refers to pulse.o(.rodata._ZTV5Pulse) for vtable for Pulse
    pulse.o(.text._ZN5PulseC2Ej) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    pulse.o(.text._ZN5PulseC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer(unsigned int)
    pulse.o(.ARM.exidx.text._ZN5PulseC2Ej) refers to pulse.o(.text._ZN5PulseC2Ej) for [Anonymous Symbol]
    pulse.o(.text._ZN5PulseD2Ev) refers to pulse.o(.rodata._ZTV5Pulse) for vtable for Pulse
    pulse.o(.text._ZN5PulseD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    pulse.o(.ARM.exidx.text._ZN5PulseD2Ev) refers to pulse.o(.text._ZN5PulseD2Ev) for [Anonymous Symbol]
    pulse.o(.text._ZN5Pulse9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    pulse.o(.text._ZN5Pulse9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    pulse.o(.ARM.exidx.text._ZN5Pulse9update1msEv) refers to pulse.o(.text._ZN5Pulse9update1msEv) for [Anonymous Symbol]
    pulse.o(.text._ZN5Pulse3setEb) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    pulse.o(.text._ZN5Pulse3setEb) refers to common_timer.o(.text._ZN11CommonTimer6isFreeEv) for CommonTimer::isFree()
    pulse.o(.ARM.exidx.text._ZN5Pulse3setEb) refers to pulse.o(.text._ZN5Pulse3setEb) for [Anonymous Symbol]
    pulse.o(.text._ZN5Pulse3getEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    pulse.o(.ARM.exidx.text._ZN5Pulse3getEv) refers to pulse.o(.text._ZN5Pulse3getEv) for [Anonymous Symbol]
    pulse.o(.text._ZN5Pulse5resetEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    pulse.o(.ARM.exidx.text._ZN5Pulse5resetEv) refers to pulse.o(.text._ZN5Pulse5resetEv) for [Anonymous Symbol]
    pulse.o(.text._ZN5PulseaSEb) refers to pulse.o(.text._ZN5Pulse3setEb) for Pulse::set(bool)
    pulse.o(.ARM.exidx.text._ZN5PulseaSEb) refers to pulse.o(.text._ZN5PulseaSEb) for [Anonymous Symbol]
    pulse.o(.rodata._ZTV5Pulse) refers to pulse.o(.text._ZN5Pulse9update1msEv) for Pulse::update1ms()
    sequence.o(.text._ZN8SequenceC2EPhh) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for RFimpulse::RFimpulse__sub_object(IMPULSE)
    sequence.o(.ARM.exidx.text._ZN8SequenceC2EPhh) refers to sequence.o(.text._ZN8SequenceC2EPhh) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence8isMyStepEv) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence5resetEv) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence5resetEv) refers to sequence.o(.text._ZN8Sequence5resetEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence5startEb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.ARM.exidx.text._ZN8Sequence5startEb) refers to sequence.o(.text._ZN8Sequence5startEb) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence4lockEb) refers to sequence.o(.text._ZN8Sequence4lockEb) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence6finishEb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.text._ZN8Sequence6finishEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence6finishEb) refers to sequence.o(.text._ZN8Sequence6finishEb) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence5startEb) for Sequence::start(bool)
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence4lockEb) for Sequence::lock(bool)
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence6slfSetEbbb) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence7startedEv) refers to sequence.o(.text._ZN8Sequence7startedEv) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence6lockedEv) refers to sequence.o(.text._ZN8Sequence6lockedEv) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence8finishedEv) refers to sequence.o(.text._ZN8Sequence8finishedEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence15finishedImpulseEv) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for RFimpulse::get()
    sequence.o(.ARM.exidx.text._ZN8Sequence15finishedImpulseEv) refers to sequence.o(.text._ZN8Sequence15finishedImpulseEv) for [Anonymous Symbol]
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(RESET) refers to main.o(.text.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text.SystemInit) refers to system_stm32f10x.o(.text.SetSysClock) for SetSysClock
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(.ARM.exidx.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClock) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72) refers to system_stm32f10x.o(.text.SetSysClockTo72) for [Anonymous Symbol]
    atexit_cxa.o(.text) refers to cxa_atexit.o(.text) for __cxa_atexit
    atexit_cxa.o(.ARM.exidx) refers to atexit_cxa.o(.text) for .text
    cxa_atexit.o(.text) refers to aeabi_atexit.o(.text) for __aeabi_atexit
    cxa_atexit.o(.ARM.exidx) refers to cxa_atexit.o(.text) for .text
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    init_aeabi.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.init_array) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.dummy_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers to init_aeabi.o(.text) for .text
    new.cpp.o(.text._ZSt17__throw_bad_allocv) refers to abort.o(.text) for abort
    new.cpp.o(.ARM.exidx.text._ZSt17__throw_bad_allocv) refers to new.cpp.o(.text._ZSt17__throw_bad_allocv) for [Anonymous Symbol]
    new.cpp.o(.text._Znwj) refers to h1_alloc.o(.text) for malloc
    new.cpp.o(.text._Znwj) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for std::get_new_handler()
    new.cpp.o(.ARM.exidx.text._Znwj) refers to new.cpp.o(.text._Znwj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjRKSt9nothrow_t) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    new.cpp.o(.ARM.exidx.text._ZnwjRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._Znaj) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    new.cpp.o(.ARM.exidx.text._Znaj) refers to new.cpp.o(.text._Znaj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajRKSt9nothrow_t) refers to new.cpp.o(.text._Znaj) for operator new[](unsigned int)
    new.cpp.o(.ARM.exidx.text._ZnajRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPv) refers to h1_free.o(.text) for free
    new.cpp.o(.ARM.exidx.text._ZdlPv) refers to new.cpp.o(.text._ZdlPv) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdlPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvj) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdlPvj) refers to new.cpp.o(.text._ZdlPvj) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPv) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdaPv) refers to new.cpp.o(.text._ZdaPv) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    new.cpp.o(.ARM.exidx.text._ZdaPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvj) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    new.cpp.o(.ARM.exidx.text._ZdaPvj) refers to new.cpp.o(.text._ZdaPvj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjSt11align_val_t) refers to h1_memalign.o(.text) for posix_memalign
    new.cpp.o(.text._ZnwjSt11align_val_t) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for std::get_new_handler()
    new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for operator new(unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajSt11align_val_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for operator new(unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_t) refers to new.cpp.o(.text._ZnajSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajSt11align_val_t) for operator new[](unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvSt11align_val_t) refers to h1_free.o(.text) for free
    new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvjSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdlPvjSt11align_val_t) refers to new.cpp.o(.text._ZdlPvjSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for operator delete[](void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvjSt11align_val_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for operator delete[](void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvjSt11align_val_t) refers to new.cpp.o(.text._ZdaPvjSt11align_val_t) for [Anonymous Symbol]
    cxa_virtual.cpp.o(.text.__cxa_pure_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for [Anonymous Symbol]
    cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) for [Anonymous Symbol]
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_memalign.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_free_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign_threads.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_memalign_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to mutex_dummy.o(.text) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    abort.o(.text) refers to defsig_abrt_outer.o(.text) for __rt_SIGABRT
    abort.o(.text) refers (Weak) to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    abort.o(.text) refers to sys_exit.o(.text) for _sys_exit
    atexit_aeabi.o(.text) refers to aeabi_atexit.o(.text) for __aeabi_atexit
    atexit_aeabi.o(.ARM.exidx) refers to atexit_aeabi.o(.text) for .text
    aeabi_atexit.o(.text) refers (Special) to cxa_finalize.o(.text) for __cxa_finalize
    aeabi_atexit.o(.text) refers to h1_alloc.o(.text) for malloc
    aeabi_atexit.o(.text) refers to rt_ddtor_pointer_addr_intlibspace.o(.text) for __rt_ddtor_pointer_addr
    aeabi_atexit.o(.ARM.exidx) refers (Special) to cxa_finalize.o(.text) for __cxa_finalize
    aeabi_atexit.o(.ARM.exidx) refers to aeabi_atexit.o(.text) for .text
    libinit2.o(.ARM.Collect$$libinit$$00000007) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000033) refers (Weak) to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt14get_unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt12__unexpectedPFvvE) refers to cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt10unexpectedv) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_handlers.cpp.o(.text._ZSt10unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) for std::__unexpected(void (*)())
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt10unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt10unexpectedv) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt13get_terminatev) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt13get_terminatev) refers to cxa_handlers.cpp.o(.text._ZSt13get_terminatev) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt11__terminatePFvvE) refers to cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt9terminatev) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_handlers.cpp.o(.text._ZSt9terminatev) refers to cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) for std::__terminate(void (*)())
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt9terminatev) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) refers to cxa_default_handlers.cpp.o(.bss.__cxa_new_handler) for __cxa_new_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt15get_new_handlerv) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for [Anonymous Symbol]
    abort_message.cpp.o(.text.abort_message) refers to abort.o(.text) for abort
    abort_message.cpp.o(.ARM.exidx.text.abort_message) refers to abort_message.cpp.o(.text.abort_message) for [Anonymous Symbol]
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_ddtor_pointer_addr.o(.text) refers to rt_ddtor_pointer_addr.o(.bss) for __rt_ddtor_pointer_addr_data
    rt_ddtor_pointer_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000007) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc1.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init.o(.text) for __Heap_Initialize
    h1_init_threads.o(.text) refers to mutex_dummy.o(.text) for _mutex_initialize
    cxa_finalize.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) for __rt_lib_shutdown_cpp_2
    cxa_finalize.o(.text) refers to rt_ddtor_pointer_addr_intlibspace.o(.text) for __rt_ddtor_pointer_addr
    cxa_finalize.o(.text) refers to h1_free.o(.text) for free
    cxa_finalize.o(.ARM.exidx) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) for __rt_lib_shutdown_cpp_2
    cxa_finalize.o(.ARM.exidx) refers to cxa_finalize.o(.text) for .text
    defsig_abrt_outer.o(.text) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig_abrt_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_abrt_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt14set_unexpectedPFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) refers to abort.o(.text) for abort
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt13set_terminatePFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE) refers to cxa_default_handlers.cpp.o(.bss.__cxa_new_handler) for __cxa_new_handler
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt15set_new_handlerPFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) refers to abort.o(.text) for abort
    cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free.o(.text) for free
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) refers (Weak) to cxa_finalize.o(.text) for __cxa_finalize
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final.o(.text) for __Heap_Finalize
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    init.o(.ARM.exidx.text._Z11setRegisterIVjEvPT_jj) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for [Anonymous Symbol]
    coil.o(.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.text._ZN7ISwitchC2Ev) for ISwitch::ISwitch__sub_object()
    coil.o(.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.rodata._ZTV12ProgrammCoil) for vtable for ProgrammCoil
    coil.o(.ARM.exidx.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.text._ZN12ProgrammCoilC2Ev) for [Anonymous Symbol]
    coil.o(.text._Z17setBitsInRegisterIVjEvPT_jj) refers to common.o(.text._Z11getPositionj) for getPosition(unsigned int)
    coil.o(.ARM.exidx.text._Z17setBitsInRegisterIVjEvPT_jj) refers to coil.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for [Anonymous Symbol]
    coil.o(.text._ZN7ISwitchC2Ev) refers to coil.o(.rodata._ZTV7ISwitch) for vtable for ISwitch
    coil.o(.ARM.exidx.text._ZN7ISwitchC2Ev) refers to coil.o(.text._ZN7ISwitchC2Ev) for [Anonymous Symbol]
    coil.o(.rodata._ZTV7ISwitch) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    common_timer.o(.text._ZN11IUpdated1msC2Ev) refers to common_timer.o(.rodata._ZTV11IUpdated1ms) for vtable for IUpdated1ms
    common_timer.o(.ARM.exidx.text._ZN11IUpdated1msC2Ev) refers to common_timer.o(.text._ZN11IUpdated1msC2Ev) for [Anonymous Symbol]
    common_timer.o(.rodata._ZTV11IUpdated1ms) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.1), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.2), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.3), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.4), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.5), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.6), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.7), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.8), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.9), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.10), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.11), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.12), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.13), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.14), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.15), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.16), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.17), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.18), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.19), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.20), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.21), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.22), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.23), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.24), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.25), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.26), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.27), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.28), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.29), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.30), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.31), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.32), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.33), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.34), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.35), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.36), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.37), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.38), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.39), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.40), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationTickHook), (8 bytes).
    Removing main.o(.text.vApplicationMallocFailedHook), (4 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.TIM2_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text._GLOBAL__sub_I_main.cpp), (8 bytes).
    Removing main.o(.bss.queue), (12 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (246 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (224 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (300 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (362 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (414 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.prvCopyDataToQueue), (204 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (46 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (210 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (194 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (38 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (342 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (198 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (20 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (140 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (64 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (100 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (58 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (88 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (24 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (56 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (322 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (128 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (186 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (242 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (134 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (74 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (136 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (172 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (64 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (12 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (138 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (244 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (454 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (342 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (236 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (292 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetSchedulerState), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (348 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (240 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (312 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (430 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (540 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (406 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (148 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (16 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing ob1.o(.text), (0 bytes).
    Removing ob1.o(.ARM.exidx.text._Z13resetAllStepsv), (8 bytes).
    Removing ob1.o(.ARM.exidx.text._Z7OB1TaskPv), (8 bytes).
    Removing ob1.o(.ARM.exidx.text._ZL8setCoilsbbbbb), (8 bytes).
    Removing chb.o(.text), (0 bytes).
    Removing chb.o(.text._Z7CHBTaskPv), (256 bytes).
    Removing chb.o(.ARM.exidx.text._Z7CHBTaskPv), (8 bytes).
    Removing chb.o(.text._ZL8setCoilsbb), (56 bytes).
    Removing chb.o(.ARM.exidx.text._ZL8setCoilsbb), (8 bytes).
    Removing common_for_tasks.o(.text), (0 bytes).
    Removing common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence), (94 bytes).
    Removing common_for_tasks.o(.ARM.exidx.text._Z14pushSeqInQueueP8Sequence), (8 bytes).
    Removing common_for_tasks.o(.text._Z15getSeqFromQueuev), (86 bytes).
    Removing common_for_tasks.o(.ARM.exidx.text._Z15getSeqFromQueuev), (8 bytes).
    Removing common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence), (84 bytes).
    Removing common_for_tasks.o(.ARM.exidx.text._Z18deleteSeqFromQueueP8Sequence), (8 bytes).
    Removing common.o(.text), (0 bytes).
    Removing common.o(.text._Z10badTimeOutj), (34 bytes).
    Removing common.o(.ARM.exidx.text._Z10badTimeOutj), (8 bytes).
    Removing common.o(.ARM.exidx.text._Z11getPositionj), (8 bytes).
    Removing init.o(.text), (0 bytes).
    Removing init.o(.ARM.exidx.text._Z10commonInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL26__NVIC_SetPriorityGroupingj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z7rccInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z8tickInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL16__NVIC_EnableIRQ4IRQn), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL18__NVIC_SetPriority4IRQnj), (8 bytes).
    Removing coil.o(.text), (0 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil8setValueEb), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil3setEv), (20 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil3setEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil5resetEv), (20 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil5resetEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil6toggleEv), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil6toggleEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoilaSEb), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoilaSEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4CoilC2EP12GPIO_TypeDefh), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4Coil8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4Coil8setValueEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4CoilaSEb), (8 bytes).
    Removing coil.o(.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht), (66 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht), (8 bytes).
    Removing coil.o(.text._ZN11CoilDelayed9update1msEv), (36 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilDelayed9update1msEv), (8 bytes).
    Removing coil.o(.text._ZThn16_N11CoilDelayed9update1msEv), (14 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn16_N11CoilDelayed9update1msEv), (8 bytes).
    Removing coil.o(.text._ZN11CoilDelayed8isActiveEv), (16 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilDelayed8isActiveEv), (8 bytes).
    Removing coil.o(.text._ZN11CoilDelayed8setValueEb), (30 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilDelayed8setValueEb), (8 bytes).
    Removing coil.o(.text._ZN11CoilDelayedaSEb), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilDelayedaSEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulseC2EP12GPIO_TypeDefht), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulse9update1msEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn16_N9CoilPulse9update1msEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulse8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulse8setValueEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulseaSEb), (8 bytes).
    Removing coil.o(.rodata._ZTV11CoilDelayed), (36 bytes).
    Removing gpio_common.o(.text), (0 bytes).
    Removing gpio_common.o(.ARM.exidx.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh), (8 bytes).
    Removing rf_impulse.o(.text), (0 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseC2E7IMPULSE), (8 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3setEb), (8 bytes).
    Removing rf_impulse.o(.text._ZN9RFimpulse3getEv), (32 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3getEv), (8 bytes).
    Removing rf_impulse.o(.text._ZN9RFimpulseaSEb), (32 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseaSEb), (8 bytes).
    Removing simple_input.o(.text), (0 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInputC2EP12GPIO_TypeDefh), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInput8isActiveEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInput11isNotActiveEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed9update1msEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZThn16_N18SimpleInputDelayed9update1msEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed8isActiveEv), (8 bytes).
    Removing switch_delay.o(.text), (0 bytes).
    Removing switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht), (46 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZN11SwitchDelayC2EP7ISwitcht), (8 bytes).
    Removing switch_delay.o(.text._ZN11SwitchDelay7startedEv), (48 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay7startedEv), (8 bytes).
    Removing switch_delay.o(.rodata._ZTV11SwitchDelay), (16 bytes).
    Removing common_timer.o(.text), (0 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimerC2Ej), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer9update1msEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer8finishedEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer9getPeriodEv), (12 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer9getPeriodEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer9setPeriodEj), (16 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer9setPeriodEj), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer14getCurrentTimeEv), (12 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer14getCurrentTimeEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer14setCurrentTimeEj), (16 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer14setCurrentTimeEj), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5startEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5pauseEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer4stopEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5resetEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv), (24 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer15prepareAndStartEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer6finishEv), (24 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6finishEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer8setStartEb), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimeraSEb), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer7startedEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer10notStartedEv), (16 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer10notStartedEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer11notFinishedEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv), (76 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer15finishedImpulseEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6inWorkEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer6isFreeEv), (44 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6isFreeEv), (8 bytes).
    Removing off_delay.o(.text), (0 bytes).
    Removing off_delay.o(.text._ZN8OffDelayC2Ej), (58 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelayC2Ej), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelayD2Ev), (46 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelayD2Ev), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelay9update1msEv), (44 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelay9update1msEv), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelay3setEb), (72 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelay3setEb), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelay3getEv), (44 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelay3getEv), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelay5resetEv), (18 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelay5resetEv), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelayaSEb), (32 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelayaSEb), (8 bytes).
    Removing off_delay.o(.rodata._ZTV8OffDelay), (12 bytes).
    Removing on_delay.o(.text), (0 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelayC2Ej), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelayD2Ev), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelay9update1msEv), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelay3setEb), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelay3getEv), (8 bytes).
    Removing on_delay.o(.text._ZN7OnDelay5resetEv), (18 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelay5resetEv), (8 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelayaSEb), (8 bytes).
    Removing pulse.o(.text), (0 bytes).
    Removing pulse.o(.text._ZN5PulseC2Ej), (58 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5PulseC2Ej), (8 bytes).
    Removing pulse.o(.text._ZN5PulseD2Ev), (46 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5PulseD2Ev), (8 bytes).
    Removing pulse.o(.text._ZN5Pulse9update1msEv), (44 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5Pulse9update1msEv), (8 bytes).
    Removing pulse.o(.text._ZN5Pulse3setEb), (76 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5Pulse3setEb), (8 bytes).
    Removing pulse.o(.text._ZN5Pulse3getEv), (18 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5Pulse3getEv), (8 bytes).
    Removing pulse.o(.text._ZN5Pulse5resetEv), (22 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5Pulse5resetEv), (8 bytes).
    Removing pulse.o(.text._ZN5PulseaSEb), (32 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5PulseaSEb), (8 bytes).
    Removing pulse.o(.rodata._ZTV5Pulse), (12 bytes).
    Removing sequence.o(.text), (0 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8SequenceC2EPhh), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence8isMyStepEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence5resetEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence5startEb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence4lockEb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6finishEb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6slfSetEbbb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence7startedEv), (8 bytes).
    Removing sequence.o(.text._ZN8Sequence6lockedEv), (16 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6lockedEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence8finishedEv), (8 bytes).
    Removing sequence.o(.text._ZN8Sequence15finishedImpulseEv), (16 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence15finishedImpulseEv), (8 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72), (8 bytes).
    Removing new.cpp.o(.text), (0 bytes).
    Removing new.cpp.o(.text._ZSt17__throw_bad_allocv), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZSt17__throw_bad_allocv), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._Znwj), (8 bytes).
    Removing new.cpp.o(.text._ZnwjRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._Znaj), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._Znaj), (8 bytes).
    Removing new.cpp.o(.text._ZnajRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPv), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvj), (8 bytes).
    Removing new.cpp.o(.text._ZdaPv), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPv), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvj), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvj), (8 bytes).
    Removing new.cpp.o(.text._ZnwjSt11align_val_t), (74 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZnajSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvjSt11align_val_t), (6 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvjSt11align_val_t), (6 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.rodata._ZSt7nothrow), (1 bytes).
    Removing cxa_virtual.cpp.o(.text), (0 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual), (8 bytes).
    Removing cxa_virtual.cpp.o(.text.__cxa_deleted_virtual), (44 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual), (8 bytes).
    Removing cxa_handlers.cpp.o(.text), (0 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv), (12 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt14get_unexpectedv), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE), (52 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt12__unexpectedPFvvE), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt10unexpectedv), (14 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt10unexpectedv), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt13get_terminatev), (12 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt13get_terminatev), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE), (48 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt11__terminatePFvvE), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt9terminatev), (14 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt9terminatev), (8 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt15get_new_handlerv), (8 bytes).
    Removing abort_message.cpp.o(.text), (0 bytes).
    Removing abort_message.cpp.o(.ARM.exidx.text.abort_message), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text), (0 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE), (30 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt14set_unexpectedPFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE), (30 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt13set_terminatePFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE), (18 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt15set_new_handlerPFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler), (4 bytes).
    Removing cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler), (4 bytes).
    Removing init.o(.ARM.exidx.text._Z11setRegisterIVjEvPT_jj), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoilC2Ev), (8 bytes).
    Removing coil.o(.ARM.exidx.text._Z17setBitsInRegisterIVjEvPT_jj), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN7ISwitchC2Ev), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11IUpdated1msC2Ev), (8 bytes).

610 unused section(s) (total 19437 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ddtor_pointer_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ddtor_pointer_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  mutex_dummy.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_memalign.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_memalign_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/r_arm_target.c                   0x00000000   Number         0  __ARM_resolve_target1.o ABSOLUTE
    ../clib/r_arm_target.c                   0x00000000   Number         0  __ARM_resolve_target1_abs32.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  atexit_cxa.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  cxa_atexit.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  abort.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  atexit_aeabi.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  aeabi_atexit.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  cxa_finalize.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    RTE/Device/STM32F103C8/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    abort_message.cpp                        0x00000000   Number         0  abort_message.cpp.o ABSOLUTE
    chb.cpp                                  0x00000000   Number         0  chb.o ABSOLUTE
    coil.cpp                                 0x00000000   Number         0  coil.o ABSOLUTE
    common.cpp                               0x00000000   Number         0  common.o ABSOLUTE
    common_for_tasks.cpp                     0x00000000   Number         0  common_for_tasks.o ABSOLUTE
    common_timer.cpp                         0x00000000   Number         0  common_timer.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    cxa_default_handlers.cpp                 0x00000000   Number         0  cxa_default_handlers.cpp.o ABSOLUTE
    cxa_handlers.cpp                         0x00000000   Number         0  cxa_handlers.cpp.o ABSOLUTE
    cxa_virtual.cpp                          0x00000000   Number         0  cxa_virtual.cpp.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    gpio_common.cpp                          0x00000000   Number         0  gpio_common.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.cpp                                 0x00000000   Number         0  init.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.cpp                                 0x00000000   Number         0  main.o ABSOLUTE
    new.cpp                                  0x00000000   Number         0  new.cpp.o ABSOLUTE
    ob1.cpp                                  0x00000000   Number         0  ob1.o ABSOLUTE
    off_delay.cpp                            0x00000000   Number         0  off_delay.o ABSOLUTE
    on_delay.cpp                             0x00000000   Number         0  on_delay.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    pulse.cpp                                0x00000000   Number         0  pulse.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    rf_impulse.cpp                           0x00000000   Number         0  rf_impulse.o ABSOLUTE
    sequence.cpp                             0x00000000   Number         0  sequence.o ABSOLUTE
    simple_input.cpp                         0x00000000   Number         0  simple_input.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    switch_delay.cpp                         0x00000000   Number         0  switch_delay.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000128   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000144   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000160   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000007          0x08000162   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000007)
    .ARM.Collect$$libinit$$0000000C          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0800016a   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libinit$$00000034          0x0800016e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800016e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000170   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000001      0x08000172   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$00000001)
    .ARM.Collect$$libshutdown$$00000002      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000178   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800017a   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800017a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800017a   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x08000180   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x08000180   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000184   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000184   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800018c   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800018e   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800018e   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000192   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x08000198   Section       64  startup_stm32f10x_md.o(.text)
    .text                                    0x080001d8   Section        0  cxa_atexit.o(.text)
    .text                                    0x080001e2   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0800026c   Section       16  aeabi_memset4.o(.text)
    .text                                    0x0800027c   Section       68  rt_memclr.o(.text)
    .text                                    0x080002c0   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0800030e   Section        0  heapauxi.o(.text)
    .text                                    0x08000314   Section        0  init_aeabi.o(.text)
    .text                                    0x08000338   Section        0  h1_alloc.o(.text)
    .text                                    0x08000396   Section        0  h1_free.o(.text)
    .text                                    0x080003e4   Section        0  abort.o(.text)
    .text                                    0x080003fa   Section        0  aeabi_atexit.o(.text)
    .text                                    0x08000428   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0800048c   Section        0  sys_exit.o(.text)
    .text                                    0x08000498   Section        8  rt_heap_descriptor_intlibspace.o(.text)
    .text                                    0x080004a0   Section        8  rt_ddtor_pointer_addr_intlibspace.o(.text)
    .text                                    0x080004a8   Section        0  hguard.o(.text)
    .text                                    0x080004ac   Section        0  init_alloc.o(.text)
    .text                                    0x08000536   Section        0  h1_init.o(.text)
    .text                                    0x08000544   Section        0  cxa_finalize.o(.text)
    .text                                    0x08000586   Section        0  defsig_abrt_outer.o(.text)
    .text                                    0x08000594   Section        8  libspace.o(.text)
    .text                                    0x0800059c   Section        2  use_no_semi.o(.text)
    .text                                    0x0800059e   Section        0  indicate_semi.o(.text)
    .text                                    0x0800059e   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080005e8   Section        0  maybetermalloc1.o(.text)
    .text                                    0x080005e8   Section        0  h1_extend.o(.text)
    .text                                    0x0800061c   Section        0  exit.o(.text)
    .text                                    0x0800062e   Section        0  defsig_exit.o(.text)
    .text                                    0x08000638   Section        0  defsig_abrt_inner.o(.text)
    .text                                    0x08000668   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x08000676   Section        0  defsig_general.o(.text)
    .text                                    0x080006a8   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x080006f8   Section        0  sys_wrch.o(.text)
    [Anonymous Symbol]                       0x08000710   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x08000750   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08000760   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08000780   Number         0  port.o(.text.SVC_Handler)
    SetSysClock                              0x08000785   Thumb Code     8  system_stm32f10x.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08000784   Section        0  system_stm32f10x.o(.text.SetSysClock)
    SetSysClockTo72                          0x0800078d   Thumb Code   290  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x0800078c   Section        0  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x080008b0   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080008ec   Section        0  system_stm32f10x.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x08000a10   Section        0  system_stm32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000a78   Section        0  main.o(.text.TIM2_IRQHandler)
    _GLOBAL__sub_I_main.cpp                  0x08000ac5   Thumb Code   168  main.o(.text._GLOBAL__sub_I_main.cpp)
    [Anonymous Symbol]                       0x08000ac4   Section        0  main.o(.text._GLOBAL__sub_I_main.cpp)
    [Anonymous Symbol]                       0x08000b6c   Section        0  init.o(.text._Z10commonInitv)
    [Anonymous Symbol]                       0x08000b7c   Section        0  common.o(.text._Z11getPositionj)
    [Anonymous Symbol]                       0x08000bbc   Section        0  init.o(.text._Z11setRegisterIVjEvPT_jj)
    [Anonymous Symbol]                       0x08000bdc   Section        0  ob1.o(.text._Z13resetAllStepsv)
    [Anonymous Symbol]                       0x08000c28   Section        0  coil.o(.text._Z17setBitsInRegisterIVjEvPT_jj)
    [Anonymous Symbol]                       0x08000c6c   Section        0  ob1.o(.text._Z7OB1TaskPv)
    [Anonymous Symbol]                       0x08000ec4   Section        0  init.o(.text._Z7rccInitv)
    [Anonymous Symbol]                       0x08000f84   Section        0  init.o(.text._Z8tickInitv)
    __NVIC_EnableIRQ(IRQn)                   0x08000fdd   Thumb Code    48  init.o(.text._ZL16__NVIC_EnableIRQ4IRQn)
    [Anonymous Symbol]                       0x08000fdc   Section        0  init.o(.text._ZL16__NVIC_EnableIRQ4IRQn)
    __NVIC_SetPriority(IRQn, unsigned int)   0x0800100d   Thumb Code    66  init.o(.text._ZL18__NVIC_SetPriority4IRQnj)
    [Anonymous Symbol]                       0x0800100c   Section        0  init.o(.text._ZL18__NVIC_SetPriority4IRQnj)
    __NVIC_SetPriorityGrouping(unsigned int) 0x08001051   Thumb Code    60  init.o(.text._ZL26__NVIC_SetPriorityGroupingj)
    [Anonymous Symbol]                       0x08001050   Section        0  init.o(.text._ZL26__NVIC_SetPriorityGroupingj)
    setCoils(bool, bool, bool, bool, bool)   0x0800108d   Thumb Code   132  ob1.o(.text._ZL8setCoilsbbbbb)
    [Anonymous Symbol]                       0x0800108c   Section        0  ob1.o(.text._ZL8setCoilsbbbbb)
    [Anonymous Symbol]                       0x08001110   Section        0  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x080011f4   Section        0  common_timer.o(.text._ZN11CommonTimer11notFinishedEv)
    [Anonymous Symbol]                       0x0800120c   Section        0  common_timer.o(.text._ZN11CommonTimer4stopEv)
    [Anonymous Symbol]                       0x08001224   Section        0  common_timer.o(.text._ZN11CommonTimer5pauseEv)
    [Anonymous Symbol]                       0x08001234   Section        0  common_timer.o(.text._ZN11CommonTimer5resetEv)
    [Anonymous Symbol]                       0x08001244   Section        0  common_timer.o(.text._ZN11CommonTimer5startEv)
    [Anonymous Symbol]                       0x08001254   Section        0  common_timer.o(.text._ZN11CommonTimer6inWorkEv)
    [Anonymous Symbol]                       0x08001284   Section        0  common_timer.o(.text._ZN11CommonTimer7startedEv)
    [Anonymous Symbol]                       0x08001294   Section        0  common_timer.o(.text._ZN11CommonTimer8finishedEv)
    [Anonymous Symbol]                       0x080012ac   Section        0  common_timer.o(.text._ZN11CommonTimer8setStartEb)
    [Anonymous Symbol]                       0x080012d8   Section        0  common_timer.o(.text._ZN11CommonTimer9update1msEv)
    [Anonymous Symbol]                       0x08001310   Section        0  common_timer.o(.text._ZN11CommonTimerC2Ej)
    [Anonymous Symbol]                       0x08001338   Section        0  common_timer.o(.text._ZN11CommonTimeraSEb)
    [Anonymous Symbol]                       0x08001358   Section        0  common_timer.o(.text._ZN11IUpdated1msC2Ev)
    [Anonymous Symbol]                       0x08001370   Section        0  simple_input.o(.text._ZN11SimpleInput11isNotActiveEv)
    [Anonymous Symbol]                       0x08001388   Section        0  simple_input.o(.text._ZN11SimpleInput8isActiveEv)
    [Anonymous Symbol]                       0x080013c8   Section        0  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x08001460   Section        0  coil.o(.text._ZN12ProgrammCoil8isActiveEv)
    [Anonymous Symbol]                       0x08001470   Section        0  coil.o(.text._ZN12ProgrammCoil8setValueEb)
    [Anonymous Symbol]                       0x08001488   Section        0  coil.o(.text._ZN12ProgrammCoilC2Ev)
    [Anonymous Symbol]                       0x080014a8   Section        0  simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv)
    [Anonymous Symbol]                       0x080014bc   Section        0  simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv)
    [Anonymous Symbol]                       0x080014e0   Section        0  simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht)
    [Anonymous Symbol]                       0x08001524   Section        0  coil.o(.text._ZN4Coil8isActiveEv)
    [Anonymous Symbol]                       0x0800153c   Section        0  coil.o(.text._ZN4Coil8setValueEb)
    [Anonymous Symbol]                       0x08001580   Section        0  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x080015f8   Section        0  coil.o(.text._ZN4CoilaSEb)
    [Anonymous Symbol]                       0x0800161c   Section        0  coil.o(.text._ZN7ISwitchC2Ev)
    [Anonymous Symbol]                       0x08001634   Section        0  on_delay.o(.text._ZN7OnDelay3getEv)
    [Anonymous Symbol]                       0x08001648   Section        0  on_delay.o(.text._ZN7OnDelay3setEb)
    [Anonymous Symbol]                       0x08001668   Section        0  on_delay.o(.text._ZN7OnDelay9update1msEv)
    [Anonymous Symbol]                       0x0800167c   Section        0  on_delay.o(.text._ZN7OnDelayC2Ej)
    [Anonymous Symbol]                       0x080016b8   Section        0  on_delay.o(.text._ZN7OnDelayD2Ev)
    [Anonymous Symbol]                       0x080016e8   Section        0  on_delay.o(.text._ZN7OnDelayaSEb)
    [Anonymous Symbol]                       0x08001708   Section        0  sequence.o(.text._ZN8Sequence4lockEb)
    [Anonymous Symbol]                       0x08001720   Section        0  sequence.o(.text._ZN8Sequence5resetEv)
    [Anonymous Symbol]                       0x08001738   Section        0  sequence.o(.text._ZN8Sequence5startEb)
    [Anonymous Symbol]                       0x08001764   Section        0  sequence.o(.text._ZN8Sequence6finishEb)
    [Anonymous Symbol]                       0x080017a8   Section        0  sequence.o(.text._ZN8Sequence6slfSetEbbb)
    [Anonymous Symbol]                       0x080017f8   Section        0  sequence.o(.text._ZN8Sequence7startedEv)
    [Anonymous Symbol]                       0x08001824   Section        0  sequence.o(.text._ZN8Sequence8finishedEv)
    [Anonymous Symbol]                       0x08001834   Section        0  sequence.o(.text._ZN8Sequence8isMyStepEv)
    [Anonymous Symbol]                       0x0800184c   Section        0  sequence.o(.text._ZN8SequenceC2EPhh)
    [Anonymous Symbol]                       0x08001874   Section        0  coil.o(.text._ZN9CoilPulse8isActiveEv)
    [Anonymous Symbol]                       0x08001884   Section        0  coil.o(.text._ZN9CoilPulse8setValueEb)
    [Anonymous Symbol]                       0x080018a4   Section        0  coil.o(.text._ZN9CoilPulse9update1msEv)
    [Anonymous Symbol]                       0x080018c8   Section        0  coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht)
    [Anonymous Symbol]                       0x0800190c   Section        0  coil.o(.text._ZN9CoilPulseaSEb)
    [Anonymous Symbol]                       0x08001930   Section        0  rf_impulse.o(.text._ZN9RFimpulse3setEb)
    [Anonymous Symbol]                       0x080019bc   Section        0  rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE)
    [Anonymous Symbol]                       0x080019d0   Section        0  cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv)
    [Anonymous Symbol]                       0x080019dc   Section        0  simple_input.o(.text._ZThn16_N18SimpleInputDelayed9update1msEv)
    [Anonymous Symbol]                       0x080019ec   Section        0  coil.o(.text._ZThn16_N9CoilPulse9update1msEv)
    [Anonymous Symbol]                       0x080019fa   Section        0  new.cpp.o(.text._ZdlPv)
    [Anonymous Symbol]                       0x080019fe   Section        0  new.cpp.o(.text._ZdlPvj)
    [Anonymous Symbol]                       0x08001a04   Section        0  new.cpp.o(.text._Znwj)
    [Anonymous Symbol]                       0x08001a2c   Section        0  cxa_virtual.cpp.o(.text.__cxa_pure_virtual)
    __cxx_global_var_init                    0x08001a55   Thumb Code    28  main.o(.text.__cxx_global_var_init)
    [Anonymous Symbol]                       0x08001a54   Section        0  main.o(.text.__cxx_global_var_init)
    __cxx_global_var_init.1                  0x08001a71   Thumb Code    28  main.o(.text.__cxx_global_var_init.1)
    [Anonymous Symbol]                       0x08001a70   Section        0  main.o(.text.__cxx_global_var_init.1)
    __cxx_global_var_init.10                 0x08001a8d   Thumb Code    26  main.o(.text.__cxx_global_var_init.10)
    [Anonymous Symbol]                       0x08001a8c   Section        0  main.o(.text.__cxx_global_var_init.10)
    __cxx_global_var_init.11                 0x08001aa9   Thumb Code    26  main.o(.text.__cxx_global_var_init.11)
    [Anonymous Symbol]                       0x08001aa8   Section        0  main.o(.text.__cxx_global_var_init.11)
    __cxx_global_var_init.12                 0x08001ac5   Thumb Code    30  main.o(.text.__cxx_global_var_init.12)
    [Anonymous Symbol]                       0x08001ac4   Section        0  main.o(.text.__cxx_global_var_init.12)
    __cxx_global_var_init.13                 0x08001ae5   Thumb Code    26  main.o(.text.__cxx_global_var_init.13)
    [Anonymous Symbol]                       0x08001ae4   Section        0  main.o(.text.__cxx_global_var_init.13)
    __cxx_global_var_init.14                 0x08001b01   Thumb Code    26  main.o(.text.__cxx_global_var_init.14)
    [Anonymous Symbol]                       0x08001b00   Section        0  main.o(.text.__cxx_global_var_init.14)
    __cxx_global_var_init.15                 0x08001b1d   Thumb Code    26  main.o(.text.__cxx_global_var_init.15)
    [Anonymous Symbol]                       0x08001b1c   Section        0  main.o(.text.__cxx_global_var_init.15)
    __cxx_global_var_init.16                 0x08001b39   Thumb Code    30  main.o(.text.__cxx_global_var_init.16)
    [Anonymous Symbol]                       0x08001b38   Section        0  main.o(.text.__cxx_global_var_init.16)
    __cxx_global_var_init.17                 0x08001b59   Thumb Code    26  main.o(.text.__cxx_global_var_init.17)
    [Anonymous Symbol]                       0x08001b58   Section        0  main.o(.text.__cxx_global_var_init.17)
    __cxx_global_var_init.18                 0x08001b75   Thumb Code    26  main.o(.text.__cxx_global_var_init.18)
    [Anonymous Symbol]                       0x08001b74   Section        0  main.o(.text.__cxx_global_var_init.18)
    __cxx_global_var_init.19                 0x08001b91   Thumb Code    26  main.o(.text.__cxx_global_var_init.19)
    [Anonymous Symbol]                       0x08001b90   Section        0  main.o(.text.__cxx_global_var_init.19)
    __cxx_global_var_init.2                  0x08001bad   Thumb Code    28  main.o(.text.__cxx_global_var_init.2)
    [Anonymous Symbol]                       0x08001bac   Section        0  main.o(.text.__cxx_global_var_init.2)
    __cxx_global_var_init.20                 0x08001bc9   Thumb Code    30  main.o(.text.__cxx_global_var_init.20)
    [Anonymous Symbol]                       0x08001bc8   Section        0  main.o(.text.__cxx_global_var_init.20)
    __cxx_global_var_init.21                 0x08001be9   Thumb Code    26  main.o(.text.__cxx_global_var_init.21)
    [Anonymous Symbol]                       0x08001be8   Section        0  main.o(.text.__cxx_global_var_init.21)
    __cxx_global_var_init.22                 0x08001c05   Thumb Code    26  main.o(.text.__cxx_global_var_init.22)
    [Anonymous Symbol]                       0x08001c04   Section        0  main.o(.text.__cxx_global_var_init.22)
    __cxx_global_var_init.23                 0x08001c21   Thumb Code    26  main.o(.text.__cxx_global_var_init.23)
    [Anonymous Symbol]                       0x08001c20   Section        0  main.o(.text.__cxx_global_var_init.23)
    __cxx_global_var_init.24                 0x08001c3d   Thumb Code    26  main.o(.text.__cxx_global_var_init.24)
    [Anonymous Symbol]                       0x08001c3c   Section        0  main.o(.text.__cxx_global_var_init.24)
    __cxx_global_var_init.25                 0x08001c59   Thumb Code    26  main.o(.text.__cxx_global_var_init.25)
    [Anonymous Symbol]                       0x08001c58   Section        0  main.o(.text.__cxx_global_var_init.25)
    __cxx_global_var_init.26                 0x08001c75   Thumb Code    26  main.o(.text.__cxx_global_var_init.26)
    [Anonymous Symbol]                       0x08001c74   Section        0  main.o(.text.__cxx_global_var_init.26)
    __cxx_global_var_init.27                 0x08001c91   Thumb Code    26  main.o(.text.__cxx_global_var_init.27)
    [Anonymous Symbol]                       0x08001c90   Section        0  main.o(.text.__cxx_global_var_init.27)
    __cxx_global_var_init.28                 0x08001cad   Thumb Code    26  main.o(.text.__cxx_global_var_init.28)
    [Anonymous Symbol]                       0x08001cac   Section        0  main.o(.text.__cxx_global_var_init.28)
    __cxx_global_var_init.29                 0x08001cc9   Thumb Code    26  main.o(.text.__cxx_global_var_init.29)
    [Anonymous Symbol]                       0x08001cc8   Section        0  main.o(.text.__cxx_global_var_init.29)
    __cxx_global_var_init.3                  0x08001ce5   Thumb Code    28  main.o(.text.__cxx_global_var_init.3)
    [Anonymous Symbol]                       0x08001ce4   Section        0  main.o(.text.__cxx_global_var_init.3)
    __cxx_global_var_init.30                 0x08001d01   Thumb Code    26  main.o(.text.__cxx_global_var_init.30)
    [Anonymous Symbol]                       0x08001d00   Section        0  main.o(.text.__cxx_global_var_init.30)
    __cxx_global_var_init.31                 0x08001d1d   Thumb Code    26  main.o(.text.__cxx_global_var_init.31)
    [Anonymous Symbol]                       0x08001d1c   Section        0  main.o(.text.__cxx_global_var_init.31)
    __cxx_global_var_init.32                 0x08001d39   Thumb Code    26  main.o(.text.__cxx_global_var_init.32)
    [Anonymous Symbol]                       0x08001d38   Section        0  main.o(.text.__cxx_global_var_init.32)
    __cxx_global_var_init.33                 0x08001d55   Thumb Code    52  main.o(.text.__cxx_global_var_init.33)
    [Anonymous Symbol]                       0x08001d54   Section        0  main.o(.text.__cxx_global_var_init.33)
    __cxx_global_var_init.34                 0x08001d89   Thumb Code    48  main.o(.text.__cxx_global_var_init.34)
    [Anonymous Symbol]                       0x08001d88   Section        0  main.o(.text.__cxx_global_var_init.34)
    __cxx_global_var_init.35                 0x08001db9   Thumb Code    52  main.o(.text.__cxx_global_var_init.35)
    [Anonymous Symbol]                       0x08001db8   Section        0  main.o(.text.__cxx_global_var_init.35)
    __cxx_global_var_init.36                 0x08001ded   Thumb Code    24  main.o(.text.__cxx_global_var_init.36)
    [Anonymous Symbol]                       0x08001dec   Section        0  main.o(.text.__cxx_global_var_init.36)
    __cxx_global_var_init.37                 0x08001e05   Thumb Code    26  main.o(.text.__cxx_global_var_init.37)
    [Anonymous Symbol]                       0x08001e04   Section        0  main.o(.text.__cxx_global_var_init.37)
    __cxx_global_var_init.38                 0x08001e21   Thumb Code    26  main.o(.text.__cxx_global_var_init.38)
    [Anonymous Symbol]                       0x08001e20   Section        0  main.o(.text.__cxx_global_var_init.38)
    __cxx_global_var_init.39                 0x08001e3d   Thumb Code    26  main.o(.text.__cxx_global_var_init.39)
    [Anonymous Symbol]                       0x08001e3c   Section        0  main.o(.text.__cxx_global_var_init.39)
    __cxx_global_var_init.4                  0x08001e59   Thumb Code    28  main.o(.text.__cxx_global_var_init.4)
    [Anonymous Symbol]                       0x08001e58   Section        0  main.o(.text.__cxx_global_var_init.4)
    __cxx_global_var_init.40                 0x08001e75   Thumb Code    48  main.o(.text.__cxx_global_var_init.40)
    [Anonymous Symbol]                       0x08001e74   Section        0  main.o(.text.__cxx_global_var_init.40)
    __cxx_global_var_init.5                  0x08001ea5   Thumb Code    28  main.o(.text.__cxx_global_var_init.5)
    [Anonymous Symbol]                       0x08001ea4   Section        0  main.o(.text.__cxx_global_var_init.5)
    __cxx_global_var_init.6                  0x08001ec1   Thumb Code    30  main.o(.text.__cxx_global_var_init.6)
    [Anonymous Symbol]                       0x08001ec0   Section        0  main.o(.text.__cxx_global_var_init.6)
    __cxx_global_var_init.7                  0x08001ee1   Thumb Code    30  main.o(.text.__cxx_global_var_init.7)
    [Anonymous Symbol]                       0x08001ee0   Section        0  main.o(.text.__cxx_global_var_init.7)
    __cxx_global_var_init.8                  0x08001f01   Thumb Code    30  main.o(.text.__cxx_global_var_init.8)
    [Anonymous Symbol]                       0x08001f00   Section        0  main.o(.text.__cxx_global_var_init.8)
    __cxx_global_var_init.9                  0x08001f21   Thumb Code    26  main.o(.text.__cxx_global_var_init.9)
    [Anonymous Symbol]                       0x08001f20   Section        0  main.o(.text.__cxx_global_var_init.9)
    [Anonymous Symbol]                       0x08001f3a   Section        0  abort_message.cpp.o(.text.abort_message)
    [Anonymous Symbol]                       0x08001f40   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x08001f81   Thumb Code   282  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08001f80   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x0800209d   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x0800209c   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x080021f1   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x080021f0   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x0800225d   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x0800225c   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x080022b9   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x080022b8   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvDeleteTCB                             0x080022fd   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x080022fc   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetNextExpireTime                     0x08002315   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x08002314   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x08002355   Thumb Code   174  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x08002354   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x08002405   Thumb Code    60  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x08002404   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x08002441   Thumb Code    72  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x08002440   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x08002489   Thumb Code   230  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x08002488   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x08002571   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x08002570   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x08002601   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x08002600   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x080026c9   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x080026c8   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x08002751   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x08002750   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvPortStartFirstTask                    0x08002779   Thumb Code    32  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x08002778   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x08002799   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x08002798   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x080027ed   Thumb Code   294  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x080027ec   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x08002915   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x08002914   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x080029b1   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x080029b0   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x080029e5   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x080029e4   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x08002a21   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x08002a20   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x08002a65   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x08002a64   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x08002ab9   Thumb Code    38  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08002ab8   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x08002ae1   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x08002ae0   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x08002b01   Thumb Code   174  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08002b00   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08002bb0   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08002d38   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x08002d88   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x08002dd0   Section        0  main.o(.text.vApplicationIdleHook)
    [Anonymous Symbol]                       0x08002dd4   Section        0  main.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x08002de0   Section        0  main.o(.text.vApplicationTickHook)
    [Anonymous Symbol]                       0x08002de4   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08002e14   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08002e24   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x08002e90   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x08002ec0   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08002ee8   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08002f60   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x08002f90   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x08002ff4   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08003040   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x08003064   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x08003074   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x0800309c   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x080030fc   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08003190   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x080031a0   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x080031a0   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x0800328c   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x080032cc   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x0800334c   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x0800341c   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x08003570   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x0800360c   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x080036ac   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x080036c0   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08003914   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08003a84   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x08003c84   Section        0  timers.o(.text.xTimerCreateTimerTask)
    .L.str                                   0x08003d88   Data           8  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003d88   Section        0  main.o(.rodata.str1.1)
    .L.str                                   0x08003d90   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003d90   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x08003d95   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003d95   Section        0  timers.o(.rodata.str1.1)
    .init_array                              0x08003dc8   Section        0  init_aeabi.o(.init_array)
    uxCriticalNesting                        0x20000048   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000048   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000050   Section       96  libspace.o(.bss)
    prvSampleTimeNow.xLastTime               0x200003c8   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x200003c8   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x200003cc   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x200003d0   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x200003d0   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200003d4   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200003d4   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x200003d8   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x200003d8   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x200003dc   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200003dc   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200003e0   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200003e0   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200003e4   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200003e4   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000448   Data       10240  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000448   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x20002c48   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002c48   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002c4c   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002c4c   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002c50   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002c50   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002c54   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002c54   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002c58   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002c58   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002c5c   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002c5c   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002c70   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002c70   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002c84   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002c84   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002c98   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002c98   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002cac   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002cac   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002cb0   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002cb0   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002cb4   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002cb4   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002cb8   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002cb8   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002cbc   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002cbc   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002cc0   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002cc0   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002cc4   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002cc4   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002cc8   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002cc8   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002ccc   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002ccc   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002ce0   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002ce0   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002ce4   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002ce4   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002cec   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002cec   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002d00   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002d00   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002d14   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002d14   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002d18   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002d18   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002d1c   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002d1c   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002d20   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002d20   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002d28   Data        3072  startup_stm32f10x_md.o(HEAP)
    HEAP                                     0x20002d28   Section     3072  startup_stm32f10x_md.o(HEAP)
    Stack_Mem                                0x20003928   Data        1024  startup_stm32f10x_md.o(STACK)
    STACK                                    0x20003928   Section     1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x20003d28   Data           0  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _mutex_acquire                            - Undefined Weak Reference
    _mutex_free                               - Undefined Weak Reference
    _mutex_release                            - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __dso_handle                             0x08000000   Number         0  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000103   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000129   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000145   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000161   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_2                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000007)
    __rt_lib_init_preinit_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_relocate_pie_1             0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_alloca_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_2                      0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_exceptions_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_rand_1                     0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_signal_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_cpp_1                      0x0800016f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_return                     0x0800016f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_shutdown                        0x08000171   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_2                  0x08000173   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000001)
    __rt_lib_shutdown_cpp_1                  0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0800017b   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800017b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800017b   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x08000181   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x08000181   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000185   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000185   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800018d   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800018f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800018f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000193   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000199   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x080001a1   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x080001a3   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x080001a5   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x080001a7   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x080001a9   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x080001ad   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART1_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART2_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x080001b5   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __cxa_atexit                             0x080001d9   Thumb Code    10  cxa_atexit.o(.text)
    __aeabi_memcpy                           0x080001e3   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x080001e3   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000249   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x0800026d   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x0800026d   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x0800027d   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0800027d   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x08000281   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x080002c5   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x0800030f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x08000311   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08000313   Thumb Code     2  heapauxi.o(.text)
    __cpp_initialize__aeabi_                 0x08000315   Thumb Code    28  init_aeabi.o(.text)
    malloc                                   0x08000339   Thumb Code    94  h1_alloc.o(.text)
    free                                     0x08000397   Thumb Code    78  h1_free.o(.text)
    abort                                    0x080003e5   Thumb Code    22  abort.o(.text)
    __aeabi_atexit                           0x080003fb   Thumb Code    46  aeabi_atexit.o(.text)
    __aeabi_memcpy4                          0x08000429   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000429   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000429   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000471   Thumb Code     0  rt_memcpy_w.o(.text)
    _sys_exit                                0x0800048d   Thumb Code     8  sys_exit.o(.text)
    __rt_heap_descriptor                     0x08000499   Thumb Code     8  rt_heap_descriptor_intlibspace.o(.text)
    __rt_ddtor_pointer_addr                  0x080004a1   Thumb Code     8  rt_ddtor_pointer_addr_intlibspace.o(.text)
    __use_no_heap                            0x080004a9   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x080004ab   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x080004ad   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x080004af   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x080004b1   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x080004d3   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x080004d9   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x08000537   Thumb Code    10  h1_init.o(.text)
    __Heap_DescSize                          0x08000541   Thumb Code     4  h1_init.o(.text)
    __cxa_finalize                           0x08000545   Thumb Code    66  cxa_finalize.o(.text)
    __rt_SIGABRT                             0x08000587   Thumb Code    14  defsig_abrt_outer.o(.text)
    __user_libspace                          0x08000595   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000595   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000595   Thumb Code     0  libspace.o(.text)
    __I$use$semihosting                      0x0800059d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0800059d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800059f   Thumb Code     0  indicate_semi.o(.text)
    __user_setup_stackheap                   0x0800059f   Thumb Code    74  sys_stackheap_outer.o(.text)
    __Heap_ProvideMemory                     0x080005e9   Thumb Code    52  h1_extend.o(.text)
    _maybe_terminate_alloc                   0x080005e9   Thumb Code     0  maybetermalloc1.o(.text)
    exit                                     0x0800061d   Thumb Code    18  exit.o(.text)
    __sig_exit                               0x0800062f   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGABRT_inner                       0x08000639   Thumb Code    14  defsig_abrt_inner.o(.text)
    __rt_SIGRTMEM                            0x08000669   Thumb Code    14  defsig_rtmem_outer.o(.text)
    __default_signal_display                 0x08000677   Thumb Code    50  defsig_general.o(.text)
    __rt_SIGRTMEM_inner                      0x080006a9   Thumb Code    22  defsig_rtmem_inner.o(.text)
    _ttywrch                                 0x080006f9   Thumb Code    14  sys_wrch.o(.text)
    PendSV_Handler                           0x08000711   Thumb Code    68  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x08000761   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x080008b1   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemCoreClockUpdate                    0x080008ed   Thumb Code   290  system_stm32f10x.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x08000a11   Thumb Code   102  system_stm32f10x.o(.text.SystemInit)
    TIM2_IRQHandler                          0x08000a79   Thumb Code    76  main.o(.text.TIM2_IRQHandler)
    commonInit()                             0x08000b6d   Thumb Code    14  init.o(.text._Z10commonInitv)
    getPosition(unsigned int)                0x08000b7d   Thumb Code    64  common.o(.text._Z11getPositionj)
    void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int) 0x08000bbd   Thumb Code    32  init.o(.text._Z11setRegisterIVjEvPT_jj)
    resetAllSteps()                          0x08000bdd   Thumb Code    76  ob1.o(.text._Z13resetAllStepsv)
    void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int) 0x08000c29   Thumb Code    68  coil.o(.text._Z17setBitsInRegisterIVjEvPT_jj)
    OB1Task(void*)                           0x08000c6d   Thumb Code   598  ob1.o(.text._Z7OB1TaskPv)
    rccInit()                                0x08000ec5   Thumb Code   190  init.o(.text._Z7rccInitv)
    tickInit()                               0x08000f85   Thumb Code    88  init.o(.text._Z8tickInitv)
    GPIOcommon::GPIOcommon(GPIO_TypeDef*, unsigned char) 0x08001111   Thumb Code   226  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char) 0x08001111   Thumb Code   226  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    CommonTimer::notFinished()               0x080011f5   Thumb Code    22  common_timer.o(.text._ZN11CommonTimer11notFinishedEv)
    CommonTimer::stop()                      0x0800120d   Thumb Code    24  common_timer.o(.text._ZN11CommonTimer4stopEv)
    CommonTimer::pause()                     0x08001225   Thumb Code    14  common_timer.o(.text._ZN11CommonTimer5pauseEv)
    CommonTimer::reset()                     0x08001235   Thumb Code    16  common_timer.o(.text._ZN11CommonTimer5resetEv)
    CommonTimer::start()                     0x08001245   Thumb Code    14  common_timer.o(.text._ZN11CommonTimer5startEv)
    CommonTimer::inWork()                    0x08001255   Thumb Code    46  common_timer.o(.text._ZN11CommonTimer6inWorkEv)
    CommonTimer::started()                   0x08001285   Thumb Code    16  common_timer.o(.text._ZN11CommonTimer7startedEv)
    CommonTimer::finished()                  0x08001295   Thumb Code    22  common_timer.o(.text._ZN11CommonTimer8finishedEv)
    CommonTimer::setStart(bool)              0x080012ad   Thumb Code    44  common_timer.o(.text._ZN11CommonTimer8setStartEb)
    CommonTimer::update1ms()                 0x080012d9   Thumb Code    56  common_timer.o(.text._ZN11CommonTimer9update1msEv)
    CommonTimer::CommonTimer(unsigned int)   0x08001311   Thumb Code    38  common_timer.o(.text._ZN11CommonTimerC2Ej)
    CommonTimer::CommonTimer__sub_object(unsigned int) 0x08001311   Thumb Code    38  common_timer.o(.text._ZN11CommonTimerC2Ej)
    CommonTimer::operator=(bool)             0x08001339   Thumb Code    32  common_timer.o(.text._ZN11CommonTimeraSEb)
    IUpdated1ms::IUpdated1ms__sub_object()   0x08001359   Thumb Code    22  common_timer.o(.text._ZN11IUpdated1msC2Ev)
    SimpleInput::isNotActive()               0x08001371   Thumb Code    22  simple_input.o(.text._ZN11SimpleInput11isNotActiveEv)
    SimpleInput::isActive()                  0x08001389   Thumb Code    64  simple_input.o(.text._ZN11SimpleInput8isActiveEv)
    SimpleInput::SimpleInput(GPIO_TypeDef*, unsigned char) 0x080013c9   Thumb Code   152  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    SimpleInput::SimpleInput__sub_object(GPIO_TypeDef*, unsigned char) 0x080013c9   Thumb Code   152  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    ProgrammCoil::isActive()                 0x08001461   Thumb Code    16  coil.o(.text._ZN12ProgrammCoil8isActiveEv)
    ProgrammCoil::setValue(bool)             0x08001471   Thumb Code    24  coil.o(.text._ZN12ProgrammCoil8setValueEb)
    ProgrammCoil::ProgrammCoil__sub_object() 0x08001489   Thumb Code    32  coil.o(.text._ZN12ProgrammCoilC2Ev)
    SimpleInputDelayed::isActive()           0x080014a9   Thumb Code    18  simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv)
    SimpleInputDelayed::update1ms()          0x080014bd   Thumb Code    36  simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv)
    SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short) 0x080014e1   Thumb Code    66  simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht)
    SimpleInputDelayed::SimpleInputDelayed__sub_object(GPIO_TypeDef*, unsigned char, unsigned short) 0x080014e1   Thumb Code    66  simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht)
    Coil::isActive()                         0x08001525   Thumb Code    22  coil.o(.text._ZN4Coil8isActiveEv)
    Coil::setValue(bool)                     0x0800153d   Thumb Code    66  coil.o(.text._ZN4Coil8setValueEb)
    Coil::Coil(GPIO_TypeDef*, unsigned char) 0x08001581   Thumb Code   118  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char) 0x08001581   Thumb Code   118  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    Coil::operator=(bool)                    0x080015f9   Thumb Code    34  coil.o(.text._ZN4CoilaSEb)
    ISwitch::ISwitch__sub_object()           0x0800161d   Thumb Code    22  coil.o(.text._ZN7ISwitchC2Ev)
    OnDelay::get()                           0x08001635   Thumb Code    18  on_delay.o(.text._ZN7OnDelay3getEv)
    OnDelay::set(bool)                       0x08001649   Thumb Code    30  on_delay.o(.text._ZN7OnDelay3setEb)
    OnDelay::update1ms()                     0x08001669   Thumb Code    20  on_delay.o(.text._ZN7OnDelay9update1msEv)
    OnDelay::OnDelay(unsigned int)           0x0800167d   Thumb Code    58  on_delay.o(.text._ZN7OnDelayC2Ej)
    OnDelay::OnDelay__sub_object(unsigned int) 0x0800167d   Thumb Code    58  on_delay.o(.text._ZN7OnDelayC2Ej)
    OnDelay::~OnDelay()                      0x080016b9   Thumb Code    46  on_delay.o(.text._ZN7OnDelayD2Ev)
    OnDelay::~OnDelay__sub_object()          0x080016b9   Thumb Code    46  on_delay.o(.text._ZN7OnDelayD2Ev)
    OnDelay::operator=(bool)                 0x080016e9   Thumb Code    32  on_delay.o(.text._ZN7OnDelayaSEb)
    Sequence::lock(bool)                     0x08001709   Thumb Code    24  sequence.o(.text._ZN8Sequence4lockEb)
    Sequence::reset()                        0x08001721   Thumb Code    24  sequence.o(.text._ZN8Sequence5resetEv)
    Sequence::start(bool)                    0x08001739   Thumb Code    44  sequence.o(.text._ZN8Sequence5startEb)
    Sequence::finish(bool)                   0x08001765   Thumb Code    68  sequence.o(.text._ZN8Sequence6finishEb)
    Sequence::slfSet(bool, bool, bool)       0x080017a9   Thumb Code    80  sequence.o(.text._ZN8Sequence6slfSetEbbb)
    Sequence::started()                      0x080017f9   Thumb Code    42  sequence.o(.text._ZN8Sequence7startedEv)
    Sequence::finished()                     0x08001825   Thumb Code    16  sequence.o(.text._ZN8Sequence8finishedEv)
    Sequence::isMyStep()                     0x08001835   Thumb Code    24  sequence.o(.text._ZN8Sequence8isMyStepEv)
    Sequence::Sequence(unsigned char*, unsigned char) 0x0800184d   Thumb Code    38  sequence.o(.text._ZN8SequenceC2EPhh)
    Sequence::Sequence__sub_object(unsigned char*, unsigned char) 0x0800184d   Thumb Code    38  sequence.o(.text._ZN8SequenceC2EPhh)
    CoilPulse::isActive()                    0x08001875   Thumb Code    16  coil.o(.text._ZN9CoilPulse8isActiveEv)
    CoilPulse::setValue(bool)                0x08001885   Thumb Code    30  coil.o(.text._ZN9CoilPulse8setValueEb)
    CoilPulse::update1ms()                   0x080018a5   Thumb Code    36  coil.o(.text._ZN9CoilPulse9update1msEv)
    CoilPulse::CoilPulse(GPIO_TypeDef*, unsigned char, unsigned short) 0x080018c9   Thumb Code    66  coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht)
    CoilPulse::CoilPulse__sub_object(GPIO_TypeDef*, unsigned char, unsigned short) 0x080018c9   Thumb Code    66  coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht)
    CoilPulse::operator=(bool)               0x0800190d   Thumb Code    34  coil.o(.text._ZN9CoilPulseaSEb)
    RFimpulse::set(bool)                     0x08001931   Thumb Code   138  rf_impulse.o(.text._ZN9RFimpulse3setEb)
    RFimpulse::RFimpulse(IMPULSE)            0x080019bd   Thumb Code    20  rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE)
    RFimpulse::RFimpulse__sub_object(IMPULSE) 0x080019bd   Thumb Code    20  rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE)
    std::get_new_handler()                   0x080019d1   Thumb Code    12  cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv)
    non-virtual thunk to SimpleInputDelayed::update1ms() 0x080019dd   Thumb Code    14  simple_input.o(.text._ZThn16_N18SimpleInputDelayed9update1msEv)
    non-virtual thunk to CoilPulse::update1ms() 0x080019ed   Thumb Code    14  coil.o(.text._ZThn16_N9CoilPulse9update1msEv)
    operator delete(void*)                   0x080019fb   Thumb Code     4  new.cpp.o(.text._ZdlPv)
    operator delete(void*, unsigned int)     0x080019ff   Thumb Code     4  new.cpp.o(.text._ZdlPvj)
    operator new(unsigned int)               0x08001a05   Thumb Code    38  new.cpp.o(.text._Znwj)
    __cxa_pure_virtual                       0x08001a2d   Thumb Code     8  cxa_virtual.cpp.o(.text.__cxa_pure_virtual)
    abort_message                            0x08001f3b   Thumb Code     4  abort_message.cpp.o(.text.abort_message)
    main                                     0x08001f41   Thumb Code    62  main.o(.text.main)
    pvPortMalloc                             0x08002bb1   Thumb Code   390  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x08002d39   Thumb Code    80  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x08002d89   Thumb Code    72  list.o(.text.uxListRemove)
    vApplicationIdleHook                     0x08002dd1   Thumb Code     2  main.o(.text.vApplicationIdleHook)
    vApplicationStackOverflowHook            0x08002dd5   Thumb Code    10  main.o(.text.vApplicationStackOverflowHook)
    vApplicationTickHook                     0x08002de1   Thumb Code     2  main.o(.text.vApplicationTickHook)
    vListInitialise                          0x08002de5   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x08002e15   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x08002e25   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x08002e91   Thumb Code    48  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x08002ec1   Thumb Code    38  port.o(.text.vPortExitCritical)
    vPortFree                                0x08002ee9   Thumb Code   118  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08002f61   Thumb Code    46  port.o(.text.vPortSetupTimerInterrupt)
    vQueueWaitForMessageRestricted           0x08002f91   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x08002ff5   Thumb Code    74  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x08003041   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08003065   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08003075   Thumb Code    38  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x0800309d   Thumb Code    96  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x080030fd   Thumb Code   148  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x08003191   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x080031a1   Thumb Code   236  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x0800328d   Thumb Code    64  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x080032cd   Thumb Code   126  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x0800334d   Thumb Code   208  queue.o(.text.xQueueGenericReset)
    xQueueReceive                            0x0800341d   Thumb Code   338  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x08003571   Thumb Code   154  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x0800360d   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskGetTickCount                        0x080036ad   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x080036c1   Thumb Code   596  tasks.o(.text.xTaskIncrementTick)
    xTaskRemoveFromEventList                 0x08003915   Thumb Code   368  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08003a85   Thumb Code   510  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08003c85   Thumb Code    80  timers.o(.text.xTimerCreateTimerTask)
    AHBPrescTable                            0x08003cd4   Data          16  system_stm32f10x.o(.rodata.AHBPrescTable)
    vtable for CommonTimer                   0x08003ce4   Data          16  common_timer.o(.rodata._ZTV11CommonTimer)
    vtable for IUpdated1ms                   0x08003cf4   Data          12  common_timer.o(.rodata._ZTV11IUpdated1ms)
    vtable for SimpleInput                   0x08003d00   Data          12  simple_input.o(.rodata._ZTV11SimpleInput)
    vtable for ProgrammCoil                  0x08003d0c   Data          16  coil.o(.rodata._ZTV12ProgrammCoil)
    vtable for SimpleInputDelayed            0x08003d1c   Data          32  simple_input.o(.rodata._ZTV18SimpleInputDelayed)
    vtable for Coil                          0x08003d3c   Data          16  coil.o(.rodata._ZTV4Coil)
    vtable for ISwitch                       0x08003d4c   Data          12  coil.o(.rodata._ZTV7ISwitch)
    vtable for OnDelay                       0x08003d58   Data          12  on_delay.o(.rodata._ZTV7OnDelay)
    vtable for CoilPulse                     0x08003d64   Data          36  coil.o(.rodata._ZTV9CoilPulse)
    uxTopUsedPriority                        0x08003da0   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x08003da4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08003dc4   Number         0  anon$$obj.o(Region$$Table)
    SHT$$INIT_ARRAY$$Base                    0x08003dc4   Number         0  main.o(.init_array)
    SHT$$INIT_ARRAY$$Limit                   0x08003dc8   Number         0  init_aeabi.o(.init_array)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    update1msObjects                         0x20000004   Data          64  main.o(.data.update1msObjects)
    updateObjectsSize                        0x20000044   Data           1  main.o(.data.updateObjectsSize)
    __libspace_start                         0x20000050   Data          96  libspace.o(.bss)
    B1                                       0x200000b0   Data          32  main.o(.bss.B1)
    __temporary_stack_top$libspace           0x200000b0   Data           0  libspace.o(.bss)
    B2                                       0x200000d0   Data          32  main.o(.bss.B2)
    B3                                       0x200000f0   Data          32  main.o(.bss.B3)
    C1                                       0x20000110   Data          16  main.o(.bss.C1)
    C2                                       0x20000120   Data          16  main.o(.bss.C2)
    C3                                       0x20000130   Data          16  main.o(.bss.C3)
    CHBs0                                    0x20000140   Data          12  main.o(.bss.CHBs0)
    CHBs1                                    0x2000014c   Data          12  main.o(.bss.CHBs1)
    CHBs1Delay                               0x20000158   Data           8  main.o(.bss.CHBs1Delay)
    CHBs2                                    0x20000160   Data          12  main.o(.bss.CHBs2)
    CHBstep                                  0x2000016c   Data           1  main.o(.bss.CHBstep)
    D1                                       0x20000170   Data          16  main.o(.bss.D1)
    D2                                       0x20000180   Data          16  main.o(.bss.D2)
    D3                                       0x20000190   Data          16  main.o(.bss.D3)
    D4                                       0x200001a0   Data          16  main.o(.bss.D4)
    H1                                       0x200001b0   Data          32  main.o(.bss.H1)
    H2                                       0x200001d0   Data          32  main.o(.bss.H2)
    H3                                       0x200001f0   Data          32  main.o(.bss.H3)
    M1                                       0x20000210   Data          32  main.o(.bss.M1)
    M2                                       0x20000230   Data          32  main.o(.bss.M2)
    M3                                       0x20000250   Data          32  main.o(.bss.M3)
    M6                                       0x20000270   Data          16  main.o(.bss.M6)
    M7                                       0x20000280   Data          16  main.o(.bss.M7)
    Me1                                      0x20000290   Data          16  main.o(.bss.Me1)
    Me2                                      0x200002a0   Data          16  main.o(.bss.Me2)
    Me3                                      0x200002b0   Data          16  main.o(.bss.Me3)
    O1                                       0x200002c0   Data          16  main.o(.bss.O1)
    O2                                       0x200002d0   Data          16  main.o(.bss.O2)
    O3                                       0x200002e0   Data          16  main.o(.bss.O3)
    OB1s0                                    0x200002f0   Data          12  main.o(.bss.OB1s0)
    OB1s1                                    0x200002fc   Data          12  main.o(.bss.OB1s1)
    OB1s1Delay                               0x20000308   Data           8  main.o(.bss.OB1s1Delay)
    OB1s2                                    0x20000310   Data          12  main.o(.bss.OB1s2)
    OB1s2Delay                               0x2000031c   Data           8  main.o(.bss.OB1s2Delay)
    OB1s3                                    0x20000324   Data          12  main.o(.bss.OB1s3)
    OB1s4                                    0x20000330   Data          12  main.o(.bss.OB1s4)
    OB1s4Delay                               0x2000033c   Data           8  main.o(.bss.OB1s4Delay)
    OB1s4MeTimer                             0x20000344   Data          16  main.o(.bss.OB1s4MeTimer)
    OB1s5                                    0x20000354   Data          12  main.o(.bss.OB1s5)
    OB1step                                  0x20000360   Data           1  main.o(.bss.OB1step)
    S4                                       0x20000364   Data          32  main.o(.bss.S4)
    S5                                       0x20000384   Data          32  main.o(.bss.S5)
    S6                                       0x200003a4   Data          32  main.o(.bss.S6)
    __cxa_new_handler                        0x200003c4   Data           4  cxa_default_handlers.cpp.o(.bss.__cxa_new_handler)
    pxCurrentTCB                             0x200003cc   Data           4  tasks.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00003e18, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00003dc8, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO          948    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO          989  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x00000034   Code   RO         1375    !!!scatter          c_w.l(__scatter.o)
    0x08000128   0x08000128   0x0000001a   Code   RO         1377    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000142   0x08000142   0x00000002   PAD
    0x08000144   0x08000144   0x0000001c   Code   RO         1379    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000160   0x08000160   0x00000002   Code   RO         1313    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1126    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1128    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1130    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000008   Code   RO         1131    .ARM.Collect$$libinit$$00000007  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1133    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1135    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1137    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1140    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1142    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1144    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1146    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1148    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1150    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1152    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1154    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1156    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1158    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1160    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1164    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1166    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1168    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000004   Code   RO         1169    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x0800016e   0x0800016e   0x00000000   Code   RO         1170    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0800016e   0x0800016e   0x00000002   Code   RO         1171    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000170   0x08000170   0x00000002   Code   RO         1373    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000172   0x08000172   0x00000006   Code   RO         1314    .ARM.Collect$$libshutdown$$00000001  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1315    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1317    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1320    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1323    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1325    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1328    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000002   Code   RO         1329    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0800017a   0x0800017a   0x00000000   Code   RO         1048    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0800017a   0x0800017a   0x00000000   Code   RO         1203    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0800017a   0x0800017a   0x00000006   Code   RO         1215    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000180   0x08000180   0x00000000   Code   RO         1205    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x08000180   0x08000180   0x00000004   Code   RO         1206    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000184   0x08000184   0x00000000   Code   RO         1208    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000184   0x08000184   0x00000008   Code   RO         1209    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800018c   0x0800018c   0x00000002   Code   RO         1330    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1345    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800018e   0x0800018e   0x00000004   Code   RO         1346    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000192   0x08000192   0x00000006   Code   RO         1347    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000198   0x08000198   0x00000040   Code   RO          949    .text               startup_stm32f10x_md.o
    0x080001d8   0x080001d8   0x0000000a   Code   RO          976    .text               c_w.l(cxa_atexit.o)
    0x080001e2   0x080001e2   0x0000008a   Code   RO          979    .text               c_w.l(rt_memcpy_v6.o)
    0x0800026c   0x0800026c   0x00000010   Code   RO          981    .text               c_w.l(aeabi_memset4.o)
    0x0800027c   0x0800027c   0x00000044   Code   RO          983    .text               c_w.l(rt_memclr.o)
    0x080002c0   0x080002c0   0x0000004e   Code   RO          985    .text               c_w.l(rt_memclr_w.o)
    0x0800030e   0x0800030e   0x00000006   Code   RO          987    .text               c_w.l(heapauxi.o)
    0x08000314   0x08000314   0x00000024   Code   RO          994    .text               c_w.l(init_aeabi.o)
    0x08000338   0x08000338   0x0000005e   Code   RO         1053    .text               c_w.l(h1_alloc.o)
    0x08000396   0x08000396   0x0000004e   Code   RO         1055    .text               c_w.l(h1_free.o)
    0x080003e4   0x080003e4   0x00000016   Code   RO         1115    .text               c_w.l(abort.o)
    0x080003fa   0x080003fa   0x0000002e   Code   RO         1120    .text               c_w.l(aeabi_atexit.o)
    0x08000428   0x08000428   0x00000064   Code   RO         1123    .text               c_w.l(rt_memcpy_w.o)
    0x0800048c   0x0800048c   0x0000000c   Code   RO         1196    .text               c_w.l(sys_exit.o)
    0x08000498   0x08000498   0x00000008   Code   RO         1220    .text               c_w.l(rt_heap_descriptor_intlibspace.o)
    0x080004a0   0x080004a0   0x00000008   Code   RO         1225    .text               c_w.l(rt_ddtor_pointer_addr_intlibspace.o)
    0x080004a8   0x080004a8   0x00000004   Code   RO         1227    .text               c_w.l(hguard.o)
    0x080004ac   0x080004ac   0x0000008a   Code   RO         1229    .text               c_w.l(init_alloc.o)
    0x08000536   0x08000536   0x0000000e   Code   RO         1233    .text               c_w.l(h1_init.o)
    0x08000544   0x08000544   0x00000042   Code   RO         1245    .text               c_w.l(cxa_finalize.o)
    0x08000586   0x08000586   0x0000000e   Code   RO         1248    .text               c_w.l(defsig_abrt_outer.o)
    0x08000594   0x08000594   0x00000008   Code   RO         1273    .text               c_w.l(libspace.o)
    0x0800059c   0x0800059c   0x00000002   Code   RO         1276    .text               c_w.l(use_no_semi.o)
    0x0800059e   0x0800059e   0x00000000   Code   RO         1278    .text               c_w.l(indicate_semi.o)
    0x0800059e   0x0800059e   0x0000004a   Code   RO         1279    .text               c_w.l(sys_stackheap_outer.o)
    0x080005e8   0x080005e8   0x00000000   Code   RO         1285    .text               c_w.l(maybetermalloc1.o)
    0x080005e8   0x080005e8   0x00000034   Code   RO         1287    .text               c_w.l(h1_extend.o)
    0x0800061c   0x0800061c   0x00000012   Code   RO         1291    .text               c_w.l(exit.o)
    0x0800062e   0x0800062e   0x0000000a   Code   RO         1293    .text               c_w.l(defsig_exit.o)
    0x08000638   0x08000638   0x00000030   Code   RO         1295    .text               c_w.l(defsig_abrt_inner.o)
    0x08000668   0x08000668   0x0000000e   Code   RO         1297    .text               c_w.l(defsig_rtmem_outer.o)
    0x08000676   0x08000676   0x00000032   Code   RO         1336    .text               c_w.l(defsig_general.o)
    0x080006a8   0x080006a8   0x00000050   Code   RO         1338    .text               c_w.l(defsig_rtmem_inner.o)
    0x080006f8   0x080006f8   0x0000000e   Code   RO         1340    .text               c_w.l(sys_wrch.o)
    0x08000706   0x08000706   0x0000000a   PAD
    0x08000710   0x08000710   0x00000044   Code   RO          172    .text.PendSV_Handler  port.o
    0x08000754   0x08000754   0x0000000c   PAD
    0x08000760   0x08000760   0x00000024   Code   RO          158    .text.SVC_Handler   port.o
    0x08000784   0x08000784   0x00000008   Code   RO          957    .text.SetSysClock   system_stm32f10x.o
    0x0800078c   0x0800078c   0x00000122   Code   RO          961    .text.SetSysClockTo72  system_stm32f10x.o
    0x080008ae   0x080008ae   0x00000002   PAD
    0x080008b0   0x080008b0   0x0000003c   Code   RO          174    .text.SysTick_Handler  port.o
    0x080008ec   0x080008ec   0x00000122   Code   RO          959    .text.SystemCoreClockUpdate  system_stm32f10x.o
    0x08000a0e   0x08000a0e   0x00000002   PAD
    0x08000a10   0x08000a10   0x00000066   Code   RO          955    .text.SystemInit    system_stm32f10x.o
    0x08000a76   0x08000a76   0x00000002   PAD
    0x08000a78   0x08000a78   0x0000004c   Code   RO           92    .text.TIM2_IRQHandler  main.o
    0x08000ac4   0x08000ac4   0x000000a8   Code   RO           96    .text._GLOBAL__sub_I_main.cpp  main.o
    0x08000b6c   0x08000b6c   0x0000000e   Code   RO          656    .text._Z10commonInitv  init.o
    0x08000b7a   0x08000b7a   0x00000002   PAD
    0x08000b7c   0x08000b7c   0x00000040   Code   RO          647    .text._Z11getPositionj  common.o
    0x08000bbc   0x08000bbc   0x00000020   Code   RO          675    .text._Z11setRegisterIVjEvPT_jj  init.o
    0x08000bdc   0x08000bdc   0x0000004c   Code   RO          608    .text._Z13resetAllStepsv  ob1.o
    0x08000c28   0x08000c28   0x00000044   Code   RO          734    .text._Z17setBitsInRegisterIVjEvPT_jj  coil.o
    0x08000c6c   0x08000c6c   0x00000256   Code   RO          610    .text._Z7OB1TaskPv  ob1.o
    0x08000ec2   0x08000ec2   0x00000002   PAD
    0x08000ec4   0x08000ec4   0x000000be   Code   RO          660    .text._Z7rccInitv   init.o
    0x08000f82   0x08000f82   0x00000002   PAD
    0x08000f84   0x08000f84   0x00000058   Code   RO          662    .text._Z8tickInitv  init.o
    0x08000fdc   0x08000fdc   0x00000030   Code   RO          664    .text._ZL16__NVIC_EnableIRQ4IRQn  init.o
    0x0800100c   0x0800100c   0x00000042   Code   RO          666    .text._ZL18__NVIC_SetPriority4IRQnj  init.o
    0x0800104e   0x0800104e   0x00000002   PAD
    0x08001050   0x08001050   0x0000003c   Code   RO          658    .text._ZL26__NVIC_SetPriorityGroupingj  init.o
    0x0800108c   0x0800108c   0x00000084   Code   RO          612    .text._ZL8setCoilsbbbbb  ob1.o
    0x08001110   0x08001110   0x000000e2   Code   RO          740    .text._ZN10GPIOcommonC2EP12GPIO_TypeDefh  gpio_common.o
    0x080011f2   0x080011f2   0x00000002   PAD
    0x080011f4   0x080011f4   0x00000016   Code   RO          833    .text._ZN11CommonTimer11notFinishedEv  common_timer.o
    0x0800120a   0x0800120a   0x00000002   PAD
    0x0800120c   0x0800120c   0x00000018   Code   RO          817    .text._ZN11CommonTimer4stopEv  common_timer.o
    0x08001224   0x08001224   0x0000000e   Code   RO          815    .text._ZN11CommonTimer5pauseEv  common_timer.o
    0x08001232   0x08001232   0x00000002   PAD
    0x08001234   0x08001234   0x00000010   Code   RO          819    .text._ZN11CommonTimer5resetEv  common_timer.o
    0x08001244   0x08001244   0x0000000e   Code   RO          813    .text._ZN11CommonTimer5startEv  common_timer.o
    0x08001252   0x08001252   0x00000002   PAD
    0x08001254   0x08001254   0x0000002e   Code   RO          837    .text._ZN11CommonTimer6inWorkEv  common_timer.o
    0x08001282   0x08001282   0x00000002   PAD
    0x08001284   0x08001284   0x00000010   Code   RO          829    .text._ZN11CommonTimer7startedEv  common_timer.o
    0x08001294   0x08001294   0x00000016   Code   RO          803    .text._ZN11CommonTimer8finishedEv  common_timer.o
    0x080012aa   0x080012aa   0x00000002   PAD
    0x080012ac   0x080012ac   0x0000002c   Code   RO          825    .text._ZN11CommonTimer8setStartEb  common_timer.o
    0x080012d8   0x080012d8   0x00000038   Code   RO          801    .text._ZN11CommonTimer9update1msEv  common_timer.o
    0x08001310   0x08001310   0x00000026   Code   RO          799    .text._ZN11CommonTimerC2Ej  common_timer.o
    0x08001336   0x08001336   0x00000002   PAD
    0x08001338   0x08001338   0x00000020   Code   RO          827    .text._ZN11CommonTimeraSEb  common_timer.o
    0x08001358   0x08001358   0x00000016   Code   RO          848    .text._ZN11IUpdated1msC2Ev  common_timer.o
    0x0800136e   0x0800136e   0x00000002   PAD
    0x08001370   0x08001370   0x00000016   Code   RO          767    .text._ZN11SimpleInput11isNotActiveEv  simple_input.o
    0x08001386   0x08001386   0x00000002   PAD
    0x08001388   0x08001388   0x00000040   Code   RO          765    .text._ZN11SimpleInput8isActiveEv  simple_input.o
    0x080013c8   0x080013c8   0x00000098   Code   RO          763    .text._ZN11SimpleInputC2EP12GPIO_TypeDefh  simple_input.o
    0x08001460   0x08001460   0x00000010   Code   RO          678    .text._ZN12ProgrammCoil8isActiveEv  coil.o
    0x08001470   0x08001470   0x00000018   Code   RO          680    .text._ZN12ProgrammCoil8setValueEb  coil.o
    0x08001488   0x08001488   0x00000020   Code   RO          732    .text._ZN12ProgrammCoilC2Ev  coil.o
    0x080014a8   0x080014a8   0x00000012   Code   RO          775    .text._ZN18SimpleInputDelayed8isActiveEv  simple_input.o
    0x080014ba   0x080014ba   0x00000002   PAD
    0x080014bc   0x080014bc   0x00000024   Code   RO          771    .text._ZN18SimpleInputDelayed9update1msEv  simple_input.o
    0x080014e0   0x080014e0   0x00000042   Code   RO          769    .text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht  simple_input.o
    0x08001522   0x08001522   0x00000002   PAD
    0x08001524   0x08001524   0x00000016   Code   RO          692    .text._ZN4Coil8isActiveEv  coil.o
    0x0800153a   0x0800153a   0x00000002   PAD
    0x0800153c   0x0800153c   0x00000042   Code   RO          694    .text._ZN4Coil8setValueEb  coil.o
    0x0800157e   0x0800157e   0x00000002   PAD
    0x08001580   0x08001580   0x00000076   Code   RO          690    .text._ZN4CoilC2EP12GPIO_TypeDefh  coil.o
    0x080015f6   0x080015f6   0x00000002   PAD
    0x080015f8   0x080015f8   0x00000022   Code   RO          696    .text._ZN4CoilaSEb  coil.o
    0x0800161a   0x0800161a   0x00000002   PAD
    0x0800161c   0x0800161c   0x00000016   Code   RO          736    .text._ZN7ISwitchC2Ev  coil.o
    0x08001632   0x08001632   0x00000002   PAD
    0x08001634   0x08001634   0x00000012   Code   RO          882    .text._ZN7OnDelay3getEv  on_delay.o
    0x08001646   0x08001646   0x00000002   PAD
    0x08001648   0x08001648   0x0000001e   Code   RO          880    .text._ZN7OnDelay3setEb  on_delay.o
    0x08001666   0x08001666   0x00000002   PAD
    0x08001668   0x08001668   0x00000014   Code   RO          878    .text._ZN7OnDelay9update1msEv  on_delay.o
    0x0800167c   0x0800167c   0x0000003a   Code   RO          874    .text._ZN7OnDelayC2Ej  on_delay.o
    0x080016b6   0x080016b6   0x00000002   PAD
    0x080016b8   0x080016b8   0x0000002e   Code   RO          876    .text._ZN7OnDelayD2Ev  on_delay.o
    0x080016e6   0x080016e6   0x00000002   PAD
    0x080016e8   0x080016e8   0x00000020   Code   RO          886    .text._ZN7OnDelayaSEb  on_delay.o
    0x08001708   0x08001708   0x00000018   Code   RO          926    .text._ZN8Sequence4lockEb  sequence.o
    0x08001720   0x08001720   0x00000018   Code   RO          922    .text._ZN8Sequence5resetEv  sequence.o
    0x08001738   0x08001738   0x0000002c   Code   RO          924    .text._ZN8Sequence5startEb  sequence.o
    0x08001764   0x08001764   0x00000044   Code   RO          928    .text._ZN8Sequence6finishEb  sequence.o
    0x080017a8   0x080017a8   0x00000050   Code   RO          930    .text._ZN8Sequence6slfSetEbbb  sequence.o
    0x080017f8   0x080017f8   0x0000002a   Code   RO          932    .text._ZN8Sequence7startedEv  sequence.o
    0x08001822   0x08001822   0x00000002   PAD
    0x08001824   0x08001824   0x00000010   Code   RO          936    .text._ZN8Sequence8finishedEv  sequence.o
    0x08001834   0x08001834   0x00000018   Code   RO          920    .text._ZN8Sequence8isMyStepEv  sequence.o
    0x0800184c   0x0800184c   0x00000026   Code   RO          918    .text._ZN8SequenceC2EPhh  sequence.o
    0x08001872   0x08001872   0x00000002   PAD
    0x08001874   0x08001874   0x00000010   Code   RO          716    .text._ZN9CoilPulse8isActiveEv  coil.o
    0x08001884   0x08001884   0x0000001e   Code   RO          718    .text._ZN9CoilPulse8setValueEb  coil.o
    0x080018a2   0x080018a2   0x00000002   PAD
    0x080018a4   0x080018a4   0x00000024   Code   RO          712    .text._ZN9CoilPulse9update1msEv  coil.o
    0x080018c8   0x080018c8   0x00000042   Code   RO          710    .text._ZN9CoilPulseC2EP12GPIO_TypeDefht  coil.o
    0x0800190a   0x0800190a   0x00000002   PAD
    0x0800190c   0x0800190c   0x00000022   Code   RO          720    .text._ZN9CoilPulseaSEb  coil.o
    0x0800192e   0x0800192e   0x00000002   PAD
    0x08001930   0x08001930   0x0000008a   Code   RO          750    .text._ZN9RFimpulse3setEb  rf_impulse.o
    0x080019ba   0x080019ba   0x00000002   PAD
    0x080019bc   0x080019bc   0x00000014   Code   RO          748    .text._ZN9RFimpulseC2E7IMPULSE  rf_impulse.o
    0x080019d0   0x080019d0   0x0000000c   Code   RO         1189    .text._ZSt15get_new_handlerv  libcppabi_w.l(cxa_handlers.cpp.o)
    0x080019dc   0x080019dc   0x0000000e   Code   RO          773    .text._ZThn16_N18SimpleInputDelayed9update1msEv  simple_input.o
    0x080019ea   0x080019ea   0x00000002   PAD
    0x080019ec   0x080019ec   0x0000000e   Code   RO          714    .text._ZThn16_N9CoilPulse9update1msEv  coil.o
    0x080019fa   0x080019fa   0x00000004   Code   RO         1008    .text._ZdlPv        libcpp_w.l(new.cpp.o)
    0x080019fe   0x080019fe   0x00000004   Code   RO         1012    .text._ZdlPvj       libcpp_w.l(new.cpp.o)
    0x08001a02   0x08001a02   0x00000002   PAD
    0x08001a04   0x08001a04   0x00000026   Code   RO         1000    .text._Znwj         libcpp_w.l(new.cpp.o)
    0x08001a2a   0x08001a2a   0x00000002   PAD
    0x08001a2c   0x08001a2c   0x00000028   Code   RO         1043    .text.__cxa_pure_virtual  libcppabi_w.l(cxa_virtual.cpp.o)
    0x08001a54   0x08001a54   0x0000001c   Code   RO            2    .text.__cxx_global_var_init  main.o
    0x08001a70   0x08001a70   0x0000001c   Code   RO            4    .text.__cxx_global_var_init.1  main.o
    0x08001a8c   0x08001a8c   0x0000001a   Code   RO           22    .text.__cxx_global_var_init.10  main.o
    0x08001aa6   0x08001aa6   0x00000002   PAD
    0x08001aa8   0x08001aa8   0x0000001a   Code   RO           24    .text.__cxx_global_var_init.11  main.o
    0x08001ac2   0x08001ac2   0x00000002   PAD
    0x08001ac4   0x08001ac4   0x0000001e   Code   RO           26    .text.__cxx_global_var_init.12  main.o
    0x08001ae2   0x08001ae2   0x00000002   PAD
    0x08001ae4   0x08001ae4   0x0000001a   Code   RO           28    .text.__cxx_global_var_init.13  main.o
    0x08001afe   0x08001afe   0x00000002   PAD
    0x08001b00   0x08001b00   0x0000001a   Code   RO           30    .text.__cxx_global_var_init.14  main.o
    0x08001b1a   0x08001b1a   0x00000002   PAD
    0x08001b1c   0x08001b1c   0x0000001a   Code   RO           32    .text.__cxx_global_var_init.15  main.o
    0x08001b36   0x08001b36   0x00000002   PAD
    0x08001b38   0x08001b38   0x0000001e   Code   RO           34    .text.__cxx_global_var_init.16  main.o
    0x08001b56   0x08001b56   0x00000002   PAD
    0x08001b58   0x08001b58   0x0000001a   Code   RO           36    .text.__cxx_global_var_init.17  main.o
    0x08001b72   0x08001b72   0x00000002   PAD
    0x08001b74   0x08001b74   0x0000001a   Code   RO           38    .text.__cxx_global_var_init.18  main.o
    0x08001b8e   0x08001b8e   0x00000002   PAD
    0x08001b90   0x08001b90   0x0000001a   Code   RO           40    .text.__cxx_global_var_init.19  main.o
    0x08001baa   0x08001baa   0x00000002   PAD
    0x08001bac   0x08001bac   0x0000001c   Code   RO            6    .text.__cxx_global_var_init.2  main.o
    0x08001bc8   0x08001bc8   0x0000001e   Code   RO           42    .text.__cxx_global_var_init.20  main.o
    0x08001be6   0x08001be6   0x00000002   PAD
    0x08001be8   0x08001be8   0x0000001a   Code   RO           44    .text.__cxx_global_var_init.21  main.o
    0x08001c02   0x08001c02   0x00000002   PAD
    0x08001c04   0x08001c04   0x0000001a   Code   RO           46    .text.__cxx_global_var_init.22  main.o
    0x08001c1e   0x08001c1e   0x00000002   PAD
    0x08001c20   0x08001c20   0x0000001a   Code   RO           48    .text.__cxx_global_var_init.23  main.o
    0x08001c3a   0x08001c3a   0x00000002   PAD
    0x08001c3c   0x08001c3c   0x0000001a   Code   RO           50    .text.__cxx_global_var_init.24  main.o
    0x08001c56   0x08001c56   0x00000002   PAD
    0x08001c58   0x08001c58   0x0000001a   Code   RO           52    .text.__cxx_global_var_init.25  main.o
    0x08001c72   0x08001c72   0x00000002   PAD
    0x08001c74   0x08001c74   0x0000001a   Code   RO           54    .text.__cxx_global_var_init.26  main.o
    0x08001c8e   0x08001c8e   0x00000002   PAD
    0x08001c90   0x08001c90   0x0000001a   Code   RO           56    .text.__cxx_global_var_init.27  main.o
    0x08001caa   0x08001caa   0x00000002   PAD
    0x08001cac   0x08001cac   0x0000001a   Code   RO           58    .text.__cxx_global_var_init.28  main.o
    0x08001cc6   0x08001cc6   0x00000002   PAD
    0x08001cc8   0x08001cc8   0x0000001a   Code   RO           60    .text.__cxx_global_var_init.29  main.o
    0x08001ce2   0x08001ce2   0x00000002   PAD
    0x08001ce4   0x08001ce4   0x0000001c   Code   RO            8    .text.__cxx_global_var_init.3  main.o
    0x08001d00   0x08001d00   0x0000001a   Code   RO           62    .text.__cxx_global_var_init.30  main.o
    0x08001d1a   0x08001d1a   0x00000002   PAD
    0x08001d1c   0x08001d1c   0x0000001a   Code   RO           64    .text.__cxx_global_var_init.31  main.o
    0x08001d36   0x08001d36   0x00000002   PAD
    0x08001d38   0x08001d38   0x0000001a   Code   RO           66    .text.__cxx_global_var_init.32  main.o
    0x08001d52   0x08001d52   0x00000002   PAD
    0x08001d54   0x08001d54   0x00000034   Code   RO           68    .text.__cxx_global_var_init.33  main.o
    0x08001d88   0x08001d88   0x00000030   Code   RO           70    .text.__cxx_global_var_init.34  main.o
    0x08001db8   0x08001db8   0x00000034   Code   RO           72    .text.__cxx_global_var_init.35  main.o
    0x08001dec   0x08001dec   0x00000018   Code   RO           74    .text.__cxx_global_var_init.36  main.o
    0x08001e04   0x08001e04   0x0000001a   Code   RO           76    .text.__cxx_global_var_init.37  main.o
    0x08001e1e   0x08001e1e   0x00000002   PAD
    0x08001e20   0x08001e20   0x0000001a   Code   RO           78    .text.__cxx_global_var_init.38  main.o
    0x08001e3a   0x08001e3a   0x00000002   PAD
    0x08001e3c   0x08001e3c   0x0000001a   Code   RO           80    .text.__cxx_global_var_init.39  main.o
    0x08001e56   0x08001e56   0x00000002   PAD
    0x08001e58   0x08001e58   0x0000001c   Code   RO           10    .text.__cxx_global_var_init.4  main.o
    0x08001e74   0x08001e74   0x00000030   Code   RO           82    .text.__cxx_global_var_init.40  main.o
    0x08001ea4   0x08001ea4   0x0000001c   Code   RO           12    .text.__cxx_global_var_init.5  main.o
    0x08001ec0   0x08001ec0   0x0000001e   Code   RO           14    .text.__cxx_global_var_init.6  main.o
    0x08001ede   0x08001ede   0x00000002   PAD
    0x08001ee0   0x08001ee0   0x0000001e   Code   RO           16    .text.__cxx_global_var_init.7  main.o
    0x08001efe   0x08001efe   0x00000002   PAD
    0x08001f00   0x08001f00   0x0000001e   Code   RO           18    .text.__cxx_global_var_init.8  main.o
    0x08001f1e   0x08001f1e   0x00000002   PAD
    0x08001f20   0x08001f20   0x0000001a   Code   RO           20    .text.__cxx_global_var_init.9  main.o
    0x08001f3a   0x08001f3a   0x00000004   Code   RO         1193    .text.abort_message  libcppabi_w.l(abort_message.cpp.o)
    0x08001f3e   0x08001f3e   0x00000002   PAD
    0x08001f40   0x08001f40   0x0000003e   Code   RO           94    .text.main          main.o
    0x08001f7e   0x08001f7e   0x00000002   PAD
    0x08001f80   0x08001f80   0x0000011a   Code   RO          407    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x0800209a   0x0800209a   0x00000002   PAD
    0x0800209c   0x0800209c   0x00000154   Code   RO          395    .text.prvAddNewTaskToReadyList  tasks.o
    0x080021f0   0x080021f0   0x0000006a   Code   RO          543    .text.prvCheckForValidListAndQueue  timers.o
    0x0800225a   0x0800225a   0x00000002   PAD
    0x0800225c   0x0800225c   0x0000005a   Code   RO          509    .text.prvCheckTasksWaitingTermination  tasks.o
    0x080022b6   0x080022b6   0x00000002   PAD
    0x080022b8   0x080022b8   0x00000042   Code   RO          297    .text.prvCopyDataFromQueue  queue.o
    0x080022fa   0x080022fa   0x00000002   PAD
    0x080022fc   0x080022fc   0x00000018   Code   RO          401    .text.prvDeleteTCB  tasks.o
    0x08002314   0x08002314   0x00000040   Code   RO          577    .text.prvGetNextExpireTime  timers.o
    0x08002354   0x08002354   0x000000ae   Code   RO          218    .text.prvHeapInit   heap_4.o
    0x08002402   0x08002402   0x00000002   PAD
    0x08002404   0x08002404   0x0000003c   Code   RO          433    .text.prvIdleTask   tasks.o
    0x08002440   0x08002440   0x00000048   Code   RO          269    .text.prvInitialiseNewQueue  queue.o
    0x08002488   0x08002488   0x000000e6   Code   RO          393    .text.prvInitialiseNewTask  tasks.o
    0x0800256e   0x0800256e   0x00000002   PAD
    0x08002570   0x08002570   0x0000008e   Code   RO          507    .text.prvInitialiseTaskLists  tasks.o
    0x080025fe   0x080025fe   0x00000002   PAD
    0x08002600   0x08002600   0x000000c6   Code   RO          220    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x080026c6   0x080026c6   0x00000002   PAD
    0x080026c8   0x080026c8   0x00000086   Code   RO          591    .text.prvInsertTimerInActiveList  timers.o
    0x0800274e   0x0800274e   0x00000002   PAD
    0x08002750   0x08002750   0x00000028   Code   RO          299    .text.prvIsQueueEmpty  queue.o
    0x08002778   0x08002778   0x00000020   Code   RO          164    .text.prvPortStartFirstTask  port.o
    0x08002798   0x08002798   0x00000054   Code   RO          585    .text.prvProcessExpiredTimer  timers.o
    0x080027ec   0x080027ec   0x00000126   Code   RO          581    .text.prvProcessReceivedCommands  timers.o
    0x08002912   0x08002912   0x00000002   PAD
    0x08002914   0x08002914   0x0000009a   Code   RO          579    .text.prvProcessTimerOrBlockTask  timers.o
    0x080029ae   0x080029ae   0x00000002   PAD
    0x080029b0   0x080029b0   0x00000034   Code   RO          589    .text.prvReloadTimer  timers.o
    0x080029e4   0x080029e4   0x0000003c   Code   RO          399    .text.prvResetNextTaskUnblockTime  tasks.o
    0x08002a20   0x08002a20   0x00000044   Code   RO          583    .text.prvSampleTimeNow  timers.o
    0x08002a64   0x08002a64   0x00000052   Code   RO          587    .text.prvSwitchTimerLists  timers.o
    0x08002ab6   0x08002ab6   0x00000002   PAD
    0x08002ab8   0x08002ab8   0x00000026   Code   RO          156    .text.prvTaskExitError  port.o
    0x08002ade   0x08002ade   0x00000002   PAD
    0x08002ae0   0x08002ae0   0x0000001e   Code   RO          545    .text.prvTimerTask  timers.o
    0x08002afe   0x08002afe   0x00000002   PAD
    0x08002b00   0x08002b00   0x000000ae   Code   RO          289    .text.prvUnlockQueue  queue.o
    0x08002bae   0x08002bae   0x00000002   PAD
    0x08002bb0   0x08002bb0   0x00000186   Code   RO          216    .text.pvPortMalloc  heap_4.o
    0x08002d36   0x08002d36   0x00000002   PAD
    0x08002d38   0x08002d38   0x00000050   Code   RO          154    .text.pxPortInitialiseStack  port.o
    0x08002d88   0x08002d88   0x00000048   Code   RO          256    .text.uxListRemove  list.o
    0x08002dd0   0x08002dd0   0x00000002   Code   RO           84    .text.vApplicationIdleHook  main.o
    0x08002dd2   0x08002dd2   0x00000002   PAD
    0x08002dd4   0x08002dd4   0x0000000a   Code   RO           90    .text.vApplicationStackOverflowHook  main.o
    0x08002dde   0x08002dde   0x00000002   PAD
    0x08002de0   0x08002de0   0x00000002   Code   RO           86    .text.vApplicationTickHook  main.o
    0x08002de2   0x08002de2   0x00000002   PAD
    0x08002de4   0x08002de4   0x0000002e   Code   RO          248    .text.vListInitialise  list.o
    0x08002e12   0x08002e12   0x00000002   PAD
    0x08002e14   0x08002e14   0x0000000e   Code   RO          250    .text.vListInitialiseItem  list.o
    0x08002e22   0x08002e22   0x00000002   PAD
    0x08002e24   0x08002e24   0x0000006a   Code   RO          254    .text.vListInsert   list.o
    0x08002e8e   0x08002e8e   0x00000002   PAD
    0x08002e90   0x08002e90   0x00000030   Code   RO          168    .text.vPortEnterCritical  port.o
    0x08002ec0   0x08002ec0   0x00000026   Code   RO          170    .text.vPortExitCritical  port.o
    0x08002ee6   0x08002ee6   0x00000002   PAD
    0x08002ee8   0x08002ee8   0x00000076   Code   RO          222    .text.vPortFree     heap_4.o
    0x08002f5e   0x08002f5e   0x00000002   PAD
    0x08002f60   0x08002f60   0x0000002e   Code   RO          162    .text.vPortSetupTimerInterrupt  port.o
    0x08002f8e   0x08002f8e   0x00000002   PAD
    0x08002f90   0x08002f90   0x00000064   Code   RO          327    .text.vQueueWaitForMessageRestricted  queue.o
    0x08002ff4   0x08002ff4   0x0000004a   Code   RO          411    .text.vTaskDelay    tasks.o
    0x0800303e   0x0800303e   0x00000002   PAD
    0x08003040   0x08003040   0x00000024   Code   RO          465    .text.vTaskInternalSetTimeOutState  tasks.o
    0x08003064   0x08003064   0x0000000e   Code   RO          469    .text.vTaskMissedYield  tasks.o
    0x08003072   0x08003072   0x00000002   PAD
    0x08003074   0x08003074   0x00000026   Code   RO          453    .text.vTaskPlaceOnEventList  tasks.o
    0x0800309a   0x0800309a   0x00000002   PAD
    0x0800309c   0x0800309c   0x00000060   Code   RO          457    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x080030fc   0x080030fc   0x00000094   Code   RO          431    .text.vTaskStartScheduler  tasks.o
    0x08003190   0x08003190   0x00000010   Code   RO          405    .text.vTaskSuspendAll  tasks.o
    0x080031a0   0x080031a0   0x000000ec   Code   RO          423    .text.vTaskSwitchContext  tasks.o
    0x0800328c   0x0800328c   0x00000040   Code   RO          160    .text.xPortStartScheduler  port.o
    0x080032cc   0x080032cc   0x0000007e   Code   RO          267    .text.xQueueGenericCreate  queue.o
    0x0800334a   0x0800334a   0x00000002   PAD
    0x0800334c   0x0800334c   0x000000d0   Code   RO          265    .text.xQueueGenericReset  queue.o
    0x0800341c   0x0800341c   0x00000152   Code   RO          295    .text.xQueueReceive  queue.o
    0x0800356e   0x0800356e   0x00000002   PAD
    0x08003570   0x08003570   0x0000009a   Code   RO          467    .text.xTaskCheckForTimeOut  tasks.o
    0x0800360a   0x0800360a   0x00000002   PAD
    0x0800360c   0x0800360c   0x000000a0   Code   RO          391    .text.xTaskCreate   tasks.o
    0x080036ac   0x080036ac   0x00000014   Code   RO          439    .text.xTaskGetTickCount  tasks.o
    0x080036c0   0x080036c0   0x00000254   Code   RO          437    .text.xTaskIncrementTick  tasks.o
    0x08003914   0x08003914   0x00000170   Code   RO          459    .text.xTaskRemoveFromEventList  tasks.o
    0x08003a84   0x08003a84   0x000001fe   Code   RO          409    .text.xTaskResumeAll  tasks.o
    0x08003c82   0x08003c82   0x00000002   PAD
    0x08003c84   0x08003c84   0x00000050   Code   RO          541    .text.xTimerCreateTimerTask  timers.o
    0x08003cd4   0x08003cd4   0x00000010   Data   RO          964    .rodata.AHBPrescTable  system_stm32f10x.o
    0x08003ce4   0x08003ce4   0x00000010   Data   RO          841    .rodata._ZTV11CommonTimer  common_timer.o
    0x08003cf4   0x08003cf4   0x0000000c   Data   RO          850    .rodata._ZTV11IUpdated1ms  common_timer.o
    0x08003d00   0x08003d00   0x0000000c   Data   RO          777    .rodata._ZTV11SimpleInput  simple_input.o
    0x08003d0c   0x08003d0c   0x00000010   Data   RO          725    .rodata._ZTV12ProgrammCoil  coil.o
    0x08003d1c   0x08003d1c   0x00000020   Data   RO          778    .rodata._ZTV18SimpleInputDelayed  simple_input.o
    0x08003d3c   0x08003d3c   0x00000010   Data   RO          722    .rodata._ZTV4Coil   coil.o
    0x08003d4c   0x08003d4c   0x0000000c   Data   RO          738    .rodata._ZTV7ISwitch  coil.o
    0x08003d58   0x08003d58   0x0000000c   Data   RO          888    .rodata._ZTV7OnDelay  on_delay.o
    0x08003d64   0x08003d64   0x00000024   Data   RO          724    .rodata._ZTV9CoilPulse  coil.o
    0x08003d88   0x08003d88   0x00000008   Data   RO          144    .rodata.str1.1      main.o
    0x08003d90   0x08003d90   0x00000005   Data   RO          527    .rodata.str1.1      tasks.o
    0x08003d95   0x08003d95   0x00000008   Data   RO          594    .rodata.str1.1      timers.o
    0x08003d9d   0x08003d9d   0x00000003   PAD
    0x08003da0   0x08003da0   0x00000004   Data   RO          512    .rodata.uxTopUsedPriority  tasks.o
    0x08003da4   0x08003da4   0x00000020   Data   RO         1374    Region$$Table       anon$$obj.o
    0x08003dc4   0x08003dc4   0x00000004   Data   RO          145    .init_array         main.o
    0x08003dc8   0x08003dc4   0x00000000   Data   RO          992    .init_array         c_w.l(init_aeabi.o)


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08003dc8, Size: 0x00003d28, Max: 0x00005000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08003dc8   0x00000004   Data   RW          963    .data.SystemCoreClock  system_stm32f10x.o
    0x20000004   0x08003dcc   0x00000040   Data   RW          142    .data.update1msObjects  main.o
    0x20000044   0x08003e0c   0x00000001   Data   RW          143    .data.updateObjectsSize  main.o
    0x20000045   0x08003e0d   0x00000003   PAD
    0x20000048   0x08003e10   0x00000004   Data   RW          176    .data.uxCriticalNesting  port.o
    0x2000004c   0x08003e14   0x00000004   PAD
    0x20000050        -       0x00000060   Zero   RW         1274    .bss                c_w.l(libspace.o)
    0x200000b0        -       0x00000020   Zero   RW           98    .bss.B1             main.o
    0x200000d0        -       0x00000020   Zero   RW          100    .bss.B2             main.o
    0x200000f0        -       0x00000020   Zero   RW          102    .bss.B3             main.o
    0x20000110        -       0x00000010   Zero   RW          107    .bss.C1             main.o
    0x20000120        -       0x00000010   Zero   RW          111    .bss.C2             main.o
    0x20000130        -       0x00000010   Zero   RW          115    .bss.C3             main.o
    0x20000140        -       0x0000000c   Zero   RW          137    .bss.CHBs0          main.o
    0x2000014c        -       0x0000000c   Zero   RW          138    .bss.CHBs1          main.o
    0x20000158        -       0x00000008   Zero   RW          140    .bss.CHBs1Delay     main.o
    0x20000160        -       0x0000000c   Zero   RW          139    .bss.CHBs2          main.o
    0x2000016c        -       0x00000001   Zero   RW          136    .bss.CHBstep        main.o
    0x2000016d   0x08003e14   0x00000003   PAD
    0x20000170        -       0x00000010   Zero   RW          109    .bss.D1             main.o
    0x20000180        -       0x00000010   Zero   RW          113    .bss.D2             main.o
    0x20000190        -       0x00000010   Zero   RW          117    .bss.D3             main.o
    0x200001a0        -       0x00000010   Zero   RW          119    .bss.D4             main.o
    0x200001b0        -       0x00000020   Zero   RW           99    .bss.H1             main.o
    0x200001d0        -       0x00000020   Zero   RW          101    .bss.H2             main.o
    0x200001f0        -       0x00000020   Zero   RW          103    .bss.H3             main.o
    0x20000210        -       0x00000020   Zero   RW          110    .bss.M1             main.o
    0x20000230        -       0x00000020   Zero   RW          114    .bss.M2             main.o
    0x20000250        -       0x00000020   Zero   RW          118    .bss.M3             main.o
    0x20000270        -       0x00000010   Zero   RW          120    .bss.M6             main.o
    0x20000280        -       0x00000010   Zero   RW          121    .bss.M7             main.o
    0x20000290        -       0x00000010   Zero   RW          122    .bss.Me1            main.o
    0x200002a0        -       0x00000010   Zero   RW          123    .bss.Me2            main.o
    0x200002b0        -       0x00000010   Zero   RW          124    .bss.Me3            main.o
    0x200002c0        -       0x00000010   Zero   RW          108    .bss.O1             main.o
    0x200002d0        -       0x00000010   Zero   RW          112    .bss.O2             main.o
    0x200002e0        -       0x00000010   Zero   RW          116    .bss.O3             main.o
    0x200002f0        -       0x0000000c   Zero   RW          126    .bss.OB1s0          main.o
    0x200002fc        -       0x0000000c   Zero   RW          127    .bss.OB1s1          main.o
    0x20000308        -       0x00000008   Zero   RW          132    .bss.OB1s1Delay     main.o
    0x20000310        -       0x0000000c   Zero   RW          128    .bss.OB1s2          main.o
    0x2000031c        -       0x00000008   Zero   RW          133    .bss.OB1s2Delay     main.o
    0x20000324        -       0x0000000c   Zero   RW          129    .bss.OB1s3          main.o
    0x20000330        -       0x0000000c   Zero   RW          130    .bss.OB1s4          main.o
    0x2000033c        -       0x00000008   Zero   RW          134    .bss.OB1s4Delay     main.o
    0x20000344        -       0x00000010   Zero   RW          135    .bss.OB1s4MeTimer   main.o
    0x20000354        -       0x0000000c   Zero   RW          131    .bss.OB1s5          main.o
    0x20000360        -       0x00000001   Zero   RW          125    .bss.OB1step        main.o
    0x20000361   0x08003e14   0x00000003   PAD
    0x20000364        -       0x00000020   Zero   RW          104    .bss.S4             main.o
    0x20000384        -       0x00000020   Zero   RW          105    .bss.S5             main.o
    0x200003a4        -       0x00000020   Zero   RW          106    .bss.S6             main.o
    0x200003c4        -       0x00000004   Zero   RW         1267    .bss.__cxa_new_handler  libcppabi_w.l(cxa_default_handlers.cpp.o)
    0x200003c8        -       0x00000004   Zero   RW          598    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x200003cc        -       0x00000004   Zero   RW          511    .bss.pxCurrentTCB   tasks.o
    0x200003d0        -       0x00000004   Zero   RW          596    .bss.pxCurrentTimerList  timers.o
    0x200003d4        -       0x00000004   Zero   RW          521    .bss.pxDelayedTaskList  tasks.o
    0x200003d8        -       0x00000004   Zero   RW          234    .bss.pxEnd          heap_4.o
    0x200003dc        -       0x00000004   Zero   RW          522    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200003e0        -       0x00000004   Zero   RW          597    .bss.pxOverflowTimerList  timers.o
    0x200003e4        -       0x00000064   Zero   RW          513    .bss.pxReadyTasksLists  tasks.o
    0x20000448        -       0x00002800   Zero   RW          240    .bss.ucHeap         heap_4.o
    0x20002c48        -       0x00000004   Zero   RW          518    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002c4c        -       0x00000004   Zero   RW          517    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002c50        -       0x00000004   Zero   RW          524    .bss.uxSchedulerSuspended  tasks.o
    0x20002c54        -       0x00000004   Zero   RW          515    .bss.uxTaskNumber   tasks.o
    0x20002c58        -       0x00000004   Zero   RW          514    .bss.uxTopReadyPriority  tasks.o
    0x20002c5c        -       0x00000014   Zero   RW          599    .bss.xActiveTimerList1  timers.o
    0x20002c70        -       0x00000014   Zero   RW          600    .bss.xActiveTimerList2  timers.o
    0x20002c84        -       0x00000014   Zero   RW          532    .bss.xDelayedTaskList1  tasks.o
    0x20002c98        -       0x00000014   Zero   RW          533    .bss.xDelayedTaskList2  tasks.o
    0x20002cac        -       0x00000004   Zero   RW          235    .bss.xFreeBytesRemaining  heap_4.o
    0x20002cb0        -       0x00000004   Zero   RW          528    .bss.xIdleTaskHandle  tasks.o
    0x20002cb4        -       0x00000004   Zero   RW          237    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002cb8        -       0x00000004   Zero   RW          529    .bss.xNextTaskUnblockTime  tasks.o
    0x20002cbc        -       0x00000004   Zero   RW          531    .bss.xNumOfOverflows  tasks.o
    0x20002cc0        -       0x00000004   Zero   RW          238    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002cc4        -       0x00000004   Zero   RW          239    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002cc8        -       0x00000004   Zero   RW          530    .bss.xPendedTicks   tasks.o
    0x20002ccc        -       0x00000014   Zero   RW          526    .bss.xPendingReadyList  tasks.o
    0x20002ce0        -       0x00000004   Zero   RW          519    .bss.xSchedulerRunning  tasks.o
    0x20002ce4        -       0x00000008   Zero   RW          236    .bss.xStart         heap_4.o
    0x20002cec        -       0x00000014   Zero   RW          523    .bss.xSuspendedTaskList  tasks.o
    0x20002d00        -       0x00000014   Zero   RW          516    .bss.xTasksWaitingTermination  tasks.o
    0x20002d14        -       0x00000004   Zero   RW          520    .bss.xTickCount     tasks.o
    0x20002d18        -       0x00000004   Zero   RW          593    .bss.xTimerQueue    timers.o
    0x20002d1c        -       0x00000004   Zero   RW          595    .bss.xTimerTaskHandle  timers.o
    0x20002d20        -       0x00000004   Zero   RW          525    .bss.xYieldPending  tasks.o
    0x20002d24   0x08003e14   0x00000004   PAD
    0x20002d28        -       0x00000c00   Zero   RW          947    HEAP                startup_stm32f10x_md.o
    0x20003928        -       0x00000400   Zero   RW          946    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       598          0         80          0          0       6696   coil.o
        64          0          0          0          0       1816   common.o
       366          0         28          0          0       5599   common_timer.o
       226          0          0          0          0       2313   gpio_common.o
       880          0          0          0      10268       4068   heap_4.o
       498          0          0          0          0       6326   init.o
       238          0          0          0          0       2050   list.o
      1516          0         12         65        782       9205   main.o
       806          6          0          0          0       2357   ob1.o
       204          0         12          0          0       3204   on_delay.o
       510         12          0          4          0       2489   port.o
      1124          0          0          0          0      12159   queue.o
       158          0          0          0          0       2567   rf_impulse.o
       360          0          0          0          0       3754   sequence.o
       372          0         44          0          0       4204   simple_input.o
        64         26        236          0       4096        824   startup_stm32f10x_md.o
       690          0         16          4          0       2944   system_stm32f10x.o
      3694          0          9          0        260      21776   tasks.o
      1148         10          8          0         60       7648   timers.o

    ----------------------------------------------------------------------
     13720         66        480         76      15480     101999   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       204         12          3          3         14          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        22          0          0          0          0         80   abort.o
        46          0          0          0          0         84   aeabi_atexit.o
        16          0          0          0          0         68   aeabi_memset4.o
        10          0          0          0          0         68   cxa_atexit.o
        66          0          0          0          0         84   cxa_finalize.o
        48         34          0          0          0         76   defsig_abrt_inner.o
        14          0          0          0          0         80   defsig_abrt_outer.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        18          0          0          0          0         80   exit.o
        94          0          0          0          0         80   h1_alloc.o
        52          0          0          0          0         68   h1_extend.o
        78          0          0          0          0         80   h1_free.o
        14          0          0          0          0         84   h1_init.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
        36          8          0          0          0         80   init_aeabi.o
       138          0          0          0          0        168   init_alloc.o
         2          0          0          0          0          0   libinit.o
        14          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         8          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         0          0          0          0          0          0   maybetermalloc1.o
         8          4          0          0          0         68   rt_ddtor_pointer_addr_intlibspace.o
         8          4          0          0          0         68   rt_heap_descriptor_intlibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
         2          0          0          0          0         68   use_no_semi.o
        46          0          0          0          0        380   new.cpp.o
         4          0          0          0          0         36   abort_message.cpp.o
         0          0          0          0          4          0   cxa_default_handlers.cpp.o
        12          0          0          0          0        132   cxa_handlers.cpp.o
        40         32          0          0          0         52   cxa_virtual.cpp.o

    ----------------------------------------------------------------------
      1616        156          0          0        100       3240   Library Totals
        18          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1496        124          0          0         96       2640   c_w.l
        46          0          0          0          0        380   libcpp_w.l
        56         32          0          0          4        220   libcppabi_w.l

    ----------------------------------------------------------------------
      1616        156          0          0        100       3240   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     15336        222        480         76      15580     103359   Grand Totals
     15336        222        480         76      15580     103359   ELF Image Totals
     15336        222        480         76          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                15816 (  15.45kB)
    Total RW  Size (RW Data + ZI Data)             15656 (  15.29kB)
    Total ROM Size (Code + RO Data + RW Data)      15892 (  15.52kB)

==============================================================================

