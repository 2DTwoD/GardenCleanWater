Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    main.o(.text.__cxx_global_var_init) refers to main.o(.bss.B1) for B1
    main.o(.text.__cxx_global_var_init) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init) refers to main.o(.text.__cxx_global_var_init) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.1) refers to main.o(.bss.H1) for H1
    main.o(.text.__cxx_global_var_init.1) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.1) refers to main.o(.text.__cxx_global_var_init.1) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.2) refers to main.o(.bss.B2) for B2
    main.o(.text.__cxx_global_var_init.2) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.2) refers to main.o(.text.__cxx_global_var_init.2) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.3) refers to main.o(.bss.H2) for H2
    main.o(.text.__cxx_global_var_init.3) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.3) refers to main.o(.text.__cxx_global_var_init.3) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.4) refers to main.o(.bss.B3) for B3
    main.o(.text.__cxx_global_var_init.4) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.4) refers to main.o(.text.__cxx_global_var_init.4) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.5) refers to main.o(.bss.H3) for H3
    main.o(.text.__cxx_global_var_init.5) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.5) refers to main.o(.text.__cxx_global_var_init.5) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.6) refers to main.o(.bss.S4) for S4
    main.o(.text.__cxx_global_var_init.6) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.6) refers to main.o(.text.__cxx_global_var_init.6) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.7) refers to main.o(.bss.S5) for S5
    main.o(.text.__cxx_global_var_init.7) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.7) refers to main.o(.text.__cxx_global_var_init.7) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.8) refers to main.o(.bss.S6) for S6
    main.o(.text.__cxx_global_var_init.8) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.8) refers to main.o(.text.__cxx_global_var_init.8) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.9) refers to main.o(.bss.C1) for C1
    main.o(.text.__cxx_global_var_init.9) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.9) refers to main.o(.text.__cxx_global_var_init.9) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.10) refers to main.o(.bss.O1) for O1
    main.o(.text.__cxx_global_var_init.10) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.10) refers to main.o(.text.__cxx_global_var_init.10) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.11) refers to main.o(.bss.D1) for D1
    main.o(.text.__cxx_global_var_init.11) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.11) refers to main.o(.text.__cxx_global_var_init.11) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.12) refers to main.o(.bss.M1) for M1
    main.o(.text.__cxx_global_var_init.12) refers to coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) for CoilPulse::CoilPulse(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.12) refers to main.o(.text.__cxx_global_var_init.12) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.13) refers to main.o(.bss.C2) for C2
    main.o(.text.__cxx_global_var_init.13) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.13) refers to main.o(.text.__cxx_global_var_init.13) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.14) refers to main.o(.bss.O2) for O2
    main.o(.text.__cxx_global_var_init.14) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.14) refers to main.o(.text.__cxx_global_var_init.14) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.15) refers to main.o(.bss.D2) for D2
    main.o(.text.__cxx_global_var_init.15) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.15) refers to main.o(.text.__cxx_global_var_init.15) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.16) refers to main.o(.bss.M2) for M2
    main.o(.text.__cxx_global_var_init.16) refers to coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) for CoilPulse::CoilPulse(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.16) refers to main.o(.text.__cxx_global_var_init.16) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.17) refers to main.o(.bss.C3) for C3
    main.o(.text.__cxx_global_var_init.17) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.17) refers to main.o(.text.__cxx_global_var_init.17) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.18) refers to main.o(.bss.O3) for O3
    main.o(.text.__cxx_global_var_init.18) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.18) refers to main.o(.text.__cxx_global_var_init.18) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.19) refers to main.o(.bss.D3) for D3
    main.o(.text.__cxx_global_var_init.19) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.19) refers to main.o(.text.__cxx_global_var_init.19) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.20) refers to main.o(.bss.M3) for M3
    main.o(.text.__cxx_global_var_init.20) refers to coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) for CoilPulse::CoilPulse(GPIO_TypeDef*, unsigned char, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.20) refers to main.o(.text.__cxx_global_var_init.20) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.21) refers to main.o(.bss.D4) for D4
    main.o(.text.__cxx_global_var_init.21) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.21) refers to main.o(.text.__cxx_global_var_init.21) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.22) refers to main.o(.bss.M6) for M6
    main.o(.text.__cxx_global_var_init.22) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.22) refers to main.o(.text.__cxx_global_var_init.22) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.23) refers to main.o(.bss.M7) for M7
    main.o(.text.__cxx_global_var_init.23) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.23) refers to main.o(.text.__cxx_global_var_init.23) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.24) refers to main.o(.bss.Me1) for Me1
    main.o(.text.__cxx_global_var_init.24) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.24) refers to main.o(.text.__cxx_global_var_init.24) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.25) refers to main.o(.bss.Me2) for Me2
    main.o(.text.__cxx_global_var_init.25) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.25) refers to main.o(.text.__cxx_global_var_init.25) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.26) refers to main.o(.bss.Me3) for Me3
    main.o(.text.__cxx_global_var_init.26) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.26) refers to main.o(.text.__cxx_global_var_init.26) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.27) refers to main.o(.bss.OB1s0) for OB1s0
    main.o(.text.__cxx_global_var_init.27) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.27) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.27) refers to main.o(.text.__cxx_global_var_init.27) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.28) refers to main.o(.bss.OB1s1) for OB1s1
    main.o(.text.__cxx_global_var_init.28) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.28) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.28) refers to main.o(.text.__cxx_global_var_init.28) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.29) refers to main.o(.bss.OB1s2) for OB1s2
    main.o(.text.__cxx_global_var_init.29) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.29) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.29) refers to main.o(.text.__cxx_global_var_init.29) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.30) refers to main.o(.bss.OB1s3) for OB1s3
    main.o(.text.__cxx_global_var_init.30) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.30) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.30) refers to main.o(.text.__cxx_global_var_init.30) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.31) refers to main.o(.bss.OB1s4) for OB1s4
    main.o(.text.__cxx_global_var_init.31) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.31) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.31) refers to main.o(.text.__cxx_global_var_init.31) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.32) refers to main.o(.bss.OB1s4MeTimer) for OB1s4MeTimer
    main.o(.text.__cxx_global_var_init.32) refers to pulse.o(.text._ZN5PulseC2Ej) for Pulse::Pulse(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.32) refers to main.o(.text.__cxx_global_var_init.32) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.33) refers to main.o(.bss.OB1s5) for OB1s5
    main.o(.text.__cxx_global_var_init.33) refers to main.o(.bss.OB1step) for OB1step
    main.o(.text.__cxx_global_var_init.33) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.33) refers to main.o(.text.__cxx_global_var_init.33) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.34) refers to main.o(.bss.OB2s0) for OB2s0
    main.o(.text.__cxx_global_var_init.34) refers to main.o(.bss.OB2step) for OB2step
    main.o(.text.__cxx_global_var_init.34) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.34) refers to main.o(.text.__cxx_global_var_init.34) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.35) refers to main.o(.bss.OB2s1) for OB2s1
    main.o(.text.__cxx_global_var_init.35) refers to main.o(.bss.OB2step) for OB2step
    main.o(.text.__cxx_global_var_init.35) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.35) refers to main.o(.text.__cxx_global_var_init.35) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.36) refers to main.o(.bss.OB2s2) for OB2s2
    main.o(.text.__cxx_global_var_init.36) refers to main.o(.bss.OB2step) for OB2step
    main.o(.text.__cxx_global_var_init.36) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.36) refers to main.o(.text.__cxx_global_var_init.36) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.37) refers to main.o(.bss.OB2s3) for OB2s3
    main.o(.text.__cxx_global_var_init.37) refers to main.o(.bss.OB2step) for OB2step
    main.o(.text.__cxx_global_var_init.37) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.37) refers to main.o(.text.__cxx_global_var_init.37) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.38) refers to main.o(.bss.OB2s4) for OB2s4
    main.o(.text.__cxx_global_var_init.38) refers to main.o(.bss.OB2step) for OB2step
    main.o(.text.__cxx_global_var_init.38) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.38) refers to main.o(.text.__cxx_global_var_init.38) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.39) refers to main.o(.bss.OB2s4MeTimer) for OB2s4MeTimer
    main.o(.text.__cxx_global_var_init.39) refers to pulse.o(.text._ZN5PulseC2Ej) for Pulse::Pulse(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.39) refers to main.o(.text.__cxx_global_var_init.39) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.40) refers to main.o(.bss.OB2s5) for OB2s5
    main.o(.text.__cxx_global_var_init.40) refers to main.o(.bss.OB2step) for OB2step
    main.o(.text.__cxx_global_var_init.40) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.40) refers to main.o(.text.__cxx_global_var_init.40) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.41) refers to main.o(.bss.OB3s0) for OB3s0
    main.o(.text.__cxx_global_var_init.41) refers to main.o(.bss.OB3step) for OB3step
    main.o(.text.__cxx_global_var_init.41) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.41) refers to main.o(.text.__cxx_global_var_init.41) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.42) refers to main.o(.bss.OB3s1) for OB3s1
    main.o(.text.__cxx_global_var_init.42) refers to main.o(.bss.OB3step) for OB3step
    main.o(.text.__cxx_global_var_init.42) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.42) refers to main.o(.text.__cxx_global_var_init.42) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.43) refers to main.o(.bss.OB3s2) for OB3s2
    main.o(.text.__cxx_global_var_init.43) refers to main.o(.bss.OB3step) for OB3step
    main.o(.text.__cxx_global_var_init.43) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.43) refers to main.o(.text.__cxx_global_var_init.43) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.44) refers to main.o(.bss.OB3s3) for OB3s3
    main.o(.text.__cxx_global_var_init.44) refers to main.o(.bss.OB3step) for OB3step
    main.o(.text.__cxx_global_var_init.44) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.44) refers to main.o(.text.__cxx_global_var_init.44) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.45) refers to main.o(.bss.OB3s4) for OB3s4
    main.o(.text.__cxx_global_var_init.45) refers to main.o(.bss.OB3step) for OB3step
    main.o(.text.__cxx_global_var_init.45) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.45) refers to main.o(.text.__cxx_global_var_init.45) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.46) refers to main.o(.bss.OB3s4MeTimer) for OB3s4MeTimer
    main.o(.text.__cxx_global_var_init.46) refers to pulse.o(.text._ZN5PulseC2Ej) for Pulse::Pulse(unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.46) refers to main.o(.text.__cxx_global_var_init.46) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.47) refers to main.o(.bss.OB3s5) for OB3s5
    main.o(.text.__cxx_global_var_init.47) refers to main.o(.bss.OB3step) for OB3step
    main.o(.text.__cxx_global_var_init.47) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.47) refers to main.o(.text.__cxx_global_var_init.47) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.48) refers to main.o(.bss.CHBs0) for CHBs0
    main.o(.text.__cxx_global_var_init.48) refers to main.o(.bss.CHBstep) for CHBstep
    main.o(.text.__cxx_global_var_init.48) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.48) refers to main.o(.text.__cxx_global_var_init.48) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.49) refers to main.o(.bss.CHBs1) for CHBs1
    main.o(.text.__cxx_global_var_init.49) refers to main.o(.bss.CHBstep) for CHBstep
    main.o(.text.__cxx_global_var_init.49) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int)
    main.o(.ARM.exidx.text.__cxx_global_var_init.49) refers to main.o(.text.__cxx_global_var_init.49) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.50) refers to main.o(.bss.CHBs2) for CHBs2
    main.o(.text.__cxx_global_var_init.50) refers to main.o(.bss.CHBstep) for CHBstep
    main.o(.text.__cxx_global_var_init.50) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence(unsigned char*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.50) refers to main.o(.text.__cxx_global_var_init.50) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationIdleHook) refers to main.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationTickHook) refers to main.o(.text.vApplicationTickHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to main.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to main.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    main.o(.text.TIM2_IRQHandler) refers to main.o(.data.updateObjectsSize) for updateObjectsSize
    main.o(.text.TIM2_IRQHandler) refers to main.o(.data.update1msObjects) for update1msObjects
    main.o(.ARM.exidx.text.TIM2_IRQHandler) refers to main.o(.text.TIM2_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to init.o(.text._Z7rccInitv) for rccInit()
    main.o(.text.main) refers to init.o(.text._Z8tickInitv) for tickInit()
    main.o(.text.main) refers to init.o(.text._Z10commonInitv) for commonInit()
    main.o(.text.main) refers to ob1.o(.text._Z7OB1TaskPv) for OB1Task(void*)
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to ob2.o(.text._Z7OB2TaskPv) for OB2Task(void*)
    main.o(.text.main) refers to ob3.o(.text._Z7OB3TaskPv) for OB3Task(void*)
    main.o(.text.main) refers to chb.o(.text._Z7CHBTaskPv) for CHBTask(void*)
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init) for __cxx_global_var_init
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.1) for __cxx_global_var_init.1
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.2) for __cxx_global_var_init.2
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.3) for __cxx_global_var_init.3
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.4) for __cxx_global_var_init.4
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.5) for __cxx_global_var_init.5
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.6) for __cxx_global_var_init.6
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.7) for __cxx_global_var_init.7
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.8) for __cxx_global_var_init.8
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.9) for __cxx_global_var_init.9
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.10) for __cxx_global_var_init.10
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.11) for __cxx_global_var_init.11
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.12) for __cxx_global_var_init.12
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.13) for __cxx_global_var_init.13
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.14) for __cxx_global_var_init.14
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.15) for __cxx_global_var_init.15
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.16) for __cxx_global_var_init.16
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.17) for __cxx_global_var_init.17
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.18) for __cxx_global_var_init.18
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.19) for __cxx_global_var_init.19
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.20) for __cxx_global_var_init.20
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.21) for __cxx_global_var_init.21
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.22) for __cxx_global_var_init.22
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.23) for __cxx_global_var_init.23
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.24) for __cxx_global_var_init.24
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.25) for __cxx_global_var_init.25
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.26) for __cxx_global_var_init.26
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.27) for __cxx_global_var_init.27
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.28) for __cxx_global_var_init.28
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.29) for __cxx_global_var_init.29
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.30) for __cxx_global_var_init.30
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.31) for __cxx_global_var_init.31
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.32) for __cxx_global_var_init.32
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.33) for __cxx_global_var_init.33
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.34) for __cxx_global_var_init.34
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.35) for __cxx_global_var_init.35
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.36) for __cxx_global_var_init.36
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.37) for __cxx_global_var_init.37
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.38) for __cxx_global_var_init.38
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.39) for __cxx_global_var_init.39
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.40) for __cxx_global_var_init.40
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.41) for __cxx_global_var_init.41
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.42) for __cxx_global_var_init.42
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.43) for __cxx_global_var_init.43
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.44) for __cxx_global_var_init.44
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.45) for __cxx_global_var_init.45
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.46) for __cxx_global_var_init.46
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.47) for __cxx_global_var_init.47
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.48) for __cxx_global_var_init.48
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.49) for __cxx_global_var_init.49
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.50) for __cxx_global_var_init.50
    main.o(.ARM.exidx.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text._GLOBAL__sub_I_main.cpp) for [Anonymous Symbol]
    main.o(.data.update1msObjects) refers to main.o(.bss.B1) for B1
    main.o(.data.update1msObjects) refers to main.o(.bss.H1) for H1
    main.o(.data.update1msObjects) refers to main.o(.bss.B2) for B2
    main.o(.data.update1msObjects) refers to main.o(.bss.H2) for H2
    main.o(.data.update1msObjects) refers to main.o(.bss.B3) for B3
    main.o(.data.update1msObjects) refers to main.o(.bss.H3) for H3
    main.o(.data.update1msObjects) refers to main.o(.bss.S4) for S4
    main.o(.data.update1msObjects) refers to main.o(.bss.S5) for S5
    main.o(.data.update1msObjects) refers to main.o(.bss.S6) for S6
    main.o(.data.update1msObjects) refers to main.o(.bss.M1) for M1
    main.o(.data.update1msObjects) refers to main.o(.bss.M2) for M2
    main.o(.data.update1msObjects) refers to main.o(.bss.M3) for M3
    main.o(.data.update1msObjects) refers to main.o(.bss.OB1s1) for OB1s1
    main.o(.data.update1msObjects) refers to main.o(.bss.OB1s2) for OB1s2
    main.o(.data.update1msObjects) refers to main.o(.bss.OB1s4) for OB1s4
    main.o(.data.update1msObjects) refers to main.o(.bss.OB1s4MeTimer) for OB1s4MeTimer
    main.o(.data.update1msObjects) refers to main.o(.bss.OB2s1) for OB2s1
    main.o(.data.update1msObjects) refers to main.o(.bss.OB2s2) for OB2s2
    main.o(.data.update1msObjects) refers to main.o(.bss.OB2s4) for OB2s4
    main.o(.data.update1msObjects) refers to main.o(.bss.OB2s4MeTimer) for OB2s4MeTimer
    main.o(.data.update1msObjects) refers to main.o(.bss.OB3s1) for OB3s1
    main.o(.data.update1msObjects) refers to main.o(.bss.OB3s2) for OB3s2
    main.o(.data.update1msObjects) refers to main.o(.bss.OB3s4) for OB3s4
    main.o(.data.update1msObjects) refers to main.o(.bss.OB3s4MeTimer) for OB3s4MeTimer
    main.o(.data.update1msObjects) refers to main.o(.bss.CHBs1) for CHBs1
    main.o(.init_array) refers to main.o(.text._GLOBAL__sub_I_main.cpp) for _GLOBAL__sub_I_main.cpp
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to rt_memclr.o(.text) for __aeabi_memclr
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to main.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to main.o(.text.vApplicationIdleHook) for vApplicationIdleHook
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to main.o(.text.vApplicationTickHook) for vApplicationTickHook
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    ob1.o(.text._Z7OB1TaskPv) refers to ob1.o(.text._ZL13resetAllStepsv) for resetAllSteps()
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s4) for OB1s4
    ob1.o(.text._Z7OB1TaskPv) refers to sequence.o(.text._ZN8Sequence7startedEv) for Sequence::started()
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s4MeTimer) for OB1s4MeTimer
    ob1.o(.text._Z7OB1TaskPv) refers to pulse.o(.text._ZN5PulseaSEb) for Pulse::operator=(bool)
    ob1.o(.text._Z7OB1TaskPv) refers to sequence.o(.text._ZN8Sequence15finishedImpulseEv) for Sequence::finishedImpulse()
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s5) for OB1s5
    ob1.o(.text._Z7OB1TaskPv) refers to common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence) for pushSeqInQueue(Sequence*)
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1step) for OB1step
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s0) for OB1s0
    ob1.o(.text._Z7OB1TaskPv) refers to sequence.o(.text._ZN8Sequence5startEb) for Sequence::start(bool)
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.H1) for H1
    ob1.o(.text._Z7OB1TaskPv) refers to simple_input.o(.text._ZN11SimpleInput11isNotActiveEv) for SimpleInput::isNotActive()
    ob1.o(.text._Z7OB1TaskPv) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.C1) for C1
    ob1.o(.text._Z7OB1TaskPv) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.M1) for M1
    ob1.o(.text._Z7OB1TaskPv) refers to coil.o(.text._ZN9CoilPulseaSEb) for CoilPulse::operator=(bool)
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.Me1) for Me1
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s1) for OB1s1
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.O1) for O1
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.D1) for D1
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s2) for OB1s2
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.OB1s3) for OB1s3
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.B1) for B1
    ob1.o(.text._Z7OB1TaskPv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    ob1.o(.text._Z7OB1TaskPv) refers to pulse.o(.text._ZN5Pulse3getEv) for Pulse::get()
    ob1.o(.text._Z7OB1TaskPv) refers to main.o(.bss.S4) for S4
    ob1.o(.text._Z7OB1TaskPv) refers to sequence.o(.text._ZN8Sequence4lockEb) for Sequence::lock(bool)
    ob1.o(.text._Z7OB1TaskPv) refers to common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence) for deleteSeqFromQueue(Sequence*)
    ob1.o(.text._Z7OB1TaskPv) refers to common_for_tasks.o(.text._Z13resetCHBstepsv) for resetCHBsteps()
    ob1.o(.text._Z7OB1TaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    ob1.o(.ARM.exidx.text._Z7OB1TaskPv) refers to ob1.o(.text._Z7OB1TaskPv) for [Anonymous Symbol]
    ob1.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB1s0) for OB1s0
    ob1.o(.text._ZL13resetAllStepsv) refers to sequence.o(.text._ZN8Sequence5resetEv) for Sequence::reset()
    ob1.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB1s1) for OB1s1
    ob1.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB1s2) for OB1s2
    ob1.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB1s3) for OB1s3
    ob1.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB1s4) for OB1s4
    ob1.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB1s5) for OB1s5
    ob1.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.C1) for C1
    ob1.o(.text._ZL13resetAllStepsv) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    ob1.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.O1) for O1
    ob1.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.D1) for D1
    ob1.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.M1) for M1
    ob1.o(.text._ZL13resetAllStepsv) refers to coil.o(.text._ZN9CoilPulseaSEb) for CoilPulse::operator=(bool)
    ob1.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.Me1) for Me1
    ob1.o(.ARM.exidx.text._ZL13resetAllStepsv) refers to ob1.o(.text._ZL13resetAllStepsv) for [Anonymous Symbol]
    ob2.o(.text._Z7OB2TaskPv) refers to ob2.o(.text._ZL13resetAllStepsv) for resetAllSteps()
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.OB2s4) for OB2s4
    ob2.o(.text._Z7OB2TaskPv) refers to sequence.o(.text._ZN8Sequence7startedEv) for Sequence::started()
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.OB2s4MeTimer) for OB2s4MeTimer
    ob2.o(.text._Z7OB2TaskPv) refers to pulse.o(.text._ZN5PulseaSEb) for Pulse::operator=(bool)
    ob2.o(.text._Z7OB2TaskPv) refers to sequence.o(.text._ZN8Sequence15finishedImpulseEv) for Sequence::finishedImpulse()
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.OB2s5) for OB2s5
    ob2.o(.text._Z7OB2TaskPv) refers to common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence) for pushSeqInQueue(Sequence*)
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.OB2step) for OB2step
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.OB2s0) for OB2s0
    ob2.o(.text._Z7OB2TaskPv) refers to sequence.o(.text._ZN8Sequence5startEb) for Sequence::start(bool)
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.H2) for H2
    ob2.o(.text._Z7OB2TaskPv) refers to simple_input.o(.text._ZN11SimpleInput11isNotActiveEv) for SimpleInput::isNotActive()
    ob2.o(.text._Z7OB2TaskPv) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.C2) for C2
    ob2.o(.text._Z7OB2TaskPv) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.M2) for M2
    ob2.o(.text._Z7OB2TaskPv) refers to coil.o(.text._ZN9CoilPulseaSEb) for CoilPulse::operator=(bool)
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.Me2) for Me2
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.OB2s1) for OB2s1
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.O2) for O2
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.D2) for D2
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.OB2s2) for OB2s2
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.OB2s3) for OB2s3
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.B2) for B2
    ob2.o(.text._Z7OB2TaskPv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    ob2.o(.text._Z7OB2TaskPv) refers to pulse.o(.text._ZN5Pulse3getEv) for Pulse::get()
    ob2.o(.text._Z7OB2TaskPv) refers to main.o(.bss.S4) for S4
    ob2.o(.text._Z7OB2TaskPv) refers to sequence.o(.text._ZN8Sequence4lockEb) for Sequence::lock(bool)
    ob2.o(.text._Z7OB2TaskPv) refers to common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence) for deleteSeqFromQueue(Sequence*)
    ob2.o(.text._Z7OB2TaskPv) refers to common_for_tasks.o(.text._Z13resetCHBstepsv) for resetCHBsteps()
    ob2.o(.text._Z7OB2TaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    ob2.o(.ARM.exidx.text._Z7OB2TaskPv) refers to ob2.o(.text._Z7OB2TaskPv) for [Anonymous Symbol]
    ob2.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB2s0) for OB2s0
    ob2.o(.text._ZL13resetAllStepsv) refers to sequence.o(.text._ZN8Sequence5resetEv) for Sequence::reset()
    ob2.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB2s1) for OB2s1
    ob2.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB2s2) for OB2s2
    ob2.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB2s3) for OB2s3
    ob2.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB2s4) for OB2s4
    ob2.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB2s5) for OB2s5
    ob2.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.C2) for C2
    ob2.o(.text._ZL13resetAllStepsv) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    ob2.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.O2) for O2
    ob2.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.D2) for D2
    ob2.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.M2) for M2
    ob2.o(.text._ZL13resetAllStepsv) refers to coil.o(.text._ZN9CoilPulseaSEb) for CoilPulse::operator=(bool)
    ob2.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.Me2) for Me2
    ob2.o(.ARM.exidx.text._ZL13resetAllStepsv) refers to ob2.o(.text._ZL13resetAllStepsv) for [Anonymous Symbol]
    ob3.o(.text._Z7OB3TaskPv) refers to ob3.o(.text._ZL13resetAllStepsv) for resetAllSteps()
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.OB3s4) for OB3s4
    ob3.o(.text._Z7OB3TaskPv) refers to sequence.o(.text._ZN8Sequence7startedEv) for Sequence::started()
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.OB3s4MeTimer) for OB3s4MeTimer
    ob3.o(.text._Z7OB3TaskPv) refers to pulse.o(.text._ZN5PulseaSEb) for Pulse::operator=(bool)
    ob3.o(.text._Z7OB3TaskPv) refers to sequence.o(.text._ZN8Sequence15finishedImpulseEv) for Sequence::finishedImpulse()
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.OB3s5) for OB3s5
    ob3.o(.text._Z7OB3TaskPv) refers to common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence) for pushSeqInQueue(Sequence*)
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.OB3step) for OB3step
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.OB3s0) for OB3s0
    ob3.o(.text._Z7OB3TaskPv) refers to sequence.o(.text._ZN8Sequence5startEb) for Sequence::start(bool)
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.H3) for H3
    ob3.o(.text._Z7OB3TaskPv) refers to simple_input.o(.text._ZN11SimpleInput11isNotActiveEv) for SimpleInput::isNotActive()
    ob3.o(.text._Z7OB3TaskPv) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.C3) for C3
    ob3.o(.text._Z7OB3TaskPv) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.M3) for M3
    ob3.o(.text._Z7OB3TaskPv) refers to coil.o(.text._ZN9CoilPulseaSEb) for CoilPulse::operator=(bool)
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.Me3) for Me3
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.OB3s1) for OB3s1
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.O3) for O3
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.D3) for D3
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.OB3s2) for OB3s2
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.OB3s3) for OB3s3
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.B3) for B3
    ob3.o(.text._Z7OB3TaskPv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    ob3.o(.text._Z7OB3TaskPv) refers to pulse.o(.text._ZN5Pulse3getEv) for Pulse::get()
    ob3.o(.text._Z7OB3TaskPv) refers to main.o(.bss.S4) for S4
    ob3.o(.text._Z7OB3TaskPv) refers to sequence.o(.text._ZN8Sequence4lockEb) for Sequence::lock(bool)
    ob3.o(.text._Z7OB3TaskPv) refers to common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence) for deleteSeqFromQueue(Sequence*)
    ob3.o(.text._Z7OB3TaskPv) refers to common_for_tasks.o(.text._Z13resetCHBstepsv) for resetCHBsteps()
    ob3.o(.text._Z7OB3TaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    ob3.o(.ARM.exidx.text._Z7OB3TaskPv) refers to ob3.o(.text._Z7OB3TaskPv) for [Anonymous Symbol]
    ob3.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB3s0) for OB3s0
    ob3.o(.text._ZL13resetAllStepsv) refers to sequence.o(.text._ZN8Sequence5resetEv) for Sequence::reset()
    ob3.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB3s1) for OB3s1
    ob3.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB3s2) for OB3s2
    ob3.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB3s3) for OB3s3
    ob3.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB3s4) for OB3s4
    ob3.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.OB3s5) for OB3s5
    ob3.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.C3) for C3
    ob3.o(.text._ZL13resetAllStepsv) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    ob3.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.O3) for O3
    ob3.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.D3) for D3
    ob3.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.M3) for M3
    ob3.o(.text._ZL13resetAllStepsv) refers to coil.o(.text._ZN9CoilPulseaSEb) for CoilPulse::operator=(bool)
    ob3.o(.text._ZL13resetAllStepsv) refers to main.o(.bss.Me3) for Me3
    ob3.o(.ARM.exidx.text._ZL13resetAllStepsv) refers to ob3.o(.text._ZL13resetAllStepsv) for [Anonymous Symbol]
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.CHBs0) for CHBs0
    chb.o(.text._Z7CHBTaskPv) refers to sequence.o(.text._ZN8Sequence15finishedImpulseEv) for Sequence::finishedImpulse()
    chb.o(.text._Z7CHBTaskPv) refers to sequence.o(.text._ZN8Sequence5startEb) for Sequence::start(bool)
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.CHBstep) for CHBstep
    chb.o(.text._Z7CHBTaskPv) refers to common_for_tasks.o(.text._Z15getSeqFromQueuev) for getSeqFromQueue()
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.S5) for S5
    chb.o(.text._Z7CHBTaskPv) refers to simple_input.o(.text._ZN11SimpleInput11isNotActiveEv) for SimpleInput::isNotActive()
    chb.o(.text._Z7CHBTaskPv) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.D4) for D4
    chb.o(.text._Z7CHBTaskPv) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.M7) for M7
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.CHBs1) for CHBs1
    chb.o(.text._Z7CHBTaskPv) refers to sequence.o(.text._ZN8Sequence7startedEv) for Sequence::started()
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.CHBs2) for CHBs2
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.S4) for S4
    chb.o(.text._Z7CHBTaskPv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    chb.o(.text._Z7CHBTaskPv) refers to sequence.o(.text._ZN8Sequence4lockEb) for Sequence::lock(bool)
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.S6) for S6
    chb.o(.text._Z7CHBTaskPv) refers to main.o(.bss.M6) for M6
    chb.o(.text._Z7CHBTaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    chb.o(.ARM.exidx.text._Z7CHBTaskPv) refers to chb.o(.text._Z7CHBTaskPv) for [Anonymous Symbol]
    common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence) refers to main.o(.bss.queue) for queue
    common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    common_for_tasks.o(.ARM.exidx.text._Z14pushSeqInQueueP8Sequence) refers to common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence) for [Anonymous Symbol]
    common_for_tasks.o(.text._Z15getSeqFromQueuev) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    common_for_tasks.o(.text._Z15getSeqFromQueuev) refers to main.o(.bss.queue) for queue
    common_for_tasks.o(.text._Z15getSeqFromQueuev) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    common_for_tasks.o(.ARM.exidx.text._Z15getSeqFromQueuev) refers to common_for_tasks.o(.text._Z15getSeqFromQueuev) for [Anonymous Symbol]
    common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence) refers to main.o(.bss.queue) for queue
    common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    common_for_tasks.o(.ARM.exidx.text._Z18deleteSeqFromQueueP8Sequence) refers to common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence) for [Anonymous Symbol]
    common_for_tasks.o(.text._Z13resetCHBstepsv) refers to main.o(.bss.CHBs0) for CHBs0
    common_for_tasks.o(.text._Z13resetCHBstepsv) refers to sequence.o(.text._ZN8Sequence5resetEv) for Sequence::reset()
    common_for_tasks.o(.text._Z13resetCHBstepsv) refers to main.o(.bss.CHBs1) for CHBs1
    common_for_tasks.o(.text._Z13resetCHBstepsv) refers to main.o(.bss.CHBs2) for CHBs2
    common_for_tasks.o(.text._Z13resetCHBstepsv) refers to main.o(.bss.D4) for D4
    common_for_tasks.o(.text._Z13resetCHBstepsv) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    common_for_tasks.o(.text._Z13resetCHBstepsv) refers to main.o(.bss.M7) for M7
    common_for_tasks.o(.text._Z13resetCHBstepsv) refers to main.o(.bss.CHBstep) for CHBstep
    common_for_tasks.o(.ARM.exidx.text._Z13resetCHBstepsv) refers to common_for_tasks.o(.text._Z13resetCHBstepsv) for [Anonymous Symbol]
    common.o(.ARM.exidx.text._Z10badTimeOutj) refers to common.o(.text._Z10badTimeOutj) for [Anonymous Symbol]
    common.o(.ARM.exidx.text._Z11getPositionj) refers to common.o(.text._Z11getPositionj) for [Anonymous Symbol]
    init.o(.text._Z10commonInitv) refers to init.o(.text._ZL26__NVIC_SetPriorityGroupingj) for __NVIC_SetPriorityGrouping(unsigned int)
    init.o(.text._Z10commonInitv) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    init.o(.ARM.exidx.text._Z10commonInitv) refers to init.o(.text._Z10commonInitv) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL26__NVIC_SetPriorityGroupingj) refers to init.o(.text._ZL26__NVIC_SetPriorityGroupingj) for [Anonymous Symbol]
    init.o(.text._Z7rccInitv) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    init.o(.ARM.exidx.text._Z7rccInitv) refers to init.o(.text._Z7rccInitv) for [Anonymous Symbol]
    init.o(.text._Z8tickInitv) refers to init.o(.text._ZL16__NVIC_EnableIRQ4IRQn) for __NVIC_EnableIRQ(IRQn)
    init.o(.text._Z8tickInitv) refers to init.o(.text._ZL18__NVIC_SetPriority4IRQnj) for __NVIC_SetPriority(IRQn, unsigned int)
    init.o(.ARM.exidx.text._Z8tickInitv) refers to init.o(.text._Z8tickInitv) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL16__NVIC_EnableIRQ4IRQn) refers to init.o(.text._ZL16__NVIC_EnableIRQ4IRQn) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL18__NVIC_SetPriority4IRQnj) refers to init.o(.text._ZL18__NVIC_SetPriority4IRQnj) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil8isActiveEv) refers to coil.o(.text._ZN12ProgrammCoil8isActiveEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil8setValueEb) refers to coil.o(.text._ZN12ProgrammCoil8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil3setEv) refers to coil.o(.text._ZN12ProgrammCoil3setEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil5resetEv) refers to coil.o(.text._ZN12ProgrammCoil5resetEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil6toggleEv) refers to coil.o(.text._ZN12ProgrammCoil6toggleEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoilaSEb) refers to coil.o(.text._ZN12ProgrammCoilaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN12ProgrammCoilC2Ev) for ProgrammCoil::ProgrammCoil__sub_object()
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.rodata._ZTV4Coil) for vtable for Coil
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    coil.o(.ARM.exidx.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4Coil8isActiveEv) refers to coil.o(.text._ZN4Coil8isActiveEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4Coil8setValueEb) refers to coil.o(.text._ZN4Coil8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4CoilaSEb) refers to coil.o(.text._ZN4CoilaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    coil.o(.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    coil.o(.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht) refers to coil.o(.rodata._ZTV11CoilDelayed) for vtable for CoilDelayed
    coil.o(.ARM.exidx.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    coil.o(.text._ZN11CoilDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    coil.o(.text._ZN11CoilDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    coil.o(.text._ZN11CoilDelayed9update1msEv) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.ARM.exidx.text._ZN11CoilDelayed9update1msEv) refers to coil.o(.text._ZN11CoilDelayed9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZThn32_N11CoilDelayed9update1msEv) refers to coil.o(.text._ZN11CoilDelayed9update1msEv) for CoilDelayed::update1ms()
    coil.o(.ARM.exidx.text._ZThn32_N11CoilDelayed9update1msEv) refers to coil.o(.text._ZThn32_N11CoilDelayed9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZN11CoilDelayed8isActiveEv) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.ARM.exidx.text._ZN11CoilDelayed8isActiveEv) refers to coil.o(.text._ZN11CoilDelayed8isActiveEv) for [Anonymous Symbol]
    coil.o(.text._ZThn16_N11CoilDelayed8isActiveEv) refers to coil.o(.text._ZN11CoilDelayed8isActiveEv) for CoilDelayed::isActive()
    coil.o(.ARM.exidx.text._ZThn16_N11CoilDelayed8isActiveEv) refers to coil.o(.text._ZThn16_N11CoilDelayed8isActiveEv) for [Anonymous Symbol]
    coil.o(.text._ZN11CoilDelayed8setValueEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    coil.o(.ARM.exidx.text._ZN11CoilDelayed8setValueEb) refers to coil.o(.text._ZN11CoilDelayed8setValueEb) for [Anonymous Symbol]
    coil.o(.text._ZThn16_N11CoilDelayed8setValueEb) refers to coil.o(.text._ZN11CoilDelayed8setValueEb) for CoilDelayed::setValue(bool)
    coil.o(.ARM.exidx.text._ZThn16_N11CoilDelayed8setValueEb) refers to coil.o(.text._ZThn16_N11CoilDelayed8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN11CoilDelayedaSEb) refers to coil.o(.text._ZN11CoilDelayedaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.rodata._ZTV9CoilPulse) for vtable for CoilPulse
    coil.o(.ARM.exidx.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    coil.o(.text._ZN9CoilPulse9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    coil.o(.text._ZN9CoilPulse9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    coil.o(.text._ZN9CoilPulse9update1msEv) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.ARM.exidx.text._ZN9CoilPulse9update1msEv) refers to coil.o(.text._ZN9CoilPulse9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZThn32_N9CoilPulse9update1msEv) refers to coil.o(.text._ZN9CoilPulse9update1msEv) for CoilPulse::update1ms()
    coil.o(.ARM.exidx.text._ZThn32_N9CoilPulse9update1msEv) refers to coil.o(.text._ZThn32_N9CoilPulse9update1msEv) for [Anonymous Symbol]
    coil.o(.text._ZN9CoilPulse8isActiveEv) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.ARM.exidx.text._ZN9CoilPulse8isActiveEv) refers to coil.o(.text._ZN9CoilPulse8isActiveEv) for [Anonymous Symbol]
    coil.o(.text._ZThn16_N9CoilPulse8isActiveEv) refers to coil.o(.text._ZN9CoilPulse8isActiveEv) for CoilPulse::isActive()
    coil.o(.ARM.exidx.text._ZThn16_N9CoilPulse8isActiveEv) refers to coil.o(.text._ZThn16_N9CoilPulse8isActiveEv) for [Anonymous Symbol]
    coil.o(.text._ZN9CoilPulse8setValueEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    coil.o(.ARM.exidx.text._ZN9CoilPulse8setValueEb) refers to coil.o(.text._ZN9CoilPulse8setValueEb) for [Anonymous Symbol]
    coil.o(.text._ZThn16_N9CoilPulse8setValueEb) refers to coil.o(.text._ZN9CoilPulse8setValueEb) for CoilPulse::setValue(bool)
    coil.o(.ARM.exidx.text._ZThn16_N9CoilPulse8setValueEb) refers to coil.o(.text._ZThn16_N9CoilPulse8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN9CoilPulseaSEb) refers to coil.o(.text._ZN9CoilPulseaSEb) for [Anonymous Symbol]
    coil.o(.rodata._ZTV4Coil) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.rodata._ZTV4Coil) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.rodata._ZTV11CoilDelayed) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    coil.o(.rodata._ZTV11CoilDelayed) refers to coil.o(.text._ZN11CoilDelayed9update1msEv) for CoilDelayed::update1ms()
    coil.o(.rodata._ZTV11CoilDelayed) refers to coil.o(.text._ZN11CoilDelayed8isActiveEv) for CoilDelayed::isActive()
    coil.o(.rodata._ZTV11CoilDelayed) refers to coil.o(.text._ZN11CoilDelayed8setValueEb) for CoilDelayed::setValue(bool)
    coil.o(.rodata._ZTV11CoilDelayed) refers to coil.o(.text._ZThn16_N11CoilDelayed8isActiveEv) for non-virtual thunk to CoilDelayed::isActive()
    coil.o(.rodata._ZTV11CoilDelayed) refers to coil.o(.text._ZThn16_N11CoilDelayed8setValueEb) for non-virtual thunk to CoilDelayed::setValue(bool)
    coil.o(.rodata._ZTV11CoilDelayed) refers to coil.o(.text._ZThn32_N11CoilDelayed9update1msEv) for non-virtual thunk to CoilDelayed::update1ms()
    coil.o(.rodata._ZTV9CoilPulse) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZN9CoilPulse9update1msEv) for CoilPulse::update1ms()
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZN9CoilPulse8isActiveEv) for CoilPulse::isActive()
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZN9CoilPulse8setValueEb) for CoilPulse::setValue(bool)
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZThn16_N9CoilPulse8isActiveEv) for non-virtual thunk to CoilPulse::isActive()
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZThn16_N9CoilPulse8setValueEb) for non-virtual thunk to CoilPulse::setValue(bool)
    coil.o(.rodata._ZTV9CoilPulse) refers to coil.o(.text._ZThn32_N9CoilPulse9update1msEv) for non-virtual thunk to CoilPulse::update1ms()
    coil.o(.rodata._ZTV12ProgrammCoil) refers to coil.o(.text._ZN12ProgrammCoil8isActiveEv) for ProgrammCoil::isActive()
    coil.o(.rodata._ZTV12ProgrammCoil) refers to coil.o(.text._ZN12ProgrammCoil8setValueEb) for ProgrammCoil::setValue(bool)
    gpio_common.o(.ARM.exidx.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseC2E7IMPULSE) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for [Anonymous Symbol]
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3setEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for [Anonymous Symbol]
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3getEv) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for [Anonymous Symbol]
    rf_impulse.o(.text._ZN9RFimpulseaSEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseaSEb) refers to rf_impulse.o(.text._ZN9RFimpulseaSEb) for [Anonymous Symbol]
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char)
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN7ISwitchC2Ev) for ISwitch::ISwitch__sub_object()
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to simple_input.o(.rodata._ZTV11SimpleInput) for vtable for SimpleInput
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    simple_input.o(.ARM.exidx.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    simple_input.o(.ARM.exidx.text._ZN11SimpleInput8isActiveEv) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.ARM.exidx.text._ZN11SimpleInput11isNotActiveEv) refers to simple_input.o(.text._ZN11SimpleInput11isNotActiveEv) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) for SimpleInput::SimpleInput__sub_object(GPIO_TypeDef*, unsigned char)
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.rodata._ZTV18SimpleInputDelayed) for vtable for SimpleInputDelayed
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) refers to simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for SimpleInput::isActive()
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for [Anonymous Symbol]
    simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for SimpleInputDelayed::update1ms()
    simple_input.o(.ARM.exidx.text._ZThn32_N18SimpleInputDelayed9update1msEv) refers to simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv) for [Anonymous Symbol]
    simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed8isActiveEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    simple_input.o(.ARM.exidx.text._ZThn16_N18SimpleInputDelayed8isActiveEv) refers to simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.rodata._ZTV11SimpleInput) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for SimpleInput::isActive()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv) for SimpleInputDelayed::update1ms()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv) for SimpleInputDelayed::isActive()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv) for non-virtual thunk to SimpleInputDelayed::isActive()
    simple_input.o(.rodata._ZTV18SimpleInputDelayed) refers to simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv) for non-virtual thunk to SimpleInputDelayed::update1ms()
    switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) refers to switch_delay.o(.rodata._ZTV11SwitchDelay) for vtable for SwitchDelay
    switch_delay.o(.ARM.exidx.text._ZN11SwitchDelayC2EP7ISwitcht) refers to switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht) for [Anonymous Symbol]
    switch_delay.o(.text._ZN11SwitchDelay9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay9update1msEv) refers to switch_delay.o(.text._ZN11SwitchDelay9update1msEv) for [Anonymous Symbol]
    switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv) refers to switch_delay.o(.text._ZN11SwitchDelay9update1msEv) for SwitchDelay::update1ms()
    switch_delay.o(.ARM.exidx.text._ZThn16_N11SwitchDelay9update1msEv) refers to switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv) for [Anonymous Symbol]
    switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay7startedEv) refers to switch_delay.o(.text._ZN11SwitchDelay7startedEv) for [Anonymous Symbol]
    switch_delay.o(.rodata._ZTV11SwitchDelay) refers to switch_delay.o(.text._ZN11SwitchDelay7startedEv) for SwitchDelay::started()
    switch_delay.o(.rodata._ZTV11SwitchDelay) refers to switch_delay.o(.text._ZN11SwitchDelay9update1msEv) for SwitchDelay::update1ms()
    switch_delay.o(.rodata._ZTV11SwitchDelay) refers to switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv) for non-virtual thunk to SwitchDelay::update1ms()
    common_timer.o(.text._ZN11CommonTimerC2Ej) refers to common_timer.o(.rodata._ZTV11CommonTimer) for vtable for CommonTimer
    common_timer.o(.ARM.exidx.text._ZN11CommonTimerC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6updateEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6updateEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer8finishedEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer9getPeriodEv) refers to common_timer.o(.text._ZN11CommonTimer9getPeriodEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer9setPeriodEj) refers to common_timer.o(.text._ZN11CommonTimer9setPeriodEj) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer14getCurrentTimeEv) refers to common_timer.o(.text._ZN11CommonTimer14getCurrentTimeEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer14setCurrentTimeEj) refers to common_timer.o(.text._ZN11CommonTimer14setCurrentTimeEj) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5startEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5pauseEv) refers to common_timer.o(.text._ZN11CommonTimer5pauseEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer5pauseEv) for CommonTimer::pause()
    common_timer.o(.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for CommonTimer::reset()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer4stopEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer5resetEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer15prepareAndStartEv) refers to common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6finishEv) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6finishEv) refers to common_timer.o(.text._ZN11CommonTimer6finishEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    common_timer.o(.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer8setStartEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimeraSEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    common_timer.o(.ARM.exidx.text._ZN11CommonTimeraSEb) refers to common_timer.o(.text._ZN11CommonTimeraSEb) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer7startedEv) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer10notStartedEv) refers to common_timer.o(.text._ZN11CommonTimer10notStartedEv) for [Anonymous Symbol]
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer11notFinishedEv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer15finishedImpulseEv) refers to common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6inWorkEv) refers to common_timer.o(.text._ZN11CommonTimer11notFinishedEv) for CommonTimer::notFinished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6inWorkEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for [Anonymous Symbol]
    common_timer.o(.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer10notStartedEv) for CommonTimer::notStarted()
    common_timer.o(.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    common_timer.o(.ARM.exidx.text._ZN11CommonTimer6isFreeEv) refers to common_timer.o(.text._ZN11CommonTimer6isFreeEv) for [Anonymous Symbol]
    common_timer.o(.rodata._ZTV11CommonTimer) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    off_delay.o(.text._ZN8OffDelayC2Ej) refers to off_delay.o(.rodata._ZTV8OffDelay) for vtable for OffDelay
    off_delay.o(.ARM.exidx.text._ZN8OffDelayC2Ej) refers to off_delay.o(.text._ZN8OffDelayC2Ej) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelay9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    off_delay.o(.text._ZN8OffDelay9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    off_delay.o(.text._ZN8OffDelay9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    off_delay.o(.ARM.exidx.text._ZN8OffDelay9update1msEv) refers to off_delay.o(.text._ZN8OffDelay9update1msEv) for [Anonymous Symbol]
    off_delay.o(.text._ZThn16_N8OffDelay9update1msEv) refers to off_delay.o(.text._ZN8OffDelay9update1msEv) for OffDelay::update1ms()
    off_delay.o(.ARM.exidx.text._ZThn16_N8OffDelay9update1msEv) refers to off_delay.o(.text._ZThn16_N8OffDelay9update1msEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelay3setEb) refers to common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv) for CommonTimer::prepareAndStart()
    off_delay.o(.text._ZN8OffDelay3setEb) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    off_delay.o(.ARM.exidx.text._ZN8OffDelay3setEb) refers to off_delay.o(.text._ZN8OffDelay3setEb) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelay3getEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    off_delay.o(.ARM.exidx.text._ZN8OffDelay3getEv) refers to off_delay.o(.text._ZN8OffDelay3getEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelay5resetEv) refers to common_timer.o(.text._ZN11CommonTimer6finishEv) for CommonTimer::finish()
    off_delay.o(.ARM.exidx.text._ZN8OffDelay5resetEv) refers to off_delay.o(.text._ZN8OffDelay5resetEv) for [Anonymous Symbol]
    off_delay.o(.text._ZN8OffDelayaSEb) refers to off_delay.o(.text._ZN8OffDelay3setEb) for OffDelay::set(bool)
    off_delay.o(.ARM.exidx.text._ZN8OffDelayaSEb) refers to off_delay.o(.text._ZN8OffDelayaSEb) for [Anonymous Symbol]
    off_delay.o(.rodata._ZTV8OffDelay) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    off_delay.o(.rodata._ZTV8OffDelay) refers to off_delay.o(.text._ZN8OffDelay9update1msEv) for OffDelay::update1ms()
    off_delay.o(.rodata._ZTV8OffDelay) refers to off_delay.o(.text._ZThn16_N8OffDelay9update1msEv) for non-virtual thunk to OffDelay::update1ms()
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    on_delay.o(.text._ZN7OnDelayC2Ej) refers to on_delay.o(.rodata._ZTV7OnDelay) for vtable for OnDelay
    on_delay.o(.ARM.exidx.text._ZN7OnDelayC2Ej) refers to on_delay.o(.text._ZN7OnDelayC2Ej) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelay9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    on_delay.o(.ARM.exidx.text._ZN7OnDelay9update1msEv) refers to on_delay.o(.text._ZN7OnDelay9update1msEv) for [Anonymous Symbol]
    on_delay.o(.text._ZThn16_N7OnDelay9update1msEv) refers to on_delay.o(.text._ZN7OnDelay9update1msEv) for OnDelay::update1ms()
    on_delay.o(.ARM.exidx.text._ZThn16_N7OnDelay9update1msEv) refers to on_delay.o(.text._ZThn16_N7OnDelay9update1msEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelay3setEb) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    on_delay.o(.ARM.exidx.text._ZN7OnDelay3setEb) refers to on_delay.o(.text._ZN7OnDelay3setEb) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelay3getEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    on_delay.o(.ARM.exidx.text._ZN7OnDelay3getEv) refers to on_delay.o(.text._ZN7OnDelay3getEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelay5resetEv) refers to common_timer.o(.text._ZN11CommonTimer5resetEv) for CommonTimer::reset()
    on_delay.o(.ARM.exidx.text._ZN7OnDelay5resetEv) refers to on_delay.o(.text._ZN7OnDelay5resetEv) for [Anonymous Symbol]
    on_delay.o(.text._ZN7OnDelayaSEb) refers to on_delay.o(.text._ZN7OnDelay3setEb) for OnDelay::set(bool)
    on_delay.o(.ARM.exidx.text._ZN7OnDelayaSEb) refers to on_delay.o(.text._ZN7OnDelayaSEb) for [Anonymous Symbol]
    on_delay.o(.rodata._ZTV7OnDelay) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    on_delay.o(.rodata._ZTV7OnDelay) refers to on_delay.o(.text._ZN7OnDelay9update1msEv) for OnDelay::update1ms()
    on_delay.o(.rodata._ZTV7OnDelay) refers to on_delay.o(.text._ZThn16_N7OnDelay9update1msEv) for non-virtual thunk to OnDelay::update1ms()
    pulse.o(.text._ZN5PulseC2Ej) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    pulse.o(.text._ZN5PulseC2Ej) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    pulse.o(.text._ZN5PulseC2Ej) refers to pulse.o(.rodata._ZTV5Pulse) for vtable for Pulse
    pulse.o(.ARM.exidx.text._ZN5PulseC2Ej) refers to pulse.o(.text._ZN5PulseC2Ej) for [Anonymous Symbol]
    pulse.o(.text._ZN5Pulse9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    pulse.o(.text._ZN5Pulse9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    pulse.o(.text._ZN5Pulse9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    pulse.o(.ARM.exidx.text._ZN5Pulse9update1msEv) refers to pulse.o(.text._ZN5Pulse9update1msEv) for [Anonymous Symbol]
    pulse.o(.text._ZThn16_N5Pulse9update1msEv) refers to pulse.o(.text._ZN5Pulse9update1msEv) for Pulse::update1ms()
    pulse.o(.ARM.exidx.text._ZThn16_N5Pulse9update1msEv) refers to pulse.o(.text._ZThn16_N5Pulse9update1msEv) for [Anonymous Symbol]
    pulse.o(.text._ZN5Pulse3setEb) refers to common_timer.o(.text._ZN11CommonTimer5startEv) for CommonTimer::start()
    pulse.o(.text._ZN5Pulse3setEb) refers to common_timer.o(.text._ZN11CommonTimer6isFreeEv) for CommonTimer::isFree()
    pulse.o(.ARM.exidx.text._ZN5Pulse3setEb) refers to pulse.o(.text._ZN5Pulse3setEb) for [Anonymous Symbol]
    pulse.o(.text._ZN5Pulse3getEv) refers to common_timer.o(.text._ZN11CommonTimer6inWorkEv) for CommonTimer::inWork()
    pulse.o(.ARM.exidx.text._ZN5Pulse3getEv) refers to pulse.o(.text._ZN5Pulse3getEv) for [Anonymous Symbol]
    pulse.o(.text._ZN5Pulse5resetEv) refers to common_timer.o(.text._ZN11CommonTimer4stopEv) for CommonTimer::stop()
    pulse.o(.ARM.exidx.text._ZN5Pulse5resetEv) refers to pulse.o(.text._ZN5Pulse5resetEv) for [Anonymous Symbol]
    pulse.o(.text._ZN5PulseaSEb) refers to pulse.o(.text._ZN5Pulse3setEb) for Pulse::set(bool)
    pulse.o(.ARM.exidx.text._ZN5PulseaSEb) refers to pulse.o(.text._ZN5PulseaSEb) for [Anonymous Symbol]
    pulse.o(.text._ZN10ShortPulseC2Ej) refers to pulse.o(.text._ZN5PulseC2Ej) for Pulse::Pulse__sub_object(unsigned int)
    pulse.o(.text._ZN10ShortPulseC2Ej) refers to pulse.o(.rodata._ZTV10ShortPulse) for vtable for ShortPulse
    pulse.o(.ARM.exidx.text._ZN10ShortPulseC2Ej) refers to pulse.o(.text._ZN10ShortPulseC2Ej) for [Anonymous Symbol]
    pulse.o(.text._ZN10ShortPulse3setEb) refers to pulse.o(.text._ZN5Pulse3setEb) for Pulse::set(bool)
    pulse.o(.text._ZN10ShortPulse3setEb) refers to pulse.o(.text._ZN5Pulse5resetEv) for Pulse::reset()
    pulse.o(.ARM.exidx.text._ZN10ShortPulse3setEb) refers to pulse.o(.text._ZN10ShortPulse3setEb) for [Anonymous Symbol]
    pulse.o(.text._ZN10ShortPulse3getEv) refers to pulse.o(.text._ZN5Pulse3getEv) for Pulse::get()
    pulse.o(.ARM.exidx.text._ZN10ShortPulse3getEv) refers to pulse.o(.text._ZN10ShortPulse3getEv) for [Anonymous Symbol]
    pulse.o(.text._ZN10ShortPulseaSEb) refers to pulse.o(.text._ZN10ShortPulse3setEb) for ShortPulse::set(bool)
    pulse.o(.ARM.exidx.text._ZN10ShortPulseaSEb) refers to pulse.o(.text._ZN10ShortPulseaSEb) for [Anonymous Symbol]
    pulse.o(.rodata._ZTV5Pulse) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    pulse.o(.rodata._ZTV5Pulse) refers to pulse.o(.text._ZN5Pulse9update1msEv) for Pulse::update1ms()
    pulse.o(.rodata._ZTV5Pulse) refers to pulse.o(.text._ZThn16_N5Pulse9update1msEv) for non-virtual thunk to Pulse::update1ms()
    sequence.o(.text._ZN8SequenceC2EPhh) refers to rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE) for RFimpulse::RFimpulse__sub_object(IMPULSE)
    sequence.o(.ARM.exidx.text._ZN8SequenceC2EPhh) refers to sequence.o(.text._ZN8SequenceC2EPhh) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence8isMyStepEv) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence5resetEv) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence5resetEv) refers to sequence.o(.text._ZN8Sequence5resetEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence5startEb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.ARM.exidx.text._ZN8Sequence5startEb) refers to sequence.o(.text._ZN8Sequence5startEb) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence4lockEb) refers to sequence.o(.text._ZN8Sequence4lockEb) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence6finishEb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.text._ZN8Sequence6finishEb) refers to rf_impulse.o(.text._ZN9RFimpulse3setEb) for RFimpulse::set(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence6finishEb) refers to sequence.o(.text._ZN8Sequence6finishEb) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence8isMyStepEv) for Sequence::isMyStep()
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence5startEb) for Sequence::start(bool)
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence4lockEb) for Sequence::lock(bool)
    sequence.o(.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    sequence.o(.ARM.exidx.text._ZN8Sequence6slfSetEbbb) refers to sequence.o(.text._ZN8Sequence6slfSetEbbb) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence7startedEv) refers to sequence.o(.text._ZN8Sequence7startedEv) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence6lockedEv) refers to sequence.o(.text._ZN8Sequence6lockedEv) for [Anonymous Symbol]
    sequence.o(.ARM.exidx.text._ZN8Sequence8finishedEv) refers to sequence.o(.text._ZN8Sequence8finishedEv) for [Anonymous Symbol]
    sequence.o(.text._ZN8Sequence15finishedImpulseEv) refers to rf_impulse.o(.text._ZN9RFimpulse3getEv) for RFimpulse::get()
    sequence.o(.ARM.exidx.text._ZN8Sequence15finishedImpulseEv) refers to sequence.o(.text._ZN8Sequence15finishedImpulseEv) for [Anonymous Symbol]
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to common_timer.o(.text._ZN11CommonTimerC2Ej) for CommonTimer::CommonTimer__sub_object(unsigned int)
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to sequence.o(.text._ZN8SequenceC2EPhh) for Sequence::Sequence__sub_object(unsigned char*, unsigned char)
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for IUpdated1ms::IUpdated1ms__sub_object()
    sequence.o(.text._ZN15SequenceDelayedC2EPhhj) refers to sequence.o(.rodata._ZTV15SequenceDelayed) for vtable for SequenceDelayed
    sequence.o(.ARM.exidx.text._ZN15SequenceDelayedC2EPhhj) refers to sequence.o(.text._ZN15SequenceDelayedC2EPhhj) for [Anonymous Symbol]
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN8Sequence6lockedEv) for Sequence::locked()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN8Sequence7startedEv) for Sequence::started()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8setStartEb) for CommonTimer::setStart(bool)
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer6updateEv) for CommonTimer::update()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to common_timer.o(.text._ZN11CommonTimer8finishedEv) for CommonTimer::finished()
    sequence.o(.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN8Sequence6finishEb) for Sequence::finish(bool)
    sequence.o(.ARM.exidx.text._ZN15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN15SequenceDelayed9update1msEv) for [Anonymous Symbol]
    sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZN15SequenceDelayed9update1msEv) for SequenceDelayed::update1ms()
    sequence.o(.ARM.exidx.text._ZThn28_N15SequenceDelayed9update1msEv) refers to sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv) for [Anonymous Symbol]
    sequence.o(.rodata._ZTV15SequenceDelayed) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    sequence.o(.rodata._ZTV15SequenceDelayed) refers to sequence.o(.text._ZN15SequenceDelayed9update1msEv) for SequenceDelayed::update1ms()
    sequence.o(.rodata._ZTV15SequenceDelayed) refers to sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv) for non-virtual thunk to SequenceDelayed::update1ms()
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(RESET) refers to main.o(.text.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text.SystemInit) refers to system_stm32f10x.o(.text.SetSysClock) for SetSysClock
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(.ARM.exidx.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClock) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72) refers to system_stm32f10x.o(.text.SetSysClockTo72) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    init_aeabi.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.init_array) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.dummy_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers to init_aeabi.o(.text) for .text
    cxa_virtual.cpp.o(.text.__cxa_pure_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for [Anonymous Symbol]
    cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) for [Anonymous Symbol]
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000033) refers (Weak) to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    abort_message.cpp.o(.text.abort_message) refers to abort.o(.text) for abort
    abort_message.cpp.o(.ARM.exidx.text.abort_message) refers to abort_message.cpp.o(.text.abort_message) for [Anonymous Symbol]
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    abort.o(.text) refers to defsig_abrt_outer.o(.text) for __rt_SIGABRT
    abort.o(.text) refers (Weak) to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    abort.o(.text) refers to sys_exit.o(.text) for _sys_exit
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_abrt_outer.o(.text) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig_abrt_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_abrt_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    init.o(.ARM.exidx.text._Z11setRegisterIVjEvPT_jj) refers to init.o(.text._Z11setRegisterIVjEvPT_jj) for [Anonymous Symbol]
    coil.o(.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.text._ZN7ISwitchC2Ev) for ISwitch::ISwitch__sub_object()
    coil.o(.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.rodata._ZTV12ProgrammCoil) for vtable for ProgrammCoil
    coil.o(.ARM.exidx.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.text._ZN12ProgrammCoilC2Ev) for [Anonymous Symbol]
    coil.o(.text._Z17setBitsInRegisterIVjEvPT_jj) refers to common.o(.text._Z11getPositionj) for getPosition(unsigned int)
    coil.o(.ARM.exidx.text._Z17setBitsInRegisterIVjEvPT_jj) refers to coil.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for [Anonymous Symbol]
    coil.o(.text._ZN11IUpdated1msC2Ev) refers to coil.o(.rodata._ZTV11IUpdated1ms) for vtable for IUpdated1ms
    coil.o(.ARM.exidx.text._ZN11IUpdated1msC2Ev) refers to coil.o(.text._ZN11IUpdated1msC2Ev) for [Anonymous Symbol]
    coil.o(.text._ZN7ISwitchC2Ev) refers to coil.o(.rodata._ZTV7ISwitch) for vtable for ISwitch
    coil.o(.ARM.exidx.text._ZN7ISwitchC2Ev) refers to coil.o(.text._ZN7ISwitchC2Ev) for [Anonymous Symbol]
    coil.o(.rodata._ZTV7ISwitch) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    coil.o(.rodata._ZTV11IUpdated1ms) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    pulse.o(.rodata._ZTV10ShortPulse) refers to common_timer.o(.text._ZN11CommonTimer7startedEv) for CommonTimer::started()
    pulse.o(.rodata._ZTV10ShortPulse) refers to pulse.o(.text._ZN5Pulse9update1msEv) for Pulse::update1ms()
    pulse.o(.rodata._ZTV10ShortPulse) refers to pulse.o(.text._ZThn16_N5Pulse9update1msEv) for non-virtual thunk to Pulse::update1ms()


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.1), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.2), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.3), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.4), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.5), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.6), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.7), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.8), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.9), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.10), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.11), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.12), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.13), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.14), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.15), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.16), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.17), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.18), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.19), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.20), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.21), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.22), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.23), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.24), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.25), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.26), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.27), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.28), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.29), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.30), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.31), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.32), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.33), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.34), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.35), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.36), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.37), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.38), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.39), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.40), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.41), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.42), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.43), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.44), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.45), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.46), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.47), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.48), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.49), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.50), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationTickHook), (8 bytes).
    Removing main.o(.text.vApplicationMallocFailedHook), (4 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.TIM2_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text._GLOBAL__sub_I_main.cpp), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (246 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (224 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (300 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (362 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (414 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.prvCopyDataToQueue), (204 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (46 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (210 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (194 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (38 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (342 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (198 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (20 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (140 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (64 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (100 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (58 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (88 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (24 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (56 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (322 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (128 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (186 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (242 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (134 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (74 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (136 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (172 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (64 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (12 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (138 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (244 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (454 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (342 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (236 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (292 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetSchedulerState), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (348 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (240 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (312 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (430 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (540 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (406 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (148 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (16 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing ob1.o(.text), (0 bytes).
    Removing ob1.o(.ARM.exidx.text._Z7OB1TaskPv), (8 bytes).
    Removing ob1.o(.ARM.exidx.text._ZL13resetAllStepsv), (8 bytes).
    Removing ob2.o(.text), (0 bytes).
    Removing ob2.o(.ARM.exidx.text._Z7OB2TaskPv), (8 bytes).
    Removing ob2.o(.ARM.exidx.text._ZL13resetAllStepsv), (8 bytes).
    Removing ob3.o(.text), (0 bytes).
    Removing ob3.o(.ARM.exidx.text._Z7OB3TaskPv), (8 bytes).
    Removing ob3.o(.ARM.exidx.text._ZL13resetAllStepsv), (8 bytes).
    Removing chb.o(.text), (0 bytes).
    Removing chb.o(.ARM.exidx.text._Z7CHBTaskPv), (8 bytes).
    Removing common_for_tasks.o(.text), (0 bytes).
    Removing common_for_tasks.o(.ARM.exidx.text._Z14pushSeqInQueueP8Sequence), (8 bytes).
    Removing common_for_tasks.o(.ARM.exidx.text._Z15getSeqFromQueuev), (8 bytes).
    Removing common_for_tasks.o(.ARM.exidx.text._Z18deleteSeqFromQueueP8Sequence), (8 bytes).
    Removing common_for_tasks.o(.ARM.exidx.text._Z13resetCHBstepsv), (8 bytes).
    Removing common.o(.text), (0 bytes).
    Removing common.o(.text._Z10badTimeOutj), (34 bytes).
    Removing common.o(.ARM.exidx.text._Z10badTimeOutj), (8 bytes).
    Removing common.o(.ARM.exidx.text._Z11getPositionj), (8 bytes).
    Removing init.o(.text), (0 bytes).
    Removing init.o(.ARM.exidx.text._Z10commonInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL26__NVIC_SetPriorityGroupingj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z7rccInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z8tickInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL16__NVIC_EnableIRQ4IRQn), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL18__NVIC_SetPriority4IRQnj), (8 bytes).
    Removing coil.o(.text), (0 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil8setValueEb), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil3setEv), (20 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil3setEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil5resetEv), (20 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil5resetEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil6toggleEv), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil6toggleEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoilaSEb), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoilaSEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4CoilC2EP12GPIO_TypeDefh), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4Coil8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4Coil8setValueEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4CoilaSEb), (8 bytes).
    Removing coil.o(.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht), (80 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilDelayedC2EP12GPIO_TypeDefht), (8 bytes).
    Removing coil.o(.text._ZN11CoilDelayed9update1msEv), (38 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilDelayed9update1msEv), (8 bytes).
    Removing coil.o(.text._ZThn32_N11CoilDelayed9update1msEv), (14 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn32_N11CoilDelayed9update1msEv), (8 bytes).
    Removing coil.o(.text._ZN11CoilDelayed8isActiveEv), (18 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilDelayed8isActiveEv), (8 bytes).
    Removing coil.o(.text._ZThn16_N11CoilDelayed8isActiveEv), (14 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn16_N11CoilDelayed8isActiveEv), (8 bytes).
    Removing coil.o(.text._ZN11CoilDelayed8setValueEb), (28 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilDelayed8setValueEb), (8 bytes).
    Removing coil.o(.text._ZThn16_N11CoilDelayed8setValueEb), (26 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn16_N11CoilDelayed8setValueEb), (8 bytes).
    Removing coil.o(.text._ZN11CoilDelayedaSEb), (34 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11CoilDelayedaSEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulseC2EP12GPIO_TypeDefht), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulse9update1msEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn32_N9CoilPulse9update1msEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulse8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn16_N9CoilPulse8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulse8setValueEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZThn16_N9CoilPulse8setValueEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN9CoilPulseaSEb), (8 bytes).
    Removing coil.o(.rodata._ZTV11CoilDelayed), (52 bytes).
    Removing gpio_common.o(.text), (0 bytes).
    Removing gpio_common.o(.ARM.exidx.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh), (8 bytes).
    Removing rf_impulse.o(.text), (0 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseC2E7IMPULSE), (8 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3setEb), (8 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulse3getEv), (8 bytes).
    Removing rf_impulse.o(.text._ZN9RFimpulseaSEb), (32 bytes).
    Removing rf_impulse.o(.ARM.exidx.text._ZN9RFimpulseaSEb), (8 bytes).
    Removing simple_input.o(.text), (0 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInputC2EP12GPIO_TypeDefh), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInput8isActiveEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInput11isNotActiveEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed9update1msEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZThn32_N18SimpleInputDelayed9update1msEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN18SimpleInputDelayed8isActiveEv), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZThn16_N18SimpleInputDelayed8isActiveEv), (8 bytes).
    Removing switch_delay.o(.text), (0 bytes).
    Removing switch_delay.o(.text._ZN11SwitchDelayC2EP7ISwitcht), (60 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZN11SwitchDelayC2EP7ISwitcht), (8 bytes).
    Removing switch_delay.o(.text._ZN11SwitchDelay9update1msEv), (16 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay9update1msEv), (8 bytes).
    Removing switch_delay.o(.text._ZThn16_N11SwitchDelay9update1msEv), (14 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZThn16_N11SwitchDelay9update1msEv), (8 bytes).
    Removing switch_delay.o(.text._ZN11SwitchDelay7startedEv), (20 bytes).
    Removing switch_delay.o(.ARM.exidx.text._ZN11SwitchDelay7startedEv), (8 bytes).
    Removing switch_delay.o(.rodata._ZTV11SwitchDelay), (28 bytes).
    Removing common_timer.o(.text), (0 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimerC2Ej), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6updateEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer8finishedEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer9getPeriodEv), (12 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer9getPeriodEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer9setPeriodEj), (16 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer9setPeriodEj), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer14getCurrentTimeEv), (12 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer14getCurrentTimeEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer14setCurrentTimeEj), (16 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer14setCurrentTimeEj), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5startEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5pauseEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer4stopEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer5resetEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer15prepareAndStartEv), (24 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer15prepareAndStartEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer6finishEv), (24 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6finishEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer8setStartEb), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimeraSEb), (32 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimeraSEb), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer7startedEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer10notStartedEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer11notFinishedEv), (8 bytes).
    Removing common_timer.o(.text._ZN11CommonTimer15finishedImpulseEv), (76 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer15finishedImpulseEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6inWorkEv), (8 bytes).
    Removing common_timer.o(.ARM.exidx.text._ZN11CommonTimer6isFreeEv), (8 bytes).
    Removing off_delay.o(.text), (0 bytes).
    Removing off_delay.o(.text._ZN8OffDelayC2Ej), (50 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelayC2Ej), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelay9update1msEv), (36 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelay9update1msEv), (8 bytes).
    Removing off_delay.o(.text._ZThn16_N8OffDelay9update1msEv), (14 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZThn16_N8OffDelay9update1msEv), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelay3setEb), (68 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelay3setEb), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelay3getEv), (42 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelay3getEv), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelay5resetEv), (16 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelay5resetEv), (8 bytes).
    Removing off_delay.o(.text._ZN8OffDelayaSEb), (32 bytes).
    Removing off_delay.o(.ARM.exidx.text._ZN8OffDelayaSEb), (8 bytes).
    Removing off_delay.o(.rodata._ZTV8OffDelay), (28 bytes).
    Removing on_delay.o(.text), (0 bytes).
    Removing on_delay.o(.text._ZN7OnDelayC2Ej), (50 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelayC2Ej), (8 bytes).
    Removing on_delay.o(.text._ZN7OnDelay9update1msEv), (16 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelay9update1msEv), (8 bytes).
    Removing on_delay.o(.text._ZThn16_N7OnDelay9update1msEv), (14 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZThn16_N7OnDelay9update1msEv), (8 bytes).
    Removing on_delay.o(.text._ZN7OnDelay3setEb), (28 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelay3setEb), (8 bytes).
    Removing on_delay.o(.text._ZN7OnDelay3getEv), (16 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelay3getEv), (8 bytes).
    Removing on_delay.o(.text._ZN7OnDelay5resetEv), (16 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelay5resetEv), (8 bytes).
    Removing on_delay.o(.text._ZN7OnDelayaSEb), (32 bytes).
    Removing on_delay.o(.ARM.exidx.text._ZN7OnDelayaSEb), (8 bytes).
    Removing on_delay.o(.rodata._ZTV7OnDelay), (28 bytes).
    Removing pulse.o(.text), (0 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5PulseC2Ej), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5Pulse9update1msEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZThn16_N5Pulse9update1msEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5Pulse3setEb), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5Pulse3getEv), (8 bytes).
    Removing pulse.o(.text._ZN5Pulse5resetEv), (20 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5Pulse5resetEv), (8 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN5PulseaSEb), (8 bytes).
    Removing pulse.o(.text._ZN10ShortPulseC2Ej), (42 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN10ShortPulseC2Ej), (8 bytes).
    Removing pulse.o(.text._ZN10ShortPulse3setEb), (60 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN10ShortPulse3setEb), (8 bytes).
    Removing pulse.o(.text._ZN10ShortPulse3getEv), (42 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN10ShortPulse3getEv), (8 bytes).
    Removing pulse.o(.text._ZN10ShortPulseaSEb), (32 bytes).
    Removing pulse.o(.ARM.exidx.text._ZN10ShortPulseaSEb), (8 bytes).
    Removing sequence.o(.text), (0 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8SequenceC2EPhh), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence8isMyStepEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence5resetEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence5startEb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence4lockEb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6finishEb), (8 bytes).
    Removing sequence.o(.text._ZN8Sequence6slfSetEbbb), (80 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6slfSetEbbb), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence7startedEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence6lockedEv), (8 bytes).
    Removing sequence.o(.text._ZN8Sequence8finishedEv), (16 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence8finishedEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN8Sequence15finishedImpulseEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN15SequenceDelayedC2EPhhj), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZN15SequenceDelayed9update1msEv), (8 bytes).
    Removing sequence.o(.ARM.exidx.text._ZThn28_N15SequenceDelayed9update1msEv), (8 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72), (8 bytes).
    Removing cxa_virtual.cpp.o(.text), (0 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual), (8 bytes).
    Removing cxa_virtual.cpp.o(.text.__cxa_deleted_virtual), (44 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual), (8 bytes).
    Removing abort_message.cpp.o(.text), (0 bytes).
    Removing abort_message.cpp.o(.ARM.exidx.text.abort_message), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z11setRegisterIVjEvPT_jj), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoilC2Ev), (8 bytes).
    Removing coil.o(.ARM.exidx.text._Z17setBitsInRegisterIVjEvPT_jj), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN11IUpdated1msC2Ev), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN7ISwitchC2Ev), (8 bytes).
    Removing pulse.o(.rodata._ZTV10ShortPulse), (28 bytes).

576 unused section(s) (total 18594 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/r_arm_target.c                   0x00000000   Number         0  __ARM_resolve_target1.o ABSOLUTE
    ../clib/r_arm_target.c                   0x00000000   Number         0  __ARM_resolve_target1_abs32.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  abort.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    RTE/Device/STM32F103C8/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    abort_message.cpp                        0x00000000   Number         0  abort_message.cpp.o ABSOLUTE
    chb.cpp                                  0x00000000   Number         0  chb.o ABSOLUTE
    coil.cpp                                 0x00000000   Number         0  coil.o ABSOLUTE
    common.cpp                               0x00000000   Number         0  common.o ABSOLUTE
    common_for_tasks.cpp                     0x00000000   Number         0  common_for_tasks.o ABSOLUTE
    common_timer.cpp                         0x00000000   Number         0  common_timer.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    cxa_virtual.cpp                          0x00000000   Number         0  cxa_virtual.cpp.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    gpio_common.cpp                          0x00000000   Number         0  gpio_common.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.cpp                                 0x00000000   Number         0  init.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.cpp                                 0x00000000   Number         0  main.o ABSOLUTE
    ob1.cpp                                  0x00000000   Number         0  ob1.o ABSOLUTE
    ob2.cpp                                  0x00000000   Number         0  ob2.o ABSOLUTE
    ob3.cpp                                  0x00000000   Number         0  ob3.o ABSOLUTE
    off_delay.cpp                            0x00000000   Number         0  off_delay.o ABSOLUTE
    on_delay.cpp                             0x00000000   Number         0  on_delay.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    pulse.cpp                                0x00000000   Number         0  pulse.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    rf_impulse.cpp                           0x00000000   Number         0  rf_impulse.o ABSOLUTE
    sequence.cpp                             0x00000000   Number         0  sequence.o ABSOLUTE
    simple_input.cpp                         0x00000000   Number         0  simple_input.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    switch_delay.cpp                         0x00000000   Number         0  switch_delay.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000128   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000144   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000160   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000162   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libinit$$00000034          0x08000166   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x08000166   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000168   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800016a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800016a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800016a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800016a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800016a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800016a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800016a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800016c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800016c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800016c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x08000172   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x08000172   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000176   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000176   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800017e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000180   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000180   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000184   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x0800018c   Section       64  startup_stm32f10x_md.o(.text)
    .text                                    0x080001cc   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000256   Section       16  aeabi_memset4.o(.text)
    .text                                    0x08000266   Section       68  rt_memclr.o(.text)
    .text                                    0x080002aa   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080002f8   Section        0  heapauxi.o(.text)
    .text                                    0x08000300   Section        0  init_aeabi.o(.text)
    .text                                    0x08000324   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000388   Section        0  abort.o(.text)
    .text                                    0x080003a0   Section        0  sys_exit.o(.text)
    .text                                    0x080003ac   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080003f6   Section        0  exit.o(.text)
    .text                                    0x08000408   Section        0  defsig_abrt_outer.o(.text)
    .text                                    0x08000418   Section        8  libspace.o(.text)
    .text                                    0x08000420   Section        2  use_no_semi.o(.text)
    .text                                    0x08000422   Section        0  indicate_semi.o(.text)
    .text                                    0x08000422   Section        0  defsig_exit.o(.text)
    .text                                    0x0800042c   Section        0  defsig_abrt_inner.o(.text)
    .text                                    0x0800045c   Section        0  defsig_general.o(.text)
    .text                                    0x0800048e   Section        0  sys_wrch.o(.text)
    [Anonymous Symbol]                       0x080004a0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x080004e0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080004f0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08000510   Number         0  port.o(.text.SVC_Handler)
    SetSysClock                              0x08000515   Thumb Code     8  system_stm32f10x.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08000514   Section        0  system_stm32f10x.o(.text.SetSysClock)
    SetSysClockTo72                          0x0800051d   Thumb Code   290  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x0800051c   Section        0  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x08000640   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x0800067c   Section        0  system_stm32f10x.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x080007a0   Section        0  system_stm32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000808   Section        0  main.o(.text.TIM2_IRQHandler)
    _GLOBAL__sub_I_main.cpp                  0x08000855   Thumb Code   208  main.o(.text._GLOBAL__sub_I_main.cpp)
    [Anonymous Symbol]                       0x08000854   Section        0  main.o(.text._GLOBAL__sub_I_main.cpp)
    [Anonymous Symbol]                       0x08000924   Section        0  init.o(.text._Z10commonInitv)
    [Anonymous Symbol]                       0x08000934   Section        0  common.o(.text._Z11getPositionj)
    [Anonymous Symbol]                       0x08000974   Section        0  init.o(.text._Z11setRegisterIVjEvPT_jj)
    [Anonymous Symbol]                       0x08000994   Section        0  common_for_tasks.o(.text._Z13resetCHBstepsv)
    [Anonymous Symbol]                       0x080009ec   Section        0  common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence)
    [Anonymous Symbol]                       0x08000a78   Section        0  common_for_tasks.o(.text._Z15getSeqFromQueuev)
    [Anonymous Symbol]                       0x08000adc   Section        0  coil.o(.text._Z17setBitsInRegisterIVjEvPT_jj)
    [Anonymous Symbol]                       0x08000b20   Section        0  common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence)
    [Anonymous Symbol]                       0x08000b80   Section        0  chb.o(.text._Z7CHBTaskPv)
    [Anonymous Symbol]                       0x08000cc0   Section        0  ob1.o(.text._Z7OB1TaskPv)
    [Anonymous Symbol]                       0x08000fd8   Section        0  ob2.o(.text._Z7OB2TaskPv)
    [Anonymous Symbol]                       0x080012f0   Section        0  ob3.o(.text._Z7OB3TaskPv)
    [Anonymous Symbol]                       0x08001608   Section        0  init.o(.text._Z7rccInitv)
    [Anonymous Symbol]                       0x080016c8   Section        0  init.o(.text._Z8tickInitv)
    resetAllSteps()                          0x08001721   Thumb Code   158  ob1.o(.text._ZL13resetAllStepsv)
    [Anonymous Symbol]                       0x08001720   Section        0  ob1.o(.text._ZL13resetAllStepsv)
    resetAllSteps()                          0x080017c1   Thumb Code   158  ob2.o(.text._ZL13resetAllStepsv)
    [Anonymous Symbol]                       0x080017c0   Section        0  ob2.o(.text._ZL13resetAllStepsv)
    resetAllSteps()                          0x08001861   Thumb Code   158  ob3.o(.text._ZL13resetAllStepsv)
    [Anonymous Symbol]                       0x08001860   Section        0  ob3.o(.text._ZL13resetAllStepsv)
    __NVIC_EnableIRQ(IRQn)                   0x08001901   Thumb Code    48  init.o(.text._ZL16__NVIC_EnableIRQ4IRQn)
    [Anonymous Symbol]                       0x08001900   Section        0  init.o(.text._ZL16__NVIC_EnableIRQ4IRQn)
    __NVIC_SetPriority(IRQn, unsigned int)   0x08001931   Thumb Code    66  init.o(.text._ZL18__NVIC_SetPriority4IRQnj)
    [Anonymous Symbol]                       0x08001930   Section        0  init.o(.text._ZL18__NVIC_SetPriority4IRQnj)
    __NVIC_SetPriorityGrouping(unsigned int) 0x08001975   Thumb Code    60  init.o(.text._ZL26__NVIC_SetPriorityGroupingj)
    [Anonymous Symbol]                       0x08001974   Section        0  init.o(.text._ZL26__NVIC_SetPriorityGroupingj)
    [Anonymous Symbol]                       0x080019b0   Section        0  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x08001a94   Section        0  common_timer.o(.text._ZN11CommonTimer10notStartedEv)
    [Anonymous Symbol]                       0x08001aa4   Section        0  common_timer.o(.text._ZN11CommonTimer11notFinishedEv)
    [Anonymous Symbol]                       0x08001abc   Section        0  common_timer.o(.text._ZN11CommonTimer4stopEv)
    [Anonymous Symbol]                       0x08001ad4   Section        0  common_timer.o(.text._ZN11CommonTimer5pauseEv)
    [Anonymous Symbol]                       0x08001ae4   Section        0  common_timer.o(.text._ZN11CommonTimer5resetEv)
    [Anonymous Symbol]                       0x08001af4   Section        0  common_timer.o(.text._ZN11CommonTimer5startEv)
    [Anonymous Symbol]                       0x08001b04   Section        0  common_timer.o(.text._ZN11CommonTimer6inWorkEv)
    [Anonymous Symbol]                       0x08001b34   Section        0  common_timer.o(.text._ZN11CommonTimer6isFreeEv)
    [Anonymous Symbol]                       0x08001b60   Section        0  common_timer.o(.text._ZN11CommonTimer6updateEv)
    [Anonymous Symbol]                       0x08001b98   Section        0  common_timer.o(.text._ZN11CommonTimer7startedEv)
    [Anonymous Symbol]                       0x08001ba8   Section        0  common_timer.o(.text._ZN11CommonTimer8finishedEv)
    [Anonymous Symbol]                       0x08001bc0   Section        0  common_timer.o(.text._ZN11CommonTimer8setStartEb)
    [Anonymous Symbol]                       0x08001bec   Section        0  common_timer.o(.text._ZN11CommonTimerC2Ej)
    [Anonymous Symbol]                       0x08001c08   Section        0  coil.o(.text._ZN11IUpdated1msC2Ev)
    [Anonymous Symbol]                       0x08001c20   Section        0  simple_input.o(.text._ZN11SimpleInput11isNotActiveEv)
    [Anonymous Symbol]                       0x08001c38   Section        0  simple_input.o(.text._ZN11SimpleInput8isActiveEv)
    [Anonymous Symbol]                       0x08001c78   Section        0  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x08001d10   Section        0  coil.o(.text._ZN12ProgrammCoil8isActiveEv)
    [Anonymous Symbol]                       0x08001d20   Section        0  coil.o(.text._ZN12ProgrammCoil8setValueEb)
    [Anonymous Symbol]                       0x08001d38   Section        0  coil.o(.text._ZN12ProgrammCoilC2Ev)
    [Anonymous Symbol]                       0x08001d58   Section        0  sequence.o(.text._ZN15SequenceDelayed9update1msEv)
    [Anonymous Symbol]                       0x08001d9c   Section        0  sequence.o(.text._ZN15SequenceDelayedC2EPhhj)
    [Anonymous Symbol]                       0x08001de4   Section        0  simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv)
    [Anonymous Symbol]                       0x08001df4   Section        0  simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv)
    [Anonymous Symbol]                       0x08001e18   Section        0  simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht)
    [Anonymous Symbol]                       0x08001e68   Section        0  coil.o(.text._ZN4Coil8isActiveEv)
    [Anonymous Symbol]                       0x08001e80   Section        0  coil.o(.text._ZN4Coil8setValueEb)
    [Anonymous Symbol]                       0x08001ec4   Section        0  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x08001f3c   Section        0  coil.o(.text._ZN4CoilaSEb)
    [Anonymous Symbol]                       0x08001f60   Section        0  pulse.o(.text._ZN5Pulse3getEv)
    [Anonymous Symbol]                       0x08001f70   Section        0  pulse.o(.text._ZN5Pulse3setEb)
    [Anonymous Symbol]                       0x08001fb8   Section        0  pulse.o(.text._ZN5Pulse9update1msEv)
    [Anonymous Symbol]                       0x08001fdc   Section        0  pulse.o(.text._ZN5PulseC2Ej)
    [Anonymous Symbol]                       0x08002010   Section        0  pulse.o(.text._ZN5PulseaSEb)
    [Anonymous Symbol]                       0x08002030   Section        0  coil.o(.text._ZN7ISwitchC2Ev)
    [Anonymous Symbol]                       0x08002048   Section        0  sequence.o(.text._ZN8Sequence15finishedImpulseEv)
    [Anonymous Symbol]                       0x08002058   Section        0  sequence.o(.text._ZN8Sequence4lockEb)
    [Anonymous Symbol]                       0x08002070   Section        0  sequence.o(.text._ZN8Sequence5resetEv)
    [Anonymous Symbol]                       0x08002088   Section        0  sequence.o(.text._ZN8Sequence5startEb)
    [Anonymous Symbol]                       0x080020b4   Section        0  sequence.o(.text._ZN8Sequence6finishEb)
    [Anonymous Symbol]                       0x080020f8   Section        0  sequence.o(.text._ZN8Sequence6lockedEv)
    [Anonymous Symbol]                       0x08002108   Section        0  sequence.o(.text._ZN8Sequence7startedEv)
    [Anonymous Symbol]                       0x08002134   Section        0  sequence.o(.text._ZN8Sequence8isMyStepEv)
    [Anonymous Symbol]                       0x0800214c   Section        0  sequence.o(.text._ZN8SequenceC2EPhh)
    [Anonymous Symbol]                       0x08002174   Section        0  coil.o(.text._ZN9CoilPulse8isActiveEv)
    [Anonymous Symbol]                       0x08002188   Section        0  coil.o(.text._ZN9CoilPulse8setValueEb)
    [Anonymous Symbol]                       0x080021a4   Section        0  coil.o(.text._ZN9CoilPulse9update1msEv)
    [Anonymous Symbol]                       0x080021cc   Section        0  coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht)
    [Anonymous Symbol]                       0x0800221c   Section        0  coil.o(.text._ZN9CoilPulseaSEb)
    [Anonymous Symbol]                       0x08002240   Section        0  rf_impulse.o(.text._ZN9RFimpulse3getEv)
    [Anonymous Symbol]                       0x08002260   Section        0  rf_impulse.o(.text._ZN9RFimpulse3setEb)
    [Anonymous Symbol]                       0x080022ec   Section        0  rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE)
    [Anonymous Symbol]                       0x08002300   Section        0  simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv)
    [Anonymous Symbol]                       0x08002310   Section        0  pulse.o(.text._ZThn16_N5Pulse9update1msEv)
    [Anonymous Symbol]                       0x08002320   Section        0  coil.o(.text._ZThn16_N9CoilPulse8isActiveEv)
    [Anonymous Symbol]                       0x08002330   Section        0  coil.o(.text._ZThn16_N9CoilPulse8setValueEb)
    [Anonymous Symbol]                       0x0800234c   Section        0  sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv)
    [Anonymous Symbol]                       0x0800235c   Section        0  simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv)
    [Anonymous Symbol]                       0x0800236c   Section        0  coil.o(.text._ZThn32_N9CoilPulse9update1msEv)
    [Anonymous Symbol]                       0x0800237c   Section        0  cxa_virtual.cpp.o(.text.__cxa_pure_virtual)
    __cxx_global_var_init                    0x080023a5   Thumb Code    28  main.o(.text.__cxx_global_var_init)
    [Anonymous Symbol]                       0x080023a4   Section        0  main.o(.text.__cxx_global_var_init)
    __cxx_global_var_init.1                  0x080023c1   Thumb Code    28  main.o(.text.__cxx_global_var_init.1)
    [Anonymous Symbol]                       0x080023c0   Section        0  main.o(.text.__cxx_global_var_init.1)
    __cxx_global_var_init.10                 0x080023dd   Thumb Code    26  main.o(.text.__cxx_global_var_init.10)
    [Anonymous Symbol]                       0x080023dc   Section        0  main.o(.text.__cxx_global_var_init.10)
    __cxx_global_var_init.11                 0x080023f9   Thumb Code    26  main.o(.text.__cxx_global_var_init.11)
    [Anonymous Symbol]                       0x080023f8   Section        0  main.o(.text.__cxx_global_var_init.11)
    __cxx_global_var_init.12                 0x08002415   Thumb Code    30  main.o(.text.__cxx_global_var_init.12)
    [Anonymous Symbol]                       0x08002414   Section        0  main.o(.text.__cxx_global_var_init.12)
    __cxx_global_var_init.13                 0x08002435   Thumb Code    26  main.o(.text.__cxx_global_var_init.13)
    [Anonymous Symbol]                       0x08002434   Section        0  main.o(.text.__cxx_global_var_init.13)
    __cxx_global_var_init.14                 0x08002451   Thumb Code    26  main.o(.text.__cxx_global_var_init.14)
    [Anonymous Symbol]                       0x08002450   Section        0  main.o(.text.__cxx_global_var_init.14)
    __cxx_global_var_init.15                 0x0800246d   Thumb Code    26  main.o(.text.__cxx_global_var_init.15)
    [Anonymous Symbol]                       0x0800246c   Section        0  main.o(.text.__cxx_global_var_init.15)
    __cxx_global_var_init.16                 0x08002489   Thumb Code    30  main.o(.text.__cxx_global_var_init.16)
    [Anonymous Symbol]                       0x08002488   Section        0  main.o(.text.__cxx_global_var_init.16)
    __cxx_global_var_init.17                 0x080024a9   Thumb Code    26  main.o(.text.__cxx_global_var_init.17)
    [Anonymous Symbol]                       0x080024a8   Section        0  main.o(.text.__cxx_global_var_init.17)
    __cxx_global_var_init.18                 0x080024c5   Thumb Code    26  main.o(.text.__cxx_global_var_init.18)
    [Anonymous Symbol]                       0x080024c4   Section        0  main.o(.text.__cxx_global_var_init.18)
    __cxx_global_var_init.19                 0x080024e1   Thumb Code    26  main.o(.text.__cxx_global_var_init.19)
    [Anonymous Symbol]                       0x080024e0   Section        0  main.o(.text.__cxx_global_var_init.19)
    __cxx_global_var_init.2                  0x080024fd   Thumb Code    28  main.o(.text.__cxx_global_var_init.2)
    [Anonymous Symbol]                       0x080024fc   Section        0  main.o(.text.__cxx_global_var_init.2)
    __cxx_global_var_init.20                 0x08002519   Thumb Code    30  main.o(.text.__cxx_global_var_init.20)
    [Anonymous Symbol]                       0x08002518   Section        0  main.o(.text.__cxx_global_var_init.20)
    __cxx_global_var_init.21                 0x08002539   Thumb Code    26  main.o(.text.__cxx_global_var_init.21)
    [Anonymous Symbol]                       0x08002538   Section        0  main.o(.text.__cxx_global_var_init.21)
    __cxx_global_var_init.22                 0x08002555   Thumb Code    26  main.o(.text.__cxx_global_var_init.22)
    [Anonymous Symbol]                       0x08002554   Section        0  main.o(.text.__cxx_global_var_init.22)
    __cxx_global_var_init.23                 0x08002571   Thumb Code    26  main.o(.text.__cxx_global_var_init.23)
    [Anonymous Symbol]                       0x08002570   Section        0  main.o(.text.__cxx_global_var_init.23)
    __cxx_global_var_init.24                 0x0800258d   Thumb Code    26  main.o(.text.__cxx_global_var_init.24)
    [Anonymous Symbol]                       0x0800258c   Section        0  main.o(.text.__cxx_global_var_init.24)
    __cxx_global_var_init.25                 0x080025a9   Thumb Code    26  main.o(.text.__cxx_global_var_init.25)
    [Anonymous Symbol]                       0x080025a8   Section        0  main.o(.text.__cxx_global_var_init.25)
    __cxx_global_var_init.26                 0x080025c5   Thumb Code    26  main.o(.text.__cxx_global_var_init.26)
    [Anonymous Symbol]                       0x080025c4   Section        0  main.o(.text.__cxx_global_var_init.26)
    __cxx_global_var_init.27                 0x080025e1   Thumb Code    26  main.o(.text.__cxx_global_var_init.27)
    [Anonymous Symbol]                       0x080025e0   Section        0  main.o(.text.__cxx_global_var_init.27)
    __cxx_global_var_init.28                 0x080025fd   Thumb Code    34  main.o(.text.__cxx_global_var_init.28)
    [Anonymous Symbol]                       0x080025fc   Section        0  main.o(.text.__cxx_global_var_init.28)
    __cxx_global_var_init.29                 0x08002621   Thumb Code    30  main.o(.text.__cxx_global_var_init.29)
    [Anonymous Symbol]                       0x08002620   Section        0  main.o(.text.__cxx_global_var_init.29)
    __cxx_global_var_init.3                  0x08002641   Thumb Code    28  main.o(.text.__cxx_global_var_init.3)
    [Anonymous Symbol]                       0x08002640   Section        0  main.o(.text.__cxx_global_var_init.3)
    __cxx_global_var_init.30                 0x0800265d   Thumb Code    26  main.o(.text.__cxx_global_var_init.30)
    [Anonymous Symbol]                       0x0800265c   Section        0  main.o(.text.__cxx_global_var_init.30)
    __cxx_global_var_init.31                 0x08002679   Thumb Code    34  main.o(.text.__cxx_global_var_init.31)
    [Anonymous Symbol]                       0x08002678   Section        0  main.o(.text.__cxx_global_var_init.31)
    __cxx_global_var_init.32                 0x0800269d   Thumb Code    24  main.o(.text.__cxx_global_var_init.32)
    [Anonymous Symbol]                       0x0800269c   Section        0  main.o(.text.__cxx_global_var_init.32)
    __cxx_global_var_init.33                 0x080026b5   Thumb Code    26  main.o(.text.__cxx_global_var_init.33)
    [Anonymous Symbol]                       0x080026b4   Section        0  main.o(.text.__cxx_global_var_init.33)
    __cxx_global_var_init.34                 0x080026d1   Thumb Code    26  main.o(.text.__cxx_global_var_init.34)
    [Anonymous Symbol]                       0x080026d0   Section        0  main.o(.text.__cxx_global_var_init.34)
    __cxx_global_var_init.35                 0x080026ed   Thumb Code    34  main.o(.text.__cxx_global_var_init.35)
    [Anonymous Symbol]                       0x080026ec   Section        0  main.o(.text.__cxx_global_var_init.35)
    __cxx_global_var_init.36                 0x08002711   Thumb Code    30  main.o(.text.__cxx_global_var_init.36)
    [Anonymous Symbol]                       0x08002710   Section        0  main.o(.text.__cxx_global_var_init.36)
    __cxx_global_var_init.37                 0x08002731   Thumb Code    26  main.o(.text.__cxx_global_var_init.37)
    [Anonymous Symbol]                       0x08002730   Section        0  main.o(.text.__cxx_global_var_init.37)
    __cxx_global_var_init.38                 0x0800274d   Thumb Code    34  main.o(.text.__cxx_global_var_init.38)
    [Anonymous Symbol]                       0x0800274c   Section        0  main.o(.text.__cxx_global_var_init.38)
    __cxx_global_var_init.39                 0x08002771   Thumb Code    24  main.o(.text.__cxx_global_var_init.39)
    [Anonymous Symbol]                       0x08002770   Section        0  main.o(.text.__cxx_global_var_init.39)
    __cxx_global_var_init.4                  0x08002789   Thumb Code    28  main.o(.text.__cxx_global_var_init.4)
    [Anonymous Symbol]                       0x08002788   Section        0  main.o(.text.__cxx_global_var_init.4)
    __cxx_global_var_init.40                 0x080027a5   Thumb Code    26  main.o(.text.__cxx_global_var_init.40)
    [Anonymous Symbol]                       0x080027a4   Section        0  main.o(.text.__cxx_global_var_init.40)
    __cxx_global_var_init.41                 0x080027c1   Thumb Code    26  main.o(.text.__cxx_global_var_init.41)
    [Anonymous Symbol]                       0x080027c0   Section        0  main.o(.text.__cxx_global_var_init.41)
    __cxx_global_var_init.42                 0x080027dd   Thumb Code    34  main.o(.text.__cxx_global_var_init.42)
    [Anonymous Symbol]                       0x080027dc   Section        0  main.o(.text.__cxx_global_var_init.42)
    __cxx_global_var_init.43                 0x08002801   Thumb Code    30  main.o(.text.__cxx_global_var_init.43)
    [Anonymous Symbol]                       0x08002800   Section        0  main.o(.text.__cxx_global_var_init.43)
    __cxx_global_var_init.44                 0x08002821   Thumb Code    26  main.o(.text.__cxx_global_var_init.44)
    [Anonymous Symbol]                       0x08002820   Section        0  main.o(.text.__cxx_global_var_init.44)
    __cxx_global_var_init.45                 0x0800283d   Thumb Code    34  main.o(.text.__cxx_global_var_init.45)
    [Anonymous Symbol]                       0x0800283c   Section        0  main.o(.text.__cxx_global_var_init.45)
    __cxx_global_var_init.46                 0x08002861   Thumb Code    24  main.o(.text.__cxx_global_var_init.46)
    [Anonymous Symbol]                       0x08002860   Section        0  main.o(.text.__cxx_global_var_init.46)
    __cxx_global_var_init.47                 0x08002879   Thumb Code    26  main.o(.text.__cxx_global_var_init.47)
    [Anonymous Symbol]                       0x08002878   Section        0  main.o(.text.__cxx_global_var_init.47)
    __cxx_global_var_init.48                 0x08002895   Thumb Code    26  main.o(.text.__cxx_global_var_init.48)
    [Anonymous Symbol]                       0x08002894   Section        0  main.o(.text.__cxx_global_var_init.48)
    __cxx_global_var_init.49                 0x080028b1   Thumb Code    30  main.o(.text.__cxx_global_var_init.49)
    [Anonymous Symbol]                       0x080028b0   Section        0  main.o(.text.__cxx_global_var_init.49)
    __cxx_global_var_init.5                  0x080028d1   Thumb Code    28  main.o(.text.__cxx_global_var_init.5)
    [Anonymous Symbol]                       0x080028d0   Section        0  main.o(.text.__cxx_global_var_init.5)
    __cxx_global_var_init.50                 0x080028ed   Thumb Code    26  main.o(.text.__cxx_global_var_init.50)
    [Anonymous Symbol]                       0x080028ec   Section        0  main.o(.text.__cxx_global_var_init.50)
    __cxx_global_var_init.6                  0x08002909   Thumb Code    30  main.o(.text.__cxx_global_var_init.6)
    [Anonymous Symbol]                       0x08002908   Section        0  main.o(.text.__cxx_global_var_init.6)
    __cxx_global_var_init.7                  0x08002929   Thumb Code    30  main.o(.text.__cxx_global_var_init.7)
    [Anonymous Symbol]                       0x08002928   Section        0  main.o(.text.__cxx_global_var_init.7)
    __cxx_global_var_init.8                  0x08002949   Thumb Code    30  main.o(.text.__cxx_global_var_init.8)
    [Anonymous Symbol]                       0x08002948   Section        0  main.o(.text.__cxx_global_var_init.8)
    __cxx_global_var_init.9                  0x08002969   Thumb Code    26  main.o(.text.__cxx_global_var_init.9)
    [Anonymous Symbol]                       0x08002968   Section        0  main.o(.text.__cxx_global_var_init.9)
    [Anonymous Symbol]                       0x08002982   Section        0  abort_message.cpp.o(.text.abort_message)
    [Anonymous Symbol]                       0x08002988   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x08002a2d   Thumb Code   282  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08002a2c   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x08002b49   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08002b48   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x08002c9d   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x08002c9c   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x08002d09   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x08002d08   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x08002d65   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x08002d64   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvDeleteTCB                             0x08002da9   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x08002da8   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetNextExpireTime                     0x08002dc1   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x08002dc0   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x08002e01   Thumb Code   174  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x08002e00   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x08002eb1   Thumb Code    60  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x08002eb0   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x08002eed   Thumb Code    72  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x08002eec   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x08002f35   Thumb Code   230  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x08002f34   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x0800301d   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x0800301c   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x080030ad   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x080030ac   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x08003175   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x08003174   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x080031fd   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x080031fc   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvPortStartFirstTask                    0x08003225   Thumb Code    32  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x08003224   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x08003245   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x08003244   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x08003299   Thumb Code   294  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x08003298   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x080033c1   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x080033c0   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x0800345d   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x0800345c   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x08003491   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x08003490   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x080034cd   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x080034cc   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x08003511   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x08003510   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x08003565   Thumb Code    38  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08003564   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x0800358d   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x0800358c   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x080035ad   Thumb Code   174  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x080035ac   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x0800365c   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x080037e4   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x08003834   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x0800387c   Section        0  main.o(.text.vApplicationIdleHook)
    [Anonymous Symbol]                       0x08003880   Section        0  main.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x0800388c   Section        0  main.o(.text.vApplicationTickHook)
    [Anonymous Symbol]                       0x08003890   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x080038c0   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x080038d0   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x0800393c   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x0800396c   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08003994   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08003a0c   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x08003a3c   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x08003aa0   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08003aec   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x08003b10   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x08003b20   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x08003b48   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x08003ba8   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08003c3c   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x08003c4c   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08003c4c   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08003d38   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x08003d78   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x08003df8   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x08003ec8   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x0800401c   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x080040b8   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x08004158   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x0800416c   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x080043c0   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08004530   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x08004730   Section        0  timers.o(.text.xTimerCreateTimerTask)
    .L.str                                   0x08004878   Data           8  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08004878   Section        0  main.o(.rodata.str1.1)
    .L.str.51                                0x08004880   Data           8  main.o(.rodata.str1.1)
    .L.str.52                                0x08004888   Data           8  main.o(.rodata.str1.1)
    .L.str.53                                0x08004890   Data           8  main.o(.rodata.str1.1)
    .L.str                                   0x08004898   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08004898   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x0800489d   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800489d   Section        0  timers.o(.rodata.str1.1)
    .init_array                              0x080048d0   Section        0  init_aeabi.o(.init_array)
    uxCriticalNesting                        0x2000006c   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x2000006c   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000070   Section       96  libspace.o(.bss)
    prvSampleTimeNow.xLastTime               0x2000058c   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x2000058c   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20000590   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000594   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000594   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000598   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000598   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x2000059c   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x2000059c   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x200005a0   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200005a0   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200005a4   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200005a4   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200005a8   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200005a8   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000618   Data       10240  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000618   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x20002e18   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002e18   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002e1c   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002e1c   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002e20   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002e20   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002e24   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002e24   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002e28   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002e28   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002e2c   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002e2c   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002e40   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002e40   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002e54   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002e54   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002e68   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002e68   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002e7c   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002e7c   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002e80   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002e80   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002e84   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002e84   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002e88   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002e88   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002e8c   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002e8c   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002e90   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002e90   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002e94   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002e94   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002e98   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002e98   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002e9c   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002e9c   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002eb0   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002eb0   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002eb4   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002eb4   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002ebc   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002ebc   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002ed0   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002ed0   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002ee4   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002ee4   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002ee8   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002ee8   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002eec   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002eec   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002ef0   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002ef0   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002ef8   Data         512  startup_stm32f10x_md.o(HEAP)
    HEAP                                     0x20002ef8   Section      512  startup_stm32f10x_md.o(HEAP)
    Stack_Mem                                0x200030f8   Data        1024  startup_stm32f10x_md.o(STACK)
    STACK                                    0x200030f8   Section     1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x200034f8   Data           0  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000103   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000129   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000145   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000161   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_2                      0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_exceptions_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_signal_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_cpp_1                      0x08000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_return                     0x08000167   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_shutdown                        0x08000169   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800016b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800016b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800016b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800016b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800016b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800016b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800016b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0800016d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800016d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800016d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x08000173   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x08000173   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000177   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000177   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800017f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000181   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000181   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000185   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0800018d   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x08000195   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x08000197   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x08000199   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x0800019b   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x0800019d   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x080001a1   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART1_IRQHandler                        0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART2_IRQHandler                        0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x080001a7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x080001a9   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __aeabi_memcpy                           0x080001cd   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x080001cd   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000233   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x08000257   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x08000257   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x08000267   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x08000267   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0800026b   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x080002ab   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080002ab   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080002ab   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x080002af   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x080002f9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080002fb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080002fd   Thumb Code     2  heapauxi.o(.text)
    __cpp_initialize__aeabi_                 0x08000301   Thumb Code    28  init_aeabi.o(.text)
    __aeabi_memcpy4                          0x08000325   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000325   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000325   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0800036d   Thumb Code     0  rt_memcpy_w.o(.text)
    abort                                    0x08000389   Thumb Code    22  abort.o(.text)
    _sys_exit                                0x080003a1   Thumb Code     8  sys_exit.o(.text)
    __user_setup_stackheap                   0x080003ad   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x080003f7   Thumb Code    18  exit.o(.text)
    __rt_SIGABRT                             0x08000409   Thumb Code    14  defsig_abrt_outer.o(.text)
    __user_libspace                          0x08000419   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000419   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000419   Thumb Code     0  libspace.o(.text)
    __I$use$semihosting                      0x08000421   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000421   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000423   Thumb Code     0  indicate_semi.o(.text)
    __sig_exit                               0x08000423   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGABRT_inner                       0x0800042d   Thumb Code    14  defsig_abrt_inner.o(.text)
    __default_signal_display                 0x0800045d   Thumb Code    50  defsig_general.o(.text)
    _ttywrch                                 0x0800048f   Thumb Code    14  sys_wrch.o(.text)
    PendSV_Handler                           0x080004a1   Thumb Code    68  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x080004f1   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x08000641   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemCoreClockUpdate                    0x0800067d   Thumb Code   290  system_stm32f10x.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x080007a1   Thumb Code   102  system_stm32f10x.o(.text.SystemInit)
    TIM2_IRQHandler                          0x08000809   Thumb Code    76  main.o(.text.TIM2_IRQHandler)
    commonInit()                             0x08000925   Thumb Code    14  init.o(.text._Z10commonInitv)
    getPosition(unsigned int)                0x08000935   Thumb Code    64  common.o(.text._Z11getPositionj)
    void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int) 0x08000975   Thumb Code    32  init.o(.text._Z11setRegisterIVjEvPT_jj)
    resetCHBsteps()                          0x08000995   Thumb Code    88  common_for_tasks.o(.text._Z13resetCHBstepsv)
    pushSeqInQueue(Sequence*)                0x080009ed   Thumb Code   138  common_for_tasks.o(.text._Z14pushSeqInQueueP8Sequence)
    getSeqFromQueue()                        0x08000a79   Thumb Code   100  common_for_tasks.o(.text._Z15getSeqFromQueuev)
    void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int) 0x08000add   Thumb Code    68  coil.o(.text._Z17setBitsInRegisterIVjEvPT_jj)
    deleteSeqFromQueue(Sequence*)            0x08000b21   Thumb Code    94  common_for_tasks.o(.text._Z18deleteSeqFromQueueP8Sequence)
    CHBTask(void*)                           0x08000b81   Thumb Code   320  chb.o(.text._Z7CHBTaskPv)
    OB1Task(void*)                           0x08000cc1   Thumb Code   792  ob1.o(.text._Z7OB1TaskPv)
    OB2Task(void*)                           0x08000fd9   Thumb Code   792  ob2.o(.text._Z7OB2TaskPv)
    OB3Task(void*)                           0x080012f1   Thumb Code   792  ob3.o(.text._Z7OB3TaskPv)
    rccInit()                                0x08001609   Thumb Code   190  init.o(.text._Z7rccInitv)
    tickInit()                               0x080016c9   Thumb Code    88  init.o(.text._Z8tickInitv)
    GPIOcommon::GPIOcommon(GPIO_TypeDef*, unsigned char) 0x080019b1   Thumb Code   226  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char) 0x080019b1   Thumb Code   226  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    CommonTimer::notStarted()                0x08001a95   Thumb Code    16  common_timer.o(.text._ZN11CommonTimer10notStartedEv)
    CommonTimer::notFinished()               0x08001aa5   Thumb Code    22  common_timer.o(.text._ZN11CommonTimer11notFinishedEv)
    CommonTimer::stop()                      0x08001abd   Thumb Code    24  common_timer.o(.text._ZN11CommonTimer4stopEv)
    CommonTimer::pause()                     0x08001ad5   Thumb Code    14  common_timer.o(.text._ZN11CommonTimer5pauseEv)
    CommonTimer::reset()                     0x08001ae5   Thumb Code    16  common_timer.o(.text._ZN11CommonTimer5resetEv)
    CommonTimer::start()                     0x08001af5   Thumb Code    14  common_timer.o(.text._ZN11CommonTimer5startEv)
    CommonTimer::inWork()                    0x08001b05   Thumb Code    46  common_timer.o(.text._ZN11CommonTimer6inWorkEv)
    CommonTimer::isFree()                    0x08001b35   Thumb Code    44  common_timer.o(.text._ZN11CommonTimer6isFreeEv)
    CommonTimer::update()                    0x08001b61   Thumb Code    56  common_timer.o(.text._ZN11CommonTimer6updateEv)
    CommonTimer::started()                   0x08001b99   Thumb Code    16  common_timer.o(.text._ZN11CommonTimer7startedEv)
    CommonTimer::finished()                  0x08001ba9   Thumb Code    22  common_timer.o(.text._ZN11CommonTimer8finishedEv)
    CommonTimer::setStart(bool)              0x08001bc1   Thumb Code    44  common_timer.o(.text._ZN11CommonTimer8setStartEb)
    CommonTimer::CommonTimer(unsigned int)   0x08001bed   Thumb Code    28  common_timer.o(.text._ZN11CommonTimerC2Ej)
    CommonTimer::CommonTimer__sub_object(unsigned int) 0x08001bed   Thumb Code    28  common_timer.o(.text._ZN11CommonTimerC2Ej)
    IUpdated1ms::IUpdated1ms__sub_object()   0x08001c09   Thumb Code    22  coil.o(.text._ZN11IUpdated1msC2Ev)
    SimpleInput::isNotActive()               0x08001c21   Thumb Code    22  simple_input.o(.text._ZN11SimpleInput11isNotActiveEv)
    SimpleInput::isActive()                  0x08001c39   Thumb Code    64  simple_input.o(.text._ZN11SimpleInput8isActiveEv)
    SimpleInput::SimpleInput(GPIO_TypeDef*, unsigned char) 0x08001c79   Thumb Code   152  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    SimpleInput::SimpleInput__sub_object(GPIO_TypeDef*, unsigned char) 0x08001c79   Thumb Code   152  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    ProgrammCoil::isActive()                 0x08001d11   Thumb Code    16  coil.o(.text._ZN12ProgrammCoil8isActiveEv)
    ProgrammCoil::setValue(bool)             0x08001d21   Thumb Code    24  coil.o(.text._ZN12ProgrammCoil8setValueEb)
    ProgrammCoil::ProgrammCoil__sub_object() 0x08001d39   Thumb Code    32  coil.o(.text._ZN12ProgrammCoilC2Ev)
    SequenceDelayed::update1ms()             0x08001d59   Thumb Code    66  sequence.o(.text._ZN15SequenceDelayed9update1msEv)
    SequenceDelayed::SequenceDelayed(unsigned char*, unsigned char, unsigned int) 0x08001d9d   Thumb Code    70  sequence.o(.text._ZN15SequenceDelayedC2EPhhj)
    SequenceDelayed::SequenceDelayed__sub_object(unsigned char*, unsigned char, unsigned int) 0x08001d9d   Thumb Code    70  sequence.o(.text._ZN15SequenceDelayedC2EPhhj)
    SimpleInputDelayed::isActive()           0x08001de5   Thumb Code    16  simple_input.o(.text._ZN18SimpleInputDelayed8isActiveEv)
    SimpleInputDelayed::update1ms()          0x08001df5   Thumb Code    34  simple_input.o(.text._ZN18SimpleInputDelayed9update1msEv)
    SimpleInputDelayed::SimpleInputDelayed(GPIO_TypeDef*, unsigned char, unsigned short) 0x08001e19   Thumb Code    80  simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht)
    SimpleInputDelayed::SimpleInputDelayed__sub_object(GPIO_TypeDef*, unsigned char, unsigned short) 0x08001e19   Thumb Code    80  simple_input.o(.text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht)
    Coil::isActive()                         0x08001e69   Thumb Code    22  coil.o(.text._ZN4Coil8isActiveEv)
    Coil::setValue(bool)                     0x08001e81   Thumb Code    66  coil.o(.text._ZN4Coil8setValueEb)
    Coil::Coil(GPIO_TypeDef*, unsigned char) 0x08001ec5   Thumb Code   118  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char) 0x08001ec5   Thumb Code   118  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    Coil::operator=(bool)                    0x08001f3d   Thumb Code    34  coil.o(.text._ZN4CoilaSEb)
    Pulse::get()                             0x08001f61   Thumb Code    16  pulse.o(.text._ZN5Pulse3getEv)
    Pulse::set(bool)                         0x08001f71   Thumb Code    72  pulse.o(.text._ZN5Pulse3setEb)
    Pulse::update1ms()                       0x08001fb9   Thumb Code    36  pulse.o(.text._ZN5Pulse9update1msEv)
    Pulse::Pulse(unsigned int)               0x08001fdd   Thumb Code    50  pulse.o(.text._ZN5PulseC2Ej)
    Pulse::Pulse__sub_object(unsigned int)   0x08001fdd   Thumb Code    50  pulse.o(.text._ZN5PulseC2Ej)
    Pulse::operator=(bool)                   0x08002011   Thumb Code    32  pulse.o(.text._ZN5PulseaSEb)
    ISwitch::ISwitch__sub_object()           0x08002031   Thumb Code    22  coil.o(.text._ZN7ISwitchC2Ev)
    Sequence::finishedImpulse()              0x08002049   Thumb Code    16  sequence.o(.text._ZN8Sequence15finishedImpulseEv)
    Sequence::lock(bool)                     0x08002059   Thumb Code    24  sequence.o(.text._ZN8Sequence4lockEb)
    Sequence::reset()                        0x08002071   Thumb Code    24  sequence.o(.text._ZN8Sequence5resetEv)
    Sequence::start(bool)                    0x08002089   Thumb Code    44  sequence.o(.text._ZN8Sequence5startEb)
    Sequence::finish(bool)                   0x080020b5   Thumb Code    68  sequence.o(.text._ZN8Sequence6finishEb)
    Sequence::locked()                       0x080020f9   Thumb Code    16  sequence.o(.text._ZN8Sequence6lockedEv)
    Sequence::started()                      0x08002109   Thumb Code    42  sequence.o(.text._ZN8Sequence7startedEv)
    Sequence::isMyStep()                     0x08002135   Thumb Code    24  sequence.o(.text._ZN8Sequence8isMyStepEv)
    Sequence::Sequence(unsigned char*, unsigned char) 0x0800214d   Thumb Code    38  sequence.o(.text._ZN8SequenceC2EPhh)
    Sequence::Sequence__sub_object(unsigned char*, unsigned char) 0x0800214d   Thumb Code    38  sequence.o(.text._ZN8SequenceC2EPhh)
    CoilPulse::isActive()                    0x08002175   Thumb Code    18  coil.o(.text._ZN9CoilPulse8isActiveEv)
    CoilPulse::setValue(bool)                0x08002189   Thumb Code    28  coil.o(.text._ZN9CoilPulse8setValueEb)
    CoilPulse::update1ms()                   0x080021a5   Thumb Code    38  coil.o(.text._ZN9CoilPulse9update1msEv)
    CoilPulse::CoilPulse(GPIO_TypeDef*, unsigned char, unsigned short) 0x080021cd   Thumb Code    80  coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht)
    CoilPulse::CoilPulse__sub_object(GPIO_TypeDef*, unsigned char, unsigned short) 0x080021cd   Thumb Code    80  coil.o(.text._ZN9CoilPulseC2EP12GPIO_TypeDefht)
    CoilPulse::operator=(bool)               0x0800221d   Thumb Code    34  coil.o(.text._ZN9CoilPulseaSEb)
    RFimpulse::get()                         0x08002241   Thumb Code    32  rf_impulse.o(.text._ZN9RFimpulse3getEv)
    RFimpulse::set(bool)                     0x08002261   Thumb Code   138  rf_impulse.o(.text._ZN9RFimpulse3setEb)
    RFimpulse::RFimpulse(IMPULSE)            0x080022ed   Thumb Code    20  rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE)
    RFimpulse::RFimpulse__sub_object(IMPULSE) 0x080022ed   Thumb Code    20  rf_impulse.o(.text._ZN9RFimpulseC2E7IMPULSE)
    non-virtual thunk to SimpleInputDelayed::isActive() 0x08002301   Thumb Code    14  simple_input.o(.text._ZThn16_N18SimpleInputDelayed8isActiveEv)
    non-virtual thunk to Pulse::update1ms()  0x08002311   Thumb Code    14  pulse.o(.text._ZThn16_N5Pulse9update1msEv)
    non-virtual thunk to CoilPulse::isActive() 0x08002321   Thumb Code    14  coil.o(.text._ZThn16_N9CoilPulse8isActiveEv)
    non-virtual thunk to CoilPulse::setValue(bool) 0x08002331   Thumb Code    26  coil.o(.text._ZThn16_N9CoilPulse8setValueEb)
    non-virtual thunk to SequenceDelayed::update1ms() 0x0800234d   Thumb Code    14  sequence.o(.text._ZThn28_N15SequenceDelayed9update1msEv)
    non-virtual thunk to SimpleInputDelayed::update1ms() 0x0800235d   Thumb Code    14  simple_input.o(.text._ZThn32_N18SimpleInputDelayed9update1msEv)
    non-virtual thunk to CoilPulse::update1ms() 0x0800236d   Thumb Code    14  coil.o(.text._ZThn32_N9CoilPulse9update1msEv)
    __cxa_pure_virtual                       0x0800237d   Thumb Code     8  cxa_virtual.cpp.o(.text.__cxa_pure_virtual)
    abort_message                            0x08002983   Thumb Code     4  abort_message.cpp.o(.text.abort_message)
    main                                     0x08002989   Thumb Code   162  main.o(.text.main)
    pvPortMalloc                             0x0800365d   Thumb Code   390  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x080037e5   Thumb Code    80  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x08003835   Thumb Code    72  list.o(.text.uxListRemove)
    vApplicationIdleHook                     0x0800387d   Thumb Code     2  main.o(.text.vApplicationIdleHook)
    vApplicationStackOverflowHook            0x08003881   Thumb Code    10  main.o(.text.vApplicationStackOverflowHook)
    vApplicationTickHook                     0x0800388d   Thumb Code     2  main.o(.text.vApplicationTickHook)
    vListInitialise                          0x08003891   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x080038c1   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x080038d1   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x0800393d   Thumb Code    48  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x0800396d   Thumb Code    38  port.o(.text.vPortExitCritical)
    vPortFree                                0x08003995   Thumb Code   118  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08003a0d   Thumb Code    46  port.o(.text.vPortSetupTimerInterrupt)
    vQueueWaitForMessageRestricted           0x08003a3d   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x08003aa1   Thumb Code    74  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x08003aed   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08003b11   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08003b21   Thumb Code    38  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x08003b49   Thumb Code    96  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x08003ba9   Thumb Code   148  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x08003c3d   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08003c4d   Thumb Code   236  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x08003d39   Thumb Code    64  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x08003d79   Thumb Code   126  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x08003df9   Thumb Code   208  queue.o(.text.xQueueGenericReset)
    xQueueReceive                            0x08003ec9   Thumb Code   338  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x0800401d   Thumb Code   154  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x080040b9   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskGetTickCount                        0x08004159   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x0800416d   Thumb Code   596  tasks.o(.text.xTaskIncrementTick)
    xTaskRemoveFromEventList                 0x080043c1   Thumb Code   368  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08004531   Thumb Code   510  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08004731   Thumb Code    80  timers.o(.text.xTimerCreateTimerTask)
    AHBPrescTable                            0x08004780   Data          16  system_stm32f10x.o(.rodata.AHBPrescTable)
    vtable for CommonTimer                   0x08004790   Data          12  common_timer.o(.rodata._ZTV11CommonTimer)
    vtable for IUpdated1ms                   0x0800479c   Data          12  coil.o(.rodata._ZTV11IUpdated1ms)
    vtable for SimpleInput                   0x080047a8   Data          12  simple_input.o(.rodata._ZTV11SimpleInput)
    vtable for ProgrammCoil                  0x080047b4   Data          16  coil.o(.rodata._ZTV12ProgrammCoil)
    vtable for SequenceDelayed               0x080047c4   Data          28  sequence.o(.rodata._ZTV15SequenceDelayed)
    vtable for SimpleInputDelayed            0x080047e0   Data          44  simple_input.o(.rodata._ZTV18SimpleInputDelayed)
    vtable for Coil                          0x0800480c   Data          16  coil.o(.rodata._ZTV4Coil)
    vtable for Pulse                         0x0800481c   Data          28  pulse.o(.rodata._ZTV5Pulse)
    vtable for ISwitch                       0x08004838   Data          12  coil.o(.rodata._ZTV7ISwitch)
    vtable for CoilPulse                     0x08004844   Data          52  coil.o(.rodata._ZTV9CoilPulse)
    uxTopUsedPriority                        0x080048a8   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x080048ac   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080048cc   Number         0  anon$$obj.o(Region$$Table)
    SHT$$INIT_ARRAY$$Base                    0x080048cc   Number         0  main.o(.init_array)
    SHT$$INIT_ARRAY$$Limit                   0x080048d0   Number         0  init_aeabi.o(.init_array)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    update1msObjects                         0x20000004   Data         100  main.o(.data.update1msObjects)
    updateObjectsSize                        0x20000068   Data           1  main.o(.data.updateObjectsSize)
    __libspace_start                         0x20000070   Data          96  libspace.o(.bss)
    B1                                       0x200000d0   Data          36  main.o(.bss.B1)
    __temporary_stack_top$libspace           0x200000d0   Data           0  libspace.o(.bss)
    B2                                       0x200000f4   Data          36  main.o(.bss.B2)
    B3                                       0x20000118   Data          36  main.o(.bss.B3)
    C1                                       0x2000013c   Data          16  main.o(.bss.C1)
    C2                                       0x2000014c   Data          16  main.o(.bss.C2)
    C3                                       0x2000015c   Data          16  main.o(.bss.C3)
    CHBs0                                    0x2000016c   Data          12  main.o(.bss.CHBs0)
    CHBs1                                    0x20000178   Data          32  main.o(.bss.CHBs1)
    CHBs2                                    0x20000198   Data          12  main.o(.bss.CHBs2)
    CHBstep                                  0x200001a4   Data           1  main.o(.bss.CHBstep)
    D1                                       0x200001a8   Data          16  main.o(.bss.D1)
    D2                                       0x200001b8   Data          16  main.o(.bss.D2)
    D3                                       0x200001c8   Data          16  main.o(.bss.D3)
    D4                                       0x200001d8   Data          16  main.o(.bss.D4)
    H1                                       0x200001e8   Data          36  main.o(.bss.H1)
    H2                                       0x2000020c   Data          36  main.o(.bss.H2)
    H3                                       0x20000230   Data          36  main.o(.bss.H3)
    M1                                       0x20000254   Data          36  main.o(.bss.M1)
    M2                                       0x20000278   Data          36  main.o(.bss.M2)
    M3                                       0x2000029c   Data          36  main.o(.bss.M3)
    M6                                       0x200002c0   Data          16  main.o(.bss.M6)
    M7                                       0x200002d0   Data          16  main.o(.bss.M7)
    Me1                                      0x200002e0   Data          16  main.o(.bss.Me1)
    Me2                                      0x200002f0   Data          16  main.o(.bss.Me2)
    Me3                                      0x20000300   Data          16  main.o(.bss.Me3)
    O1                                       0x20000310   Data          16  main.o(.bss.O1)
    O2                                       0x20000320   Data          16  main.o(.bss.O2)
    O3                                       0x20000330   Data          16  main.o(.bss.O3)
    OB1s0                                    0x20000340   Data          12  main.o(.bss.OB1s0)
    OB1s1                                    0x2000034c   Data          32  main.o(.bss.OB1s1)
    OB1s2                                    0x2000036c   Data          32  main.o(.bss.OB1s2)
    OB1s3                                    0x2000038c   Data          12  main.o(.bss.OB1s3)
    OB1s4                                    0x20000398   Data          32  main.o(.bss.OB1s4)
    OB1s4MeTimer                             0x200003b8   Data          24  main.o(.bss.OB1s4MeTimer)
    OB1s5                                    0x200003d0   Data          12  main.o(.bss.OB1s5)
    OB1step                                  0x200003dc   Data           1  main.o(.bss.OB1step)
    OB2s0                                    0x200003e0   Data          12  main.o(.bss.OB2s0)
    OB2s1                                    0x200003ec   Data          32  main.o(.bss.OB2s1)
    OB2s2                                    0x2000040c   Data          32  main.o(.bss.OB2s2)
    OB2s3                                    0x2000042c   Data          12  main.o(.bss.OB2s3)
    OB2s4                                    0x20000438   Data          32  main.o(.bss.OB2s4)
    OB2s4MeTimer                             0x20000458   Data          24  main.o(.bss.OB2s4MeTimer)
    OB2s5                                    0x20000470   Data          12  main.o(.bss.OB2s5)
    OB2step                                  0x2000047c   Data           1  main.o(.bss.OB2step)
    OB3s0                                    0x20000480   Data          12  main.o(.bss.OB3s0)
    OB3s1                                    0x2000048c   Data          32  main.o(.bss.OB3s1)
    OB3s2                                    0x200004ac   Data          32  main.o(.bss.OB3s2)
    OB3s3                                    0x200004cc   Data          12  main.o(.bss.OB3s3)
    OB3s4                                    0x200004d8   Data          32  main.o(.bss.OB3s4)
    OB3s4MeTimer                             0x200004f8   Data          24  main.o(.bss.OB3s4MeTimer)
    OB3s5                                    0x20000510   Data          12  main.o(.bss.OB3s5)
    OB3step                                  0x2000051c   Data           1  main.o(.bss.OB3step)
    S4                                       0x20000520   Data          36  main.o(.bss.S4)
    S5                                       0x20000544   Data          36  main.o(.bss.S5)
    S6                                       0x20000568   Data          36  main.o(.bss.S6)
    pxCurrentTCB                             0x20000590   Data           4  tasks.o(.bss.pxCurrentTCB)
    queue                                    0x2000060c   Data          12  main.o(.bss.queue)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00004940, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000048d0, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO         1029    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO         1064  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x00000034   Code   RO         1256    !!!scatter          c_w.l(__scatter.o)
    0x08000128   0x08000128   0x0000001a   Code   RO         1258    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000142   0x08000142   0x00000002   PAD
    0x08000144   0x08000144   0x0000001c   Code   RO         1260    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000160   0x08000160   0x00000002   Code   RO         1178    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1082    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1084    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1086    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1089    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1091    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1093    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1096    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1098    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1100    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1102    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1104    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1106    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1108    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1110    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1112    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1114    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1116    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1120    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1122    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1124    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000004   Code   RO         1125    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1126    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x08000166   0x08000166   0x00000002   Code   RO         1127    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000168   0x08000168   0x00000002   Code   RO         1224    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1240    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1242    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1245    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1248    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1250    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO         1253    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0800016a   0x0800016a   0x00000002   Code   RO         1254    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0800016c   0x0800016c   0x00000000   Code   RO         1078    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0800016c   0x0800016c   0x00000000   Code   RO         1137    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0800016c   0x0800016c   0x00000006   Code   RO         1149    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000172   0x08000172   0x00000000   Code   RO         1139    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x08000172   0x08000172   0x00000004   Code   RO         1140    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000176   0x08000176   0x00000000   Code   RO         1142    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000176   0x08000176   0x00000008   Code   RO         1143    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800017e   0x0800017e   0x00000002   Code   RO         1189    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000180   0x08000180   0x00000000   Code   RO         1204    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000180   0x08000180   0x00000004   Code   RO         1205    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000184   0x08000184   0x00000006   Code   RO         1206    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800018a   0x0800018a   0x00000002   PAD
    0x0800018c   0x0800018c   0x00000040   Code   RO         1030    .text               startup_stm32f10x_md.o
    0x080001cc   0x080001cc   0x0000008a   Code   RO         1054    .text               c_w.l(rt_memcpy_v6.o)
    0x08000256   0x08000256   0x00000010   Code   RO         1056    .text               c_w.l(aeabi_memset4.o)
    0x08000266   0x08000266   0x00000044   Code   RO         1058    .text               c_w.l(rt_memclr.o)
    0x080002aa   0x080002aa   0x0000004e   Code   RO         1060    .text               c_w.l(rt_memclr_w.o)
    0x080002f8   0x080002f8   0x00000006   Code   RO         1062    .text               c_w.l(heapauxi.o)
    0x080002fe   0x080002fe   0x00000002   PAD
    0x08000300   0x08000300   0x00000024   Code   RO         1069    .text               c_w.l(init_aeabi.o)
    0x08000324   0x08000324   0x00000064   Code   RO         1079    .text               c_w.l(rt_memcpy_w.o)
    0x08000388   0x08000388   0x00000016   Code   RO         1151    .text               c_w.l(abort.o)
    0x0800039e   0x0800039e   0x00000002   PAD
    0x080003a0   0x080003a0   0x0000000c   Code   RO         1157    .text               c_w.l(sys_exit.o)
    0x080003ac   0x080003ac   0x0000004a   Code   RO         1161    .text               c_w.l(sys_stackheap_outer.o)
    0x080003f6   0x080003f6   0x00000012   Code   RO         1163    .text               c_w.l(exit.o)
    0x08000408   0x08000408   0x0000000e   Code   RO         1165    .text               c_w.l(defsig_abrt_outer.o)
    0x08000416   0x08000416   0x00000002   PAD
    0x08000418   0x08000418   0x00000008   Code   RO         1183    .text               c_w.l(libspace.o)
    0x08000420   0x08000420   0x00000002   Code   RO         1186    .text               c_w.l(use_no_semi.o)
    0x08000422   0x08000422   0x00000000   Code   RO         1188    .text               c_w.l(indicate_semi.o)
    0x08000422   0x08000422   0x0000000a   Code   RO         1195    .text               c_w.l(defsig_exit.o)
    0x0800042c   0x0800042c   0x00000030   Code   RO         1197    .text               c_w.l(defsig_abrt_inner.o)
    0x0800045c   0x0800045c   0x00000032   Code   RO         1212    .text               c_w.l(defsig_general.o)
    0x0800048e   0x0800048e   0x0000000e   Code   RO         1216    .text               c_w.l(sys_wrch.o)
    0x0800049c   0x0800049c   0x00000004   PAD
    0x080004a0   0x080004a0   0x00000044   Code   RO          204    .text.PendSV_Handler  port.o
    0x080004e4   0x080004e4   0x0000000c   PAD
    0x080004f0   0x080004f0   0x00000024   Code   RO          190    .text.SVC_Handler   port.o
    0x08000514   0x08000514   0x00000008   Code   RO         1038    .text.SetSysClock   system_stm32f10x.o
    0x0800051c   0x0800051c   0x00000122   Code   RO         1042    .text.SetSysClockTo72  system_stm32f10x.o
    0x0800063e   0x0800063e   0x00000002   PAD
    0x08000640   0x08000640   0x0000003c   Code   RO          206    .text.SysTick_Handler  port.o
    0x0800067c   0x0800067c   0x00000122   Code   RO         1040    .text.SystemCoreClockUpdate  system_stm32f10x.o
    0x0800079e   0x0800079e   0x00000002   PAD
    0x080007a0   0x080007a0   0x00000066   Code   RO         1036    .text.SystemInit    system_stm32f10x.o
    0x08000806   0x08000806   0x00000002   PAD
    0x08000808   0x08000808   0x0000004c   Code   RO          112    .text.TIM2_IRQHandler  main.o
    0x08000854   0x08000854   0x000000d0   Code   RO          116    .text._GLOBAL__sub_I_main.cpp  main.o
    0x08000924   0x08000924   0x0000000e   Code   RO          707    .text._Z10commonInitv  init.o
    0x08000932   0x08000932   0x00000002   PAD
    0x08000934   0x08000934   0x00000040   Code   RO          698    .text._Z11getPositionj  common.o
    0x08000974   0x08000974   0x00000020   Code   RO          726    .text._Z11setRegisterIVjEvPT_jj  init.o
    0x08000994   0x08000994   0x00000058   Code   RO          687    .text._Z13resetCHBstepsv  common_for_tasks.o
    0x080009ec   0x080009ec   0x0000008a   Code   RO          681    .text._Z14pushSeqInQueueP8Sequence  common_for_tasks.o
    0x08000a76   0x08000a76   0x00000002   PAD
    0x08000a78   0x08000a78   0x00000064   Code   RO          683    .text._Z15getSeqFromQueuev  common_for_tasks.o
    0x08000adc   0x08000adc   0x00000044   Code   RO          793    .text._Z17setBitsInRegisterIVjEvPT_jj  coil.o
    0x08000b20   0x08000b20   0x0000005e   Code   RO          685    .text._Z18deleteSeqFromQueueP8Sequence  common_for_tasks.o
    0x08000b7e   0x08000b7e   0x00000002   PAD
    0x08000b80   0x08000b80   0x00000140   Code   RO          673    .text._Z7CHBTaskPv  chb.o
    0x08000cc0   0x08000cc0   0x00000318   Code   RO          640    .text._Z7OB1TaskPv  ob1.o
    0x08000fd8   0x08000fd8   0x00000318   Code   RO          651    .text._Z7OB2TaskPv  ob2.o
    0x080012f0   0x080012f0   0x00000318   Code   RO          662    .text._Z7OB3TaskPv  ob3.o
    0x08001608   0x08001608   0x000000be   Code   RO          711    .text._Z7rccInitv   init.o
    0x080016c6   0x080016c6   0x00000002   PAD
    0x080016c8   0x080016c8   0x00000058   Code   RO          713    .text._Z8tickInitv  init.o
    0x08001720   0x08001720   0x0000009e   Code   RO          642    .text._ZL13resetAllStepsv  ob1.o
    0x080017be   0x080017be   0x00000002   PAD
    0x080017c0   0x080017c0   0x0000009e   Code   RO          653    .text._ZL13resetAllStepsv  ob2.o
    0x0800185e   0x0800185e   0x00000002   PAD
    0x08001860   0x08001860   0x0000009e   Code   RO          664    .text._ZL13resetAllStepsv  ob3.o
    0x080018fe   0x080018fe   0x00000002   PAD
    0x08001900   0x08001900   0x00000030   Code   RO          715    .text._ZL16__NVIC_EnableIRQ4IRQn  init.o
    0x08001930   0x08001930   0x00000042   Code   RO          717    .text._ZL18__NVIC_SetPriority4IRQnj  init.o
    0x08001972   0x08001972   0x00000002   PAD
    0x08001974   0x08001974   0x0000003c   Code   RO          709    .text._ZL26__NVIC_SetPriorityGroupingj  init.o
    0x080019b0   0x080019b0   0x000000e2   Code   RO          802    .text._ZN10GPIOcommonC2EP12GPIO_TypeDefh  gpio_common.o
    0x08001a92   0x08001a92   0x00000002   PAD
    0x08001a94   0x08001a94   0x00000010   Code   RO          899    .text._ZN11CommonTimer10notStartedEv  common_timer.o
    0x08001aa4   0x08001aa4   0x00000016   Code   RO          901    .text._ZN11CommonTimer11notFinishedEv  common_timer.o
    0x08001aba   0x08001aba   0x00000002   PAD
    0x08001abc   0x08001abc   0x00000018   Code   RO          885    .text._ZN11CommonTimer4stopEv  common_timer.o
    0x08001ad4   0x08001ad4   0x0000000e   Code   RO          883    .text._ZN11CommonTimer5pauseEv  common_timer.o
    0x08001ae2   0x08001ae2   0x00000002   PAD
    0x08001ae4   0x08001ae4   0x00000010   Code   RO          887    .text._ZN11CommonTimer5resetEv  common_timer.o
    0x08001af4   0x08001af4   0x0000000e   Code   RO          881    .text._ZN11CommonTimer5startEv  common_timer.o
    0x08001b02   0x08001b02   0x00000002   PAD
    0x08001b04   0x08001b04   0x0000002e   Code   RO          905    .text._ZN11CommonTimer6inWorkEv  common_timer.o
    0x08001b32   0x08001b32   0x00000002   PAD
    0x08001b34   0x08001b34   0x0000002c   Code   RO          907    .text._ZN11CommonTimer6isFreeEv  common_timer.o
    0x08001b60   0x08001b60   0x00000038   Code   RO          869    .text._ZN11CommonTimer6updateEv  common_timer.o
    0x08001b98   0x08001b98   0x00000010   Code   RO          897    .text._ZN11CommonTimer7startedEv  common_timer.o
    0x08001ba8   0x08001ba8   0x00000016   Code   RO          871    .text._ZN11CommonTimer8finishedEv  common_timer.o
    0x08001bbe   0x08001bbe   0x00000002   PAD
    0x08001bc0   0x08001bc0   0x0000002c   Code   RO          893    .text._ZN11CommonTimer8setStartEb  common_timer.o
    0x08001bec   0x08001bec   0x0000001c   Code   RO          867    .text._ZN11CommonTimerC2Ej  common_timer.o
    0x08001c08   0x08001c08   0x00000016   Code   RO          795    .text._ZN11IUpdated1msC2Ev  coil.o
    0x08001c1e   0x08001c1e   0x00000002   PAD
    0x08001c20   0x08001c20   0x00000016   Code   RO          829    .text._ZN11SimpleInput11isNotActiveEv  simple_input.o
    0x08001c36   0x08001c36   0x00000002   PAD
    0x08001c38   0x08001c38   0x00000040   Code   RO          827    .text._ZN11SimpleInput8isActiveEv  simple_input.o
    0x08001c78   0x08001c78   0x00000098   Code   RO          825    .text._ZN11SimpleInputC2EP12GPIO_TypeDefh  simple_input.o
    0x08001d10   0x08001d10   0x00000010   Code   RO          729    .text._ZN12ProgrammCoil8isActiveEv  coil.o
    0x08001d20   0x08001d20   0x00000018   Code   RO          731    .text._ZN12ProgrammCoil8setValueEb  coil.o
    0x08001d38   0x08001d38   0x00000020   Code   RO          791    .text._ZN12ProgrammCoilC2Ev  coil.o
    0x08001d58   0x08001d58   0x00000042   Code   RO         1016    .text._ZN15SequenceDelayed9update1msEv  sequence.o
    0x08001d9a   0x08001d9a   0x00000002   PAD
    0x08001d9c   0x08001d9c   0x00000046   Code   RO         1014    .text._ZN15SequenceDelayedC2EPhhj  sequence.o
    0x08001de2   0x08001de2   0x00000002   PAD
    0x08001de4   0x08001de4   0x00000010   Code   RO          837    .text._ZN18SimpleInputDelayed8isActiveEv  simple_input.o
    0x08001df4   0x08001df4   0x00000022   Code   RO          833    .text._ZN18SimpleInputDelayed9update1msEv  simple_input.o
    0x08001e16   0x08001e16   0x00000002   PAD
    0x08001e18   0x08001e18   0x00000050   Code   RO          831    .text._ZN18SimpleInputDelayedC2EP12GPIO_TypeDefht  simple_input.o
    0x08001e68   0x08001e68   0x00000016   Code   RO          743    .text._ZN4Coil8isActiveEv  coil.o
    0x08001e7e   0x08001e7e   0x00000002   PAD
    0x08001e80   0x08001e80   0x00000042   Code   RO          745    .text._ZN4Coil8setValueEb  coil.o
    0x08001ec2   0x08001ec2   0x00000002   PAD
    0x08001ec4   0x08001ec4   0x00000076   Code   RO          741    .text._ZN4CoilC2EP12GPIO_TypeDefh  coil.o
    0x08001f3a   0x08001f3a   0x00000002   PAD
    0x08001f3c   0x08001f3c   0x00000022   Code   RO          747    .text._ZN4CoilaSEb  coil.o
    0x08001f5e   0x08001f5e   0x00000002   PAD
    0x08001f60   0x08001f60   0x00000010   Code   RO          969    .text._ZN5Pulse3getEv  pulse.o
    0x08001f70   0x08001f70   0x00000048   Code   RO          967    .text._ZN5Pulse3setEb  pulse.o
    0x08001fb8   0x08001fb8   0x00000024   Code   RO          963    .text._ZN5Pulse9update1msEv  pulse.o
    0x08001fdc   0x08001fdc   0x00000032   Code   RO          961    .text._ZN5PulseC2Ej  pulse.o
    0x0800200e   0x0800200e   0x00000002   PAD
    0x08002010   0x08002010   0x00000020   Code   RO          973    .text._ZN5PulseaSEb  pulse.o
    0x08002030   0x08002030   0x00000016   Code   RO          797    .text._ZN7ISwitchC2Ev  coil.o
    0x08002046   0x08002046   0x00000002   PAD
    0x08002048   0x08002048   0x00000010   Code   RO         1012    .text._ZN8Sequence15finishedImpulseEv  sequence.o
    0x08002058   0x08002058   0x00000018   Code   RO         1000    .text._ZN8Sequence4lockEb  sequence.o
    0x08002070   0x08002070   0x00000018   Code   RO          996    .text._ZN8Sequence5resetEv  sequence.o
    0x08002088   0x08002088   0x0000002c   Code   RO          998    .text._ZN8Sequence5startEb  sequence.o
    0x080020b4   0x080020b4   0x00000044   Code   RO         1002    .text._ZN8Sequence6finishEb  sequence.o
    0x080020f8   0x080020f8   0x00000010   Code   RO         1008    .text._ZN8Sequence6lockedEv  sequence.o
    0x08002108   0x08002108   0x0000002a   Code   RO         1006    .text._ZN8Sequence7startedEv  sequence.o
    0x08002132   0x08002132   0x00000002   PAD
    0x08002134   0x08002134   0x00000018   Code   RO          994    .text._ZN8Sequence8isMyStepEv  sequence.o
    0x0800214c   0x0800214c   0x00000026   Code   RO          992    .text._ZN8SequenceC2EPhh  sequence.o
    0x08002172   0x08002172   0x00000002   PAD
    0x08002174   0x08002174   0x00000012   Code   RO          771    .text._ZN9CoilPulse8isActiveEv  coil.o
    0x08002186   0x08002186   0x00000002   PAD
    0x08002188   0x08002188   0x0000001c   Code   RO          775    .text._ZN9CoilPulse8setValueEb  coil.o
    0x080021a4   0x080021a4   0x00000026   Code   RO          767    .text._ZN9CoilPulse9update1msEv  coil.o
    0x080021ca   0x080021ca   0x00000002   PAD
    0x080021cc   0x080021cc   0x00000050   Code   RO          765    .text._ZN9CoilPulseC2EP12GPIO_TypeDefht  coil.o
    0x0800221c   0x0800221c   0x00000022   Code   RO          779    .text._ZN9CoilPulseaSEb  coil.o
    0x0800223e   0x0800223e   0x00000002   PAD
    0x08002240   0x08002240   0x00000020   Code   RO          814    .text._ZN9RFimpulse3getEv  rf_impulse.o
    0x08002260   0x08002260   0x0000008a   Code   RO          812    .text._ZN9RFimpulse3setEb  rf_impulse.o
    0x080022ea   0x080022ea   0x00000002   PAD
    0x080022ec   0x080022ec   0x00000014   Code   RO          810    .text._ZN9RFimpulseC2E7IMPULSE  rf_impulse.o
    0x08002300   0x08002300   0x0000000e   Code   RO          839    .text._ZThn16_N18SimpleInputDelayed8isActiveEv  simple_input.o
    0x0800230e   0x0800230e   0x00000002   PAD
    0x08002310   0x08002310   0x0000000e   Code   RO          965    .text._ZThn16_N5Pulse9update1msEv  pulse.o
    0x0800231e   0x0800231e   0x00000002   PAD
    0x08002320   0x08002320   0x0000000e   Code   RO          773    .text._ZThn16_N9CoilPulse8isActiveEv  coil.o
    0x0800232e   0x0800232e   0x00000002   PAD
    0x08002330   0x08002330   0x0000001a   Code   RO          777    .text._ZThn16_N9CoilPulse8setValueEb  coil.o
    0x0800234a   0x0800234a   0x00000002   PAD
    0x0800234c   0x0800234c   0x0000000e   Code   RO         1018    .text._ZThn28_N15SequenceDelayed9update1msEv  sequence.o
    0x0800235a   0x0800235a   0x00000002   PAD
    0x0800235c   0x0800235c   0x0000000e   Code   RO          835    .text._ZThn32_N18SimpleInputDelayed9update1msEv  simple_input.o
    0x0800236a   0x0800236a   0x00000002   PAD
    0x0800236c   0x0800236c   0x0000000e   Code   RO          769    .text._ZThn32_N9CoilPulse9update1msEv  coil.o
    0x0800237a   0x0800237a   0x00000002   PAD
    0x0800237c   0x0800237c   0x00000028   Code   RO         1073    .text.__cxa_pure_virtual  libcppabi_w.l(cxa_virtual.cpp.o)
    0x080023a4   0x080023a4   0x0000001c   Code   RO            2    .text.__cxx_global_var_init  main.o
    0x080023c0   0x080023c0   0x0000001c   Code   RO            4    .text.__cxx_global_var_init.1  main.o
    0x080023dc   0x080023dc   0x0000001a   Code   RO           22    .text.__cxx_global_var_init.10  main.o
    0x080023f6   0x080023f6   0x00000002   PAD
    0x080023f8   0x080023f8   0x0000001a   Code   RO           24    .text.__cxx_global_var_init.11  main.o
    0x08002412   0x08002412   0x00000002   PAD
    0x08002414   0x08002414   0x0000001e   Code   RO           26    .text.__cxx_global_var_init.12  main.o
    0x08002432   0x08002432   0x00000002   PAD
    0x08002434   0x08002434   0x0000001a   Code   RO           28    .text.__cxx_global_var_init.13  main.o
    0x0800244e   0x0800244e   0x00000002   PAD
    0x08002450   0x08002450   0x0000001a   Code   RO           30    .text.__cxx_global_var_init.14  main.o
    0x0800246a   0x0800246a   0x00000002   PAD
    0x0800246c   0x0800246c   0x0000001a   Code   RO           32    .text.__cxx_global_var_init.15  main.o
    0x08002486   0x08002486   0x00000002   PAD
    0x08002488   0x08002488   0x0000001e   Code   RO           34    .text.__cxx_global_var_init.16  main.o
    0x080024a6   0x080024a6   0x00000002   PAD
    0x080024a8   0x080024a8   0x0000001a   Code   RO           36    .text.__cxx_global_var_init.17  main.o
    0x080024c2   0x080024c2   0x00000002   PAD
    0x080024c4   0x080024c4   0x0000001a   Code   RO           38    .text.__cxx_global_var_init.18  main.o
    0x080024de   0x080024de   0x00000002   PAD
    0x080024e0   0x080024e0   0x0000001a   Code   RO           40    .text.__cxx_global_var_init.19  main.o
    0x080024fa   0x080024fa   0x00000002   PAD
    0x080024fc   0x080024fc   0x0000001c   Code   RO            6    .text.__cxx_global_var_init.2  main.o
    0x08002518   0x08002518   0x0000001e   Code   RO           42    .text.__cxx_global_var_init.20  main.o
    0x08002536   0x08002536   0x00000002   PAD
    0x08002538   0x08002538   0x0000001a   Code   RO           44    .text.__cxx_global_var_init.21  main.o
    0x08002552   0x08002552   0x00000002   PAD
    0x08002554   0x08002554   0x0000001a   Code   RO           46    .text.__cxx_global_var_init.22  main.o
    0x0800256e   0x0800256e   0x00000002   PAD
    0x08002570   0x08002570   0x0000001a   Code   RO           48    .text.__cxx_global_var_init.23  main.o
    0x0800258a   0x0800258a   0x00000002   PAD
    0x0800258c   0x0800258c   0x0000001a   Code   RO           50    .text.__cxx_global_var_init.24  main.o
    0x080025a6   0x080025a6   0x00000002   PAD
    0x080025a8   0x080025a8   0x0000001a   Code   RO           52    .text.__cxx_global_var_init.25  main.o
    0x080025c2   0x080025c2   0x00000002   PAD
    0x080025c4   0x080025c4   0x0000001a   Code   RO           54    .text.__cxx_global_var_init.26  main.o
    0x080025de   0x080025de   0x00000002   PAD
    0x080025e0   0x080025e0   0x0000001a   Code   RO           56    .text.__cxx_global_var_init.27  main.o
    0x080025fa   0x080025fa   0x00000002   PAD
    0x080025fc   0x080025fc   0x00000022   Code   RO           58    .text.__cxx_global_var_init.28  main.o
    0x0800261e   0x0800261e   0x00000002   PAD
    0x08002620   0x08002620   0x0000001e   Code   RO           60    .text.__cxx_global_var_init.29  main.o
    0x0800263e   0x0800263e   0x00000002   PAD
    0x08002640   0x08002640   0x0000001c   Code   RO            8    .text.__cxx_global_var_init.3  main.o
    0x0800265c   0x0800265c   0x0000001a   Code   RO           62    .text.__cxx_global_var_init.30  main.o
    0x08002676   0x08002676   0x00000002   PAD
    0x08002678   0x08002678   0x00000022   Code   RO           64    .text.__cxx_global_var_init.31  main.o
    0x0800269a   0x0800269a   0x00000002   PAD
    0x0800269c   0x0800269c   0x00000018   Code   RO           66    .text.__cxx_global_var_init.32  main.o
    0x080026b4   0x080026b4   0x0000001a   Code   RO           68    .text.__cxx_global_var_init.33  main.o
    0x080026ce   0x080026ce   0x00000002   PAD
    0x080026d0   0x080026d0   0x0000001a   Code   RO           70    .text.__cxx_global_var_init.34  main.o
    0x080026ea   0x080026ea   0x00000002   PAD
    0x080026ec   0x080026ec   0x00000022   Code   RO           72    .text.__cxx_global_var_init.35  main.o
    0x0800270e   0x0800270e   0x00000002   PAD
    0x08002710   0x08002710   0x0000001e   Code   RO           74    .text.__cxx_global_var_init.36  main.o
    0x0800272e   0x0800272e   0x00000002   PAD
    0x08002730   0x08002730   0x0000001a   Code   RO           76    .text.__cxx_global_var_init.37  main.o
    0x0800274a   0x0800274a   0x00000002   PAD
    0x0800274c   0x0800274c   0x00000022   Code   RO           78    .text.__cxx_global_var_init.38  main.o
    0x0800276e   0x0800276e   0x00000002   PAD
    0x08002770   0x08002770   0x00000018   Code   RO           80    .text.__cxx_global_var_init.39  main.o
    0x08002788   0x08002788   0x0000001c   Code   RO           10    .text.__cxx_global_var_init.4  main.o
    0x080027a4   0x080027a4   0x0000001a   Code   RO           82    .text.__cxx_global_var_init.40  main.o
    0x080027be   0x080027be   0x00000002   PAD
    0x080027c0   0x080027c0   0x0000001a   Code   RO           84    .text.__cxx_global_var_init.41  main.o
    0x080027da   0x080027da   0x00000002   PAD
    0x080027dc   0x080027dc   0x00000022   Code   RO           86    .text.__cxx_global_var_init.42  main.o
    0x080027fe   0x080027fe   0x00000002   PAD
    0x08002800   0x08002800   0x0000001e   Code   RO           88    .text.__cxx_global_var_init.43  main.o
    0x0800281e   0x0800281e   0x00000002   PAD
    0x08002820   0x08002820   0x0000001a   Code   RO           90    .text.__cxx_global_var_init.44  main.o
    0x0800283a   0x0800283a   0x00000002   PAD
    0x0800283c   0x0800283c   0x00000022   Code   RO           92    .text.__cxx_global_var_init.45  main.o
    0x0800285e   0x0800285e   0x00000002   PAD
    0x08002860   0x08002860   0x00000018   Code   RO           94    .text.__cxx_global_var_init.46  main.o
    0x08002878   0x08002878   0x0000001a   Code   RO           96    .text.__cxx_global_var_init.47  main.o
    0x08002892   0x08002892   0x00000002   PAD
    0x08002894   0x08002894   0x0000001a   Code   RO           98    .text.__cxx_global_var_init.48  main.o
    0x080028ae   0x080028ae   0x00000002   PAD
    0x080028b0   0x080028b0   0x0000001e   Code   RO          100    .text.__cxx_global_var_init.49  main.o
    0x080028ce   0x080028ce   0x00000002   PAD
    0x080028d0   0x080028d0   0x0000001c   Code   RO           12    .text.__cxx_global_var_init.5  main.o
    0x080028ec   0x080028ec   0x0000001a   Code   RO          102    .text.__cxx_global_var_init.50  main.o
    0x08002906   0x08002906   0x00000002   PAD
    0x08002908   0x08002908   0x0000001e   Code   RO           14    .text.__cxx_global_var_init.6  main.o
    0x08002926   0x08002926   0x00000002   PAD
    0x08002928   0x08002928   0x0000001e   Code   RO           16    .text.__cxx_global_var_init.7  main.o
    0x08002946   0x08002946   0x00000002   PAD
    0x08002948   0x08002948   0x0000001e   Code   RO           18    .text.__cxx_global_var_init.8  main.o
    0x08002966   0x08002966   0x00000002   PAD
    0x08002968   0x08002968   0x0000001a   Code   RO           20    .text.__cxx_global_var_init.9  main.o
    0x08002982   0x08002982   0x00000004   Code   RO         1133    .text.abort_message  libcppabi_w.l(abort_message.cpp.o)
    0x08002986   0x08002986   0x00000002   PAD
    0x08002988   0x08002988   0x000000a2   Code   RO          114    .text.main          main.o
    0x08002a2a   0x08002a2a   0x00000002   PAD
    0x08002a2c   0x08002a2c   0x0000011a   Code   RO          439    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x08002b46   0x08002b46   0x00000002   PAD
    0x08002b48   0x08002b48   0x00000154   Code   RO          427    .text.prvAddNewTaskToReadyList  tasks.o
    0x08002c9c   0x08002c9c   0x0000006a   Code   RO          575    .text.prvCheckForValidListAndQueue  timers.o
    0x08002d06   0x08002d06   0x00000002   PAD
    0x08002d08   0x08002d08   0x0000005a   Code   RO          541    .text.prvCheckTasksWaitingTermination  tasks.o
    0x08002d62   0x08002d62   0x00000002   PAD
    0x08002d64   0x08002d64   0x00000042   Code   RO          329    .text.prvCopyDataFromQueue  queue.o
    0x08002da6   0x08002da6   0x00000002   PAD
    0x08002da8   0x08002da8   0x00000018   Code   RO          433    .text.prvDeleteTCB  tasks.o
    0x08002dc0   0x08002dc0   0x00000040   Code   RO          609    .text.prvGetNextExpireTime  timers.o
    0x08002e00   0x08002e00   0x000000ae   Code   RO          250    .text.prvHeapInit   heap_4.o
    0x08002eae   0x08002eae   0x00000002   PAD
    0x08002eb0   0x08002eb0   0x0000003c   Code   RO          465    .text.prvIdleTask   tasks.o
    0x08002eec   0x08002eec   0x00000048   Code   RO          301    .text.prvInitialiseNewQueue  queue.o
    0x08002f34   0x08002f34   0x000000e6   Code   RO          425    .text.prvInitialiseNewTask  tasks.o
    0x0800301a   0x0800301a   0x00000002   PAD
    0x0800301c   0x0800301c   0x0000008e   Code   RO          539    .text.prvInitialiseTaskLists  tasks.o
    0x080030aa   0x080030aa   0x00000002   PAD
    0x080030ac   0x080030ac   0x000000c6   Code   RO          252    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x08003172   0x08003172   0x00000002   PAD
    0x08003174   0x08003174   0x00000086   Code   RO          623    .text.prvInsertTimerInActiveList  timers.o
    0x080031fa   0x080031fa   0x00000002   PAD
    0x080031fc   0x080031fc   0x00000028   Code   RO          331    .text.prvIsQueueEmpty  queue.o
    0x08003224   0x08003224   0x00000020   Code   RO          196    .text.prvPortStartFirstTask  port.o
    0x08003244   0x08003244   0x00000054   Code   RO          617    .text.prvProcessExpiredTimer  timers.o
    0x08003298   0x08003298   0x00000126   Code   RO          613    .text.prvProcessReceivedCommands  timers.o
    0x080033be   0x080033be   0x00000002   PAD
    0x080033c0   0x080033c0   0x0000009a   Code   RO          611    .text.prvProcessTimerOrBlockTask  timers.o
    0x0800345a   0x0800345a   0x00000002   PAD
    0x0800345c   0x0800345c   0x00000034   Code   RO          621    .text.prvReloadTimer  timers.o
    0x08003490   0x08003490   0x0000003c   Code   RO          431    .text.prvResetNextTaskUnblockTime  tasks.o
    0x080034cc   0x080034cc   0x00000044   Code   RO          615    .text.prvSampleTimeNow  timers.o
    0x08003510   0x08003510   0x00000052   Code   RO          619    .text.prvSwitchTimerLists  timers.o
    0x08003562   0x08003562   0x00000002   PAD
    0x08003564   0x08003564   0x00000026   Code   RO          188    .text.prvTaskExitError  port.o
    0x0800358a   0x0800358a   0x00000002   PAD
    0x0800358c   0x0800358c   0x0000001e   Code   RO          577    .text.prvTimerTask  timers.o
    0x080035aa   0x080035aa   0x00000002   PAD
    0x080035ac   0x080035ac   0x000000ae   Code   RO          321    .text.prvUnlockQueue  queue.o
    0x0800365a   0x0800365a   0x00000002   PAD
    0x0800365c   0x0800365c   0x00000186   Code   RO          248    .text.pvPortMalloc  heap_4.o
    0x080037e2   0x080037e2   0x00000002   PAD
    0x080037e4   0x080037e4   0x00000050   Code   RO          186    .text.pxPortInitialiseStack  port.o
    0x08003834   0x08003834   0x00000048   Code   RO          288    .text.uxListRemove  list.o
    0x0800387c   0x0800387c   0x00000002   Code   RO          104    .text.vApplicationIdleHook  main.o
    0x0800387e   0x0800387e   0x00000002   PAD
    0x08003880   0x08003880   0x0000000a   Code   RO          110    .text.vApplicationStackOverflowHook  main.o
    0x0800388a   0x0800388a   0x00000002   PAD
    0x0800388c   0x0800388c   0x00000002   Code   RO          106    .text.vApplicationTickHook  main.o
    0x0800388e   0x0800388e   0x00000002   PAD
    0x08003890   0x08003890   0x0000002e   Code   RO          280    .text.vListInitialise  list.o
    0x080038be   0x080038be   0x00000002   PAD
    0x080038c0   0x080038c0   0x0000000e   Code   RO          282    .text.vListInitialiseItem  list.o
    0x080038ce   0x080038ce   0x00000002   PAD
    0x080038d0   0x080038d0   0x0000006a   Code   RO          286    .text.vListInsert   list.o
    0x0800393a   0x0800393a   0x00000002   PAD
    0x0800393c   0x0800393c   0x00000030   Code   RO          200    .text.vPortEnterCritical  port.o
    0x0800396c   0x0800396c   0x00000026   Code   RO          202    .text.vPortExitCritical  port.o
    0x08003992   0x08003992   0x00000002   PAD
    0x08003994   0x08003994   0x00000076   Code   RO          254    .text.vPortFree     heap_4.o
    0x08003a0a   0x08003a0a   0x00000002   PAD
    0x08003a0c   0x08003a0c   0x0000002e   Code   RO          194    .text.vPortSetupTimerInterrupt  port.o
    0x08003a3a   0x08003a3a   0x00000002   PAD
    0x08003a3c   0x08003a3c   0x00000064   Code   RO          359    .text.vQueueWaitForMessageRestricted  queue.o
    0x08003aa0   0x08003aa0   0x0000004a   Code   RO          443    .text.vTaskDelay    tasks.o
    0x08003aea   0x08003aea   0x00000002   PAD
    0x08003aec   0x08003aec   0x00000024   Code   RO          497    .text.vTaskInternalSetTimeOutState  tasks.o
    0x08003b10   0x08003b10   0x0000000e   Code   RO          501    .text.vTaskMissedYield  tasks.o
    0x08003b1e   0x08003b1e   0x00000002   PAD
    0x08003b20   0x08003b20   0x00000026   Code   RO          485    .text.vTaskPlaceOnEventList  tasks.o
    0x08003b46   0x08003b46   0x00000002   PAD
    0x08003b48   0x08003b48   0x00000060   Code   RO          489    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x08003ba8   0x08003ba8   0x00000094   Code   RO          463    .text.vTaskStartScheduler  tasks.o
    0x08003c3c   0x08003c3c   0x00000010   Code   RO          437    .text.vTaskSuspendAll  tasks.o
    0x08003c4c   0x08003c4c   0x000000ec   Code   RO          455    .text.vTaskSwitchContext  tasks.o
    0x08003d38   0x08003d38   0x00000040   Code   RO          192    .text.xPortStartScheduler  port.o
    0x08003d78   0x08003d78   0x0000007e   Code   RO          299    .text.xQueueGenericCreate  queue.o
    0x08003df6   0x08003df6   0x00000002   PAD
    0x08003df8   0x08003df8   0x000000d0   Code   RO          297    .text.xQueueGenericReset  queue.o
    0x08003ec8   0x08003ec8   0x00000152   Code   RO          327    .text.xQueueReceive  queue.o
    0x0800401a   0x0800401a   0x00000002   PAD
    0x0800401c   0x0800401c   0x0000009a   Code   RO          499    .text.xTaskCheckForTimeOut  tasks.o
    0x080040b6   0x080040b6   0x00000002   PAD
    0x080040b8   0x080040b8   0x000000a0   Code   RO          423    .text.xTaskCreate   tasks.o
    0x08004158   0x08004158   0x00000014   Code   RO          471    .text.xTaskGetTickCount  tasks.o
    0x0800416c   0x0800416c   0x00000254   Code   RO          469    .text.xTaskIncrementTick  tasks.o
    0x080043c0   0x080043c0   0x00000170   Code   RO          491    .text.xTaskRemoveFromEventList  tasks.o
    0x08004530   0x08004530   0x000001fe   Code   RO          441    .text.xTaskResumeAll  tasks.o
    0x0800472e   0x0800472e   0x00000002   PAD
    0x08004730   0x08004730   0x00000050   Code   RO          573    .text.xTimerCreateTimerTask  timers.o
    0x08004780   0x08004780   0x00000010   Data   RO         1045    .rodata.AHBPrescTable  system_stm32f10x.o
    0x08004790   0x08004790   0x0000000c   Data   RO          909    .rodata._ZTV11CommonTimer  common_timer.o
    0x0800479c   0x0800479c   0x0000000c   Data   RO          800    .rodata._ZTV11IUpdated1ms  coil.o
    0x080047a8   0x080047a8   0x0000000c   Data   RO          841    .rodata._ZTV11SimpleInput  simple_input.o
    0x080047b4   0x080047b4   0x00000010   Data   RO          784    .rodata._ZTV12ProgrammCoil  coil.o
    0x080047c4   0x080047c4   0x0000001c   Data   RO         1020    .rodata._ZTV15SequenceDelayed  sequence.o
    0x080047e0   0x080047e0   0x0000002c   Data   RO          842    .rodata._ZTV18SimpleInputDelayed  simple_input.o
    0x0800480c   0x0800480c   0x00000010   Data   RO          781    .rodata._ZTV4Coil   coil.o
    0x0800481c   0x0800481c   0x0000001c   Data   RO          983    .rodata._ZTV5Pulse  pulse.o
    0x08004838   0x08004838   0x0000000c   Data   RO          799    .rodata._ZTV7ISwitch  coil.o
    0x08004844   0x08004844   0x00000034   Data   RO          783    .rodata._ZTV9CoilPulse  coil.o
    0x08004878   0x08004878   0x00000020   Data   RO          176    .rodata.str1.1      main.o
    0x08004898   0x08004898   0x00000005   Data   RO          559    .rodata.str1.1      tasks.o
    0x0800489d   0x0800489d   0x00000008   Data   RO          626    .rodata.str1.1      timers.o
    0x080048a5   0x080048a5   0x00000003   PAD
    0x080048a8   0x080048a8   0x00000004   Data   RO          544    .rodata.uxTopUsedPriority  tasks.o
    0x080048ac   0x080048ac   0x00000020   Data   RO         1255    Region$$Table       anon$$obj.o
    0x080048cc   0x080048cc   0x00000004   Data   RO          177    .init_array         main.o
    0x080048d0   0x080048cc   0x00000000   Data   RO         1067    .init_array         c_w.l(init_aeabi.o)


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x080048d0, Size: 0x000034f8, Max: 0x00005000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x080048d0   0x00000004   Data   RW         1044    .data.SystemCoreClock  system_stm32f10x.o
    0x20000004   0x080048d4   0x00000064   Data   RW          174    .data.update1msObjects  main.o
    0x20000068   0x08004938   0x00000001   Data   RW          175    .data.updateObjectsSize  main.o
    0x20000069   0x08004939   0x00000003   PAD
    0x2000006c   0x0800493c   0x00000004   Data   RW          208    .data.uxCriticalNesting  port.o
    0x20000070        -       0x00000060   Zero   RW         1184    .bss                c_w.l(libspace.o)
    0x200000d0        -       0x00000024   Zero   RW          118    .bss.B1             main.o
    0x200000f4        -       0x00000024   Zero   RW          120    .bss.B2             main.o
    0x20000118        -       0x00000024   Zero   RW          122    .bss.B3             main.o
    0x2000013c        -       0x00000010   Zero   RW          127    .bss.C1             main.o
    0x2000014c        -       0x00000010   Zero   RW          131    .bss.C2             main.o
    0x2000015c        -       0x00000010   Zero   RW          135    .bss.C3             main.o
    0x2000016c        -       0x0000000c   Zero   RW          170    .bss.CHBs0          main.o
    0x20000178        -       0x00000020   Zero   RW          171    .bss.CHBs1          main.o
    0x20000198        -       0x0000000c   Zero   RW          172    .bss.CHBs2          main.o
    0x200001a4        -       0x00000001   Zero   RW          169    .bss.CHBstep        main.o
    0x200001a5   0x08004940   0x00000003   PAD
    0x200001a8        -       0x00000010   Zero   RW          129    .bss.D1             main.o
    0x200001b8        -       0x00000010   Zero   RW          133    .bss.D2             main.o
    0x200001c8        -       0x00000010   Zero   RW          137    .bss.D3             main.o
    0x200001d8        -       0x00000010   Zero   RW          139    .bss.D4             main.o
    0x200001e8        -       0x00000024   Zero   RW          119    .bss.H1             main.o
    0x2000020c        -       0x00000024   Zero   RW          121    .bss.H2             main.o
    0x20000230        -       0x00000024   Zero   RW          123    .bss.H3             main.o
    0x20000254        -       0x00000024   Zero   RW          130    .bss.M1             main.o
    0x20000278        -       0x00000024   Zero   RW          134    .bss.M2             main.o
    0x2000029c        -       0x00000024   Zero   RW          138    .bss.M3             main.o
    0x200002c0        -       0x00000010   Zero   RW          140    .bss.M6             main.o
    0x200002d0        -       0x00000010   Zero   RW          141    .bss.M7             main.o
    0x200002e0        -       0x00000010   Zero   RW          142    .bss.Me1            main.o
    0x200002f0        -       0x00000010   Zero   RW          143    .bss.Me2            main.o
    0x20000300        -       0x00000010   Zero   RW          144    .bss.Me3            main.o
    0x20000310        -       0x00000010   Zero   RW          128    .bss.O1             main.o
    0x20000320        -       0x00000010   Zero   RW          132    .bss.O2             main.o
    0x20000330        -       0x00000010   Zero   RW          136    .bss.O3             main.o
    0x20000340        -       0x0000000c   Zero   RW          146    .bss.OB1s0          main.o
    0x2000034c        -       0x00000020   Zero   RW          147    .bss.OB1s1          main.o
    0x2000036c        -       0x00000020   Zero   RW          148    .bss.OB1s2          main.o
    0x2000038c        -       0x0000000c   Zero   RW          149    .bss.OB1s3          main.o
    0x20000398        -       0x00000020   Zero   RW          150    .bss.OB1s4          main.o
    0x200003b8        -       0x00000018   Zero   RW          151    .bss.OB1s4MeTimer   main.o
    0x200003d0        -       0x0000000c   Zero   RW          152    .bss.OB1s5          main.o
    0x200003dc        -       0x00000001   Zero   RW          145    .bss.OB1step        main.o
    0x200003dd   0x08004940   0x00000003   PAD
    0x200003e0        -       0x0000000c   Zero   RW          154    .bss.OB2s0          main.o
    0x200003ec        -       0x00000020   Zero   RW          155    .bss.OB2s1          main.o
    0x2000040c        -       0x00000020   Zero   RW          156    .bss.OB2s2          main.o
    0x2000042c        -       0x0000000c   Zero   RW          157    .bss.OB2s3          main.o
    0x20000438        -       0x00000020   Zero   RW          158    .bss.OB2s4          main.o
    0x20000458        -       0x00000018   Zero   RW          159    .bss.OB2s4MeTimer   main.o
    0x20000470        -       0x0000000c   Zero   RW          160    .bss.OB2s5          main.o
    0x2000047c        -       0x00000001   Zero   RW          153    .bss.OB2step        main.o
    0x2000047d   0x08004940   0x00000003   PAD
    0x20000480        -       0x0000000c   Zero   RW          162    .bss.OB3s0          main.o
    0x2000048c        -       0x00000020   Zero   RW          163    .bss.OB3s1          main.o
    0x200004ac        -       0x00000020   Zero   RW          164    .bss.OB3s2          main.o
    0x200004cc        -       0x0000000c   Zero   RW          165    .bss.OB3s3          main.o
    0x200004d8        -       0x00000020   Zero   RW          166    .bss.OB3s4          main.o
    0x200004f8        -       0x00000018   Zero   RW          167    .bss.OB3s4MeTimer   main.o
    0x20000510        -       0x0000000c   Zero   RW          168    .bss.OB3s5          main.o
    0x2000051c        -       0x00000001   Zero   RW          161    .bss.OB3step        main.o
    0x2000051d   0x08004940   0x00000003   PAD
    0x20000520        -       0x00000024   Zero   RW          124    .bss.S4             main.o
    0x20000544        -       0x00000024   Zero   RW          125    .bss.S5             main.o
    0x20000568        -       0x00000024   Zero   RW          126    .bss.S6             main.o
    0x2000058c        -       0x00000004   Zero   RW          630    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000590        -       0x00000004   Zero   RW          543    .bss.pxCurrentTCB   tasks.o
    0x20000594        -       0x00000004   Zero   RW          628    .bss.pxCurrentTimerList  timers.o
    0x20000598        -       0x00000004   Zero   RW          553    .bss.pxDelayedTaskList  tasks.o
    0x2000059c        -       0x00000004   Zero   RW          266    .bss.pxEnd          heap_4.o
    0x200005a0        -       0x00000004   Zero   RW          554    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200005a4        -       0x00000004   Zero   RW          629    .bss.pxOverflowTimerList  timers.o
    0x200005a8        -       0x00000064   Zero   RW          545    .bss.pxReadyTasksLists  tasks.o
    0x2000060c        -       0x0000000c   Zero   RW          173    .bss.queue          main.o
    0x20000618        -       0x00002800   Zero   RW          272    .bss.ucHeap         heap_4.o
    0x20002e18        -       0x00000004   Zero   RW          550    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002e1c        -       0x00000004   Zero   RW          549    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002e20        -       0x00000004   Zero   RW          556    .bss.uxSchedulerSuspended  tasks.o
    0x20002e24        -       0x00000004   Zero   RW          547    .bss.uxTaskNumber   tasks.o
    0x20002e28        -       0x00000004   Zero   RW          546    .bss.uxTopReadyPriority  tasks.o
    0x20002e2c        -       0x00000014   Zero   RW          631    .bss.xActiveTimerList1  timers.o
    0x20002e40        -       0x00000014   Zero   RW          632    .bss.xActiveTimerList2  timers.o
    0x20002e54        -       0x00000014   Zero   RW          564    .bss.xDelayedTaskList1  tasks.o
    0x20002e68        -       0x00000014   Zero   RW          565    .bss.xDelayedTaskList2  tasks.o
    0x20002e7c        -       0x00000004   Zero   RW          267    .bss.xFreeBytesRemaining  heap_4.o
    0x20002e80        -       0x00000004   Zero   RW          560    .bss.xIdleTaskHandle  tasks.o
    0x20002e84        -       0x00000004   Zero   RW          269    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002e88        -       0x00000004   Zero   RW          561    .bss.xNextTaskUnblockTime  tasks.o
    0x20002e8c        -       0x00000004   Zero   RW          563    .bss.xNumOfOverflows  tasks.o
    0x20002e90        -       0x00000004   Zero   RW          270    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002e94        -       0x00000004   Zero   RW          271    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002e98        -       0x00000004   Zero   RW          562    .bss.xPendedTicks   tasks.o
    0x20002e9c        -       0x00000014   Zero   RW          558    .bss.xPendingReadyList  tasks.o
    0x20002eb0        -       0x00000004   Zero   RW          551    .bss.xSchedulerRunning  tasks.o
    0x20002eb4        -       0x00000008   Zero   RW          268    .bss.xStart         heap_4.o
    0x20002ebc        -       0x00000014   Zero   RW          555    .bss.xSuspendedTaskList  tasks.o
    0x20002ed0        -       0x00000014   Zero   RW          548    .bss.xTasksWaitingTermination  tasks.o
    0x20002ee4        -       0x00000004   Zero   RW          552    .bss.xTickCount     tasks.o
    0x20002ee8        -       0x00000004   Zero   RW          625    .bss.xTimerQueue    timers.o
    0x20002eec        -       0x00000004   Zero   RW          627    .bss.xTimerTaskHandle  timers.o
    0x20002ef0        -       0x00000004   Zero   RW          557    .bss.xYieldPending  tasks.o
    0x20002ef4   0x08004940   0x00000004   PAD
    0x20002ef8        -       0x00000200   Zero   RW         1028    HEAP                startup_stm32f10x_md.o
    0x200030f8        -       0x00000400   Zero   RW         1027    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       320          0          0          0          0       1975   chb.o
       676          0        108          0          0       7340   coil.o
        64          0          0          0          0       1816   common.o
       420          0          0          0          0       2655   common_for_tasks.o
       362          0         12          0          0       5267   common_timer.o
       226          0          0          0          0       2313   gpio_common.o
       880          0          0          0      10268       4068   heap_4.o
       498          0          0          0          0       6326   init.o
       238          0          0          0          0       2050   list.o
      1880          0         36        101       1212      10433   main.o
       950         12          0          0          0       2171   ob1.o
       950         12          0          0          0       2171   ob2.o
       950         12          0          0          0       2171   ob3.o
       510         12          0          4          0       2489   port.o
       220          0         28          0          0       3929   pulse.o
      1124          0          0          0          0      12159   queue.o
       190          0          0          0          0       2567   rf_impulse.o
       446          0         28          0          0       4783   sequence.o
       396          0         56          0          0       4557   simple_input.o
        64         26        236          0       1536        824   startup_stm32f10x_md.o
       690          0         16          4          0       2944   system_stm32f10x.o
      3694          0          9          0        260      21776   tasks.o
      1148         10          8          0         60       7648   timers.o

    ----------------------------------------------------------------------
     17138         96        572        112      13352     114432   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       242         12          3          3         16          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        22          0          0          0          0         80   abort.o
        16          0          0          0          0         68   aeabi_memset4.o
        48         34          0          0          0         76   defsig_abrt_inner.o
        14          0          0          0          0         80   defsig_abrt_outer.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        36          8          0          0          0         80   init_aeabi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
         2          0          0          0          0         68   use_no_semi.o
         4          0          0          0          0         36   abort_message.cpp.o
        40         32          0          0          0         52   cxa_virtual.cpp.o

    ----------------------------------------------------------------------
       930         90          0          0         96       1584   Library Totals
        16          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       870         58          0          0         96       1496   c_w.l
        44         32          0          0          0         88   libcppabi_w.l

    ----------------------------------------------------------------------
       930         90          0          0         96       1584   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     18068        186        572        112      13448     114824   Grand Totals
     18068        186        572        112      13448     114824   ELF Image Totals
     18068        186        572        112          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                18640 (  18.20kB)
    Total RW  Size (RW Data + ZI Data)             13560 (  13.24kB)
    Total ROM Size (Code + RO Data + RW Data)      18752 (  18.31kB)

==============================================================================

