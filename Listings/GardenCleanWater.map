Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    main.o(.ARM.exidx.text.vApplicationIdleHook) refers to main.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationTickHook) refers to main.o(.text.vApplicationTickHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to main.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to main.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init) refers to main.o(.bss.led) for led
    main.o(.text.__cxx_global_var_init) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for Coil::Coil(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init) refers to main.o(.text.__cxx_global_var_init) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.1) refers to main.o(.bss.button) for button
    main.o(.text.__cxx_global_var_init.1) refers to simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) for SimpleInput::SimpleInput(GPIO_TypeDef*, unsigned char)
    main.o(.ARM.exidx.text.__cxx_global_var_init.1) refers to main.o(.text.__cxx_global_var_init.1) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.2) refers to main.o(.bss.ledSwitch) for ledSwitch
    main.o(.text.__cxx_global_var_init.2) refers to main.o(.text._ZN12ProgrammCoilC2Ev) for ProgrammCoil::ProgrammCoil__sub_object()
    main.o(.ARM.exidx.text.__cxx_global_var_init.2) refers to main.o(.text.__cxx_global_var_init.2) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.3) refers to main.o(.bss.ledDelay) for ledDelay
    main.o(.text.__cxx_global_var_init.3) refers to main.o(.bss.ledSwitch) for ledSwitch
    main.o(.text.__cxx_global_var_init.3) refers to custom_timer.o(.text._ZN7DIDelayC2EP7ISwitcht) for DIDelay::DIDelay(ISwitch*, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.3) refers to main.o(.text.__cxx_global_var_init.3) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.4) refers to main.o(.bss.buttonDelay) for buttonDelay
    main.o(.text.__cxx_global_var_init.4) refers to main.o(.bss.button) for button
    main.o(.text.__cxx_global_var_init.4) refers to custom_timer.o(.text._ZN7DIDelayC2EP7ISwitcht) for DIDelay::DIDelay(ISwitch*, unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.4) refers to main.o(.text.__cxx_global_var_init.4) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.5) refers to main.o(.bss.delay) for delay
    main.o(.text.__cxx_global_var_init.5) refers to custom_timer.o(.text._ZN11CommonDelayC2Et) for CommonDelay::CommonDelay(unsigned short)
    main.o(.ARM.exidx.text.__cxx_global_var_init.5) refers to main.o(.text.__cxx_global_var_init.5) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.6) refers to main.o(.bss.adcMonitor) for adcMonitor
    main.o(.text.__cxx_global_var_init.6) refers to main.o(.bss.adcValues) for adcValues
    main.o(.text.__cxx_global_var_init.6) refers to analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVt) for AnalogMonitor::AnalogMonitor(unsigned char, unsigned short volatile*)
    main.o(.text.__cxx_global_var_init.6) refers to analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) for AnalogMonitor::~AnalogMonitor()
    main.o(.text.__cxx_global_var_init.6) refers to cxa_atexit.o(.text) for __cxa_atexit
    main.o(.ARM.exidx.text.__cxx_global_var_init.6) refers to main.o(.text.__cxx_global_var_init.6) for [Anonymous Symbol]
    main.o(.text.__cxx_global_var_init.7) refers to main.o(.bss.analogOut) for analogOut
    main.o(.text.__cxx_global_var_init.7) refers to analog_out.o(.text._ZN9AnalogOutC2EPVttjb) for AnalogOut::AnalogOut(unsigned short volatile*, unsigned short, unsigned int, bool)
    main.o(.ARM.exidx.text.__cxx_global_var_init.7) refers to main.o(.text.__cxx_global_var_init.7) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.bss.adcMonitor) for adcMonitor
    main.o(.text.main) refers to analog_monitor.o(.text._ZN13AnalogMonitor13setTresDelaysE9TRES_TYPEt) for AnalogMonitor::setTresDelays(TRES_TYPE, unsigned short)
    main.o(.text.main) refers to init.o(.text._Z7rccInitv) for rccInit()
    main.o(.text.main) refers to init.o(.text._Z8tickInitv) for tickInit()
    main.o(.text.main) refers to init.o(.text._Z10commonInitv) for commonInit()
    main.o(.text.main) refers to init.o(.text._Z7adcInitv) for adcInit()
    main.o(.text.main) refers to init.o(.text._Z7pwmInitv) for pwmInit()
    main.o(.text.main) refers to main.o(.bss.ledSwitch) for ledSwitch
    main.o(.text.main) refers to coil.o(.text._ZN12ProgrammCoilaSEb) for ProgrammCoil::operator=(bool)
    main.o(.text.main) refers to led_task.o(.text._Z7ledTaskPv) for ledTask(void*)
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.TIM2_IRQHandler) refers to main.o(.data.allTimersSize) for allTimersSize
    main.o(.text.TIM2_IRQHandler) refers to main.o(.data.updateObjects) for updateObjects
    main.o(.ARM.exidx.text.TIM2_IRQHandler) refers to main.o(.text.TIM2_IRQHandler) for [Anonymous Symbol]
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init) for __cxx_global_var_init
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.1) for __cxx_global_var_init.1
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.2) for __cxx_global_var_init.2
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.3) for __cxx_global_var_init.3
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.4) for __cxx_global_var_init.4
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.5) for __cxx_global_var_init.5
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.6) for __cxx_global_var_init.6
    main.o(.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text.__cxx_global_var_init.7) for __cxx_global_var_init.7
    main.o(.ARM.exidx.text._GLOBAL__sub_I_main.cpp) refers to main.o(.text._GLOBAL__sub_I_main.cpp) for [Anonymous Symbol]
    main.o(.data.updateObjects) refers to main.o(.bss.ledDelay) for ledDelay
    main.o(.data.updateObjects) refers to main.o(.bss.buttonDelay) for buttonDelay
    main.o(.data.updateObjects) refers to main.o(.bss.delay) for delay
    main.o(.data.updateObjects) refers to main.o(.bss.adcMonitor) for adcMonitor
    main.o(.data.updateObjects) refers to main.o(.bss.analogOut) for analogOut
    main.o(.init_array) refers to main.o(.text._GLOBAL__sub_I_main.cpp) for _GLOBAL__sub_I_main.cpp
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil8isActiveEv) refers to coil.o(.text._ZN12ProgrammCoil8isActiveEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil8setValueEb) refers to coil.o(.text._ZN12ProgrammCoil8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil3setEv) refers to coil.o(.text._ZN12ProgrammCoil3setEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil5resetEv) refers to coil.o(.text._ZN12ProgrammCoil5resetEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoil6toggleEv) refers to coil.o(.text._ZN12ProgrammCoil6toggleEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN12ProgrammCoilaSEb) refers to coil.o(.text._ZN12ProgrammCoilaSEb) for [Anonymous Symbol]
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char)
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to main.o(.text._ZN12ProgrammCoilC2Ev) for ProgrammCoil::ProgrammCoil__sub_object()
    coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.rodata._ZTV4Coil) for vtable for Coil
    coil.o(.ARM.exidx.text._ZN4CoilC2EP12GPIO_TypeDefh) refers to coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4Coil8isActiveEv) refers to coil.o(.text._ZN4Coil8isActiveEv) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4Coil8setValueEb) refers to coil.o(.text._ZN4Coil8setValueEb) for [Anonymous Symbol]
    coil.o(.ARM.exidx.text._ZN4CoilaSEb) refers to coil.o(.text._ZN4CoilaSEb) for [Anonymous Symbol]
    coil.o(.rodata._ZTV4Coil) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    coil.o(.rodata._ZTV4Coil) refers to coil.o(.text._ZN4Coil8setValueEb) for Coil::setValue(bool)
    coil.o(.rodata._ZTV12ProgrammCoil) refers to coil.o(.text._ZN12ProgrammCoil8isActiveEv) for ProgrammCoil::isActive()
    coil.o(.rodata._ZTV12ProgrammCoil) refers to coil.o(.text._ZN12ProgrammCoil8setValueEb) for ProgrammCoil::setValue(bool)
    common.o(.ARM.exidx.text._Z11getPositionj) refers to common.o(.text._Z11getPositionj) for [Anonymous Symbol]
    common.o(.ARM.exidx.text._Z10badTimeOutj) refers to common.o(.text._Z10badTimeOutj) for [Anonymous Symbol]
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char)
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to main.o(.text._ZN7ISwitchC2Ev) for ISwitch::ISwitch__sub_object()
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to simple_input.o(.rodata._ZTV11SimpleInput) for vtable for SimpleInput
    simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to simple_input.o(.text._Z11setRegisterIVjEvPT_jj) for void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    simple_input.o(.ARM.exidx.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) refers to simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    simple_input.o(.ARM.exidx.text._ZN11SimpleInput8isActiveEv) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for [Anonymous Symbol]
    simple_input.o(.rodata._ZTV11SimpleInput) refers to simple_input.o(.text._ZN11SimpleInput8isActiveEv) for SimpleInput::isActive()
    custom_timer.o(.text._ZN11CommonDelayC2Et) refers to custom_timer.o(.text._ZN8IUpdatedC2Ev) for IUpdated::IUpdated__sub_object()
    custom_timer.o(.text._ZN11CommonDelayC2Et) refers to custom_timer.o(.rodata._ZTV11CommonDelay) for vtable for CommonDelay
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelayC2Et) refers to custom_timer.o(.text._ZN11CommonDelayC2Et) for [Anonymous Symbol]
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay6updateEv) refers to custom_timer.o(.text._ZN11CommonDelay6updateEv) for [Anonymous Symbol]
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay9getPeriodEv) refers to custom_timer.o(.text._ZN11CommonDelay9getPeriodEv) for [Anonymous Symbol]
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay9setPeriodEt) refers to custom_timer.o(.text._ZN11CommonDelay9setPeriodEt) for [Anonymous Symbol]
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay14getCurrentTimeEv) refers to custom_timer.o(.text._ZN11CommonDelay14getCurrentTimeEv) for [Anonymous Symbol]
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay14setCurrentTimeEt) refers to custom_timer.o(.text._ZN11CommonDelay14setCurrentTimeEt) for [Anonymous Symbol]
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay5startEv) refers to custom_timer.o(.text._ZN11CommonDelay5startEv) for [Anonymous Symbol]
    custom_timer.o(.text._ZN11CommonDelay5pauseEv) refers to custom_timer.o(.text._ZN11CommonDelay8finishedEv) for CommonDelay::finished()
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay5pauseEv) refers to custom_timer.o(.text._ZN11CommonDelay5pauseEv) for [Anonymous Symbol]
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay8finishedEv) refers to custom_timer.o(.text._ZN11CommonDelay8finishedEv) for [Anonymous Symbol]
    custom_timer.o(.text._ZN11CommonDelay4stopEv) refers to custom_timer.o(.text._ZN11CommonDelay5resetEv) for CommonDelay::reset()
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay4stopEv) refers to custom_timer.o(.text._ZN11CommonDelay4stopEv) for [Anonymous Symbol]
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay5resetEv) refers to custom_timer.o(.text._ZN11CommonDelay5resetEv) for [Anonymous Symbol]
    custom_timer.o(.text._ZN11CommonDelay15prepareAndStartEv) refers to custom_timer.o(.text._ZN11CommonDelay4stopEv) for CommonDelay::stop()
    custom_timer.o(.text._ZN11CommonDelay15prepareAndStartEv) refers to custom_timer.o(.text._ZN11CommonDelay5startEv) for CommonDelay::start()
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay15prepareAndStartEv) refers to custom_timer.o(.text._ZN11CommonDelay15prepareAndStartEv) for [Anonymous Symbol]
    custom_timer.o(.text._ZN11CommonDelay8setStartEb) refers to custom_timer.o(.text._ZN11CommonDelay5startEv) for CommonDelay::start()
    custom_timer.o(.text._ZN11CommonDelay8setStartEb) refers to custom_timer.o(.text._ZN11CommonDelay4stopEv) for CommonDelay::stop()
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay8setStartEb) refers to custom_timer.o(.text._ZN11CommonDelay8setStartEb) for [Anonymous Symbol]
    custom_timer.o(.text._ZN11CommonDelayaSEb) refers to custom_timer.o(.text._ZN11CommonDelay8setStartEb) for CommonDelay::setStart(bool)
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelayaSEb) refers to custom_timer.o(.text._ZN11CommonDelayaSEb) for [Anonymous Symbol]
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay7startedEv) refers to custom_timer.o(.text._ZN11CommonDelay7startedEv) for [Anonymous Symbol]
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay11notFinishedEv) refers to custom_timer.o(.text._ZN11CommonDelay11notFinishedEv) for [Anonymous Symbol]
    custom_timer.o(.text._ZN11CommonDelay15finishedImpulseEv) refers to custom_timer.o(.text._ZN11CommonDelay8finishedEv) for CommonDelay::finished()
    custom_timer.o(.ARM.exidx.text._ZN11CommonDelay15finishedImpulseEv) refers to custom_timer.o(.text._ZN11CommonDelay15finishedImpulseEv) for [Anonymous Symbol]
    custom_timer.o(.text._ZN7DIDelayC2EP7ISwitcht) refers to custom_timer.o(.text._ZN11CommonDelayC2Et) for CommonDelay::CommonDelay__sub_object(unsigned short)
    custom_timer.o(.text._ZN7DIDelayC2EP7ISwitcht) refers to custom_timer.o(.rodata._ZTV7DIDelay) for vtable for DIDelay
    custom_timer.o(.ARM.exidx.text._ZN7DIDelayC2EP7ISwitcht) refers to custom_timer.o(.text._ZN7DIDelayC2EP7ISwitcht) for [Anonymous Symbol]
    custom_timer.o(.text._ZN7DIDelay7startedEv) refers to custom_timer.o(.text._ZN11CommonDelay7startedEv) for CommonDelay::started()
    custom_timer.o(.ARM.exidx.text._ZN7DIDelay7startedEv) refers to custom_timer.o(.text._ZN7DIDelay7startedEv) for [Anonymous Symbol]
    custom_timer.o(.rodata._ZTV11CommonDelay) refers to custom_timer.o(.text._ZN11CommonDelay6updateEv) for CommonDelay::update()
    custom_timer.o(.rodata._ZTV11CommonDelay) refers to custom_timer.o(.text._ZN11CommonDelay7startedEv) for CommonDelay::started()
    custom_timer.o(.rodata._ZTV7DIDelay) refers to custom_timer.o(.text._ZN11CommonDelay6updateEv) for CommonDelay::update()
    custom_timer.o(.rodata._ZTV7DIDelay) refers to custom_timer.o(.text._ZN7DIDelay7startedEv) for DIDelay::started()
    gpio_common.o(.ARM.exidx.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) refers to gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVt) refers to custom_timer.o(.text._ZN8IUpdatedC2Ev) for IUpdated::IUpdated__sub_object()
    analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVt) refers to analog_monitor.o(.rodata._ZTV13AnalogMonitor) for vtable for AnalogMonitor
    analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVt) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVt) refers to custom_timer.o(.text._ZN11CommonDelayC2Et) for CommonDelay::CommonDelay(unsigned short)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorC2EhPVt) refers to analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVt) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVtff) refers to analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVt) for AnalogMonitor::AnalogMonitor__sub_object(unsigned char, unsigned short volatile*)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorC2EhPVtff) refers to analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVtff) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) refers to analog_monitor.o(.rodata._ZTV13AnalogMonitor) for vtable for AnalogMonitor
    analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) refers to new.cpp.o(.text._ZdlPvj) for operator delete(void*, unsigned int)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorD2Ev) refers to analog_monitor.o(.text._ZN13AnalogMonitorD2Ev) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor6updateEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor8getRangeIfEET_PKS1_) for float AnalogMonitor::getRange<float>(float const*)
    analog_monitor.o(.text._ZN13AnalogMonitor6updateEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor8getRangeIVtEET_PKS2_) for unsigned short volatile AnalogMonitor::getRange<unsigned short volatile>(unsigned short volatile const*)
    analog_monitor.o(.text._ZN13AnalogMonitor6updateEv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    analog_monitor.o(.text._ZN13AnalogMonitor6updateEv) refers to fdiv.o(x$fpl$fdiv) for __aeabi_fdiv
    analog_monitor.o(.text._ZN13AnalogMonitor6updateEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    analog_monitor.o(.text._ZN13AnalogMonitor6updateEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    analog_monitor.o(.text._ZN13AnalogMonitor6updateEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmple
    analog_monitor.o(.text._ZN13AnalogMonitor6updateEv) refers to custom_timer.o(.text._ZN11CommonDelayaSEb) for CommonDelay::operator=(bool)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor6updateEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor6updateEv) for [Anonymous Symbol]
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor8getValueEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor8getValueEv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor14setValueLimitsEPKf) refers to analog_monitor.o(.text._ZN13AnalogMonitor10copyArraysIfEEvPKT_PS1_h) for void AnalogMonitor::copyArrays<float>(float const*, float*, unsigned char)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor14setValueLimitsEPKf) refers to analog_monitor.o(.text._ZN13AnalogMonitor14setValueLimitsEPKf) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor12setTresholdsEPKf) refers to analog_monitor.o(.text._ZN13AnalogMonitor10copyArraysIfEEvPKT_PS1_h) for void AnalogMonitor::copyArrays<float>(float const*, float*, unsigned char)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor12setTresholdsEPKf) refers to analog_monitor.o(.text._ZN13AnalogMonitor12setTresholdsEPKf) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor13setTresDelaysE9TRES_TYPEt) refers to custom_timer.o(.text._ZN11CommonDelay9setPeriodEt) for CommonDelay::setPeriod(unsigned short)
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor13setTresDelaysE9TRES_TYPEt) refers to analog_monitor.o(.text._ZN13AnalogMonitor13setTresDelaysE9TRES_TYPEt) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor11isHighAlarmEv) refers to custom_timer.o(.text._ZN11CommonDelay8finishedEv) for CommonDelay::finished()
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor11isHighAlarmEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor11isHighAlarmEv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor10isHighWarnEv) refers to custom_timer.o(.text._ZN11CommonDelay8finishedEv) for CommonDelay::finished()
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor10isHighWarnEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor10isHighWarnEv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor9isLowWarnEv) refers to custom_timer.o(.text._ZN11CommonDelay8finishedEv) for CommonDelay::finished()
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor9isLowWarnEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor9isLowWarnEv) for [Anonymous Symbol]
    analog_monitor.o(.text._ZN13AnalogMonitor10isLowAlarmEv) refers to custom_timer.o(.text._ZN11CommonDelay8finishedEv) for CommonDelay::finished()
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor10isLowAlarmEv) refers to analog_monitor.o(.text._ZN13AnalogMonitor10isLowAlarmEv) for [Anonymous Symbol]
    analog_monitor.o(.rodata._ZTV13AnalogMonitor) refers to analog_monitor.o(.text._ZN13AnalogMonitor6updateEv) for AnalogMonitor::update()
    analog_out.o(.text._ZN9AnalogOutC2EPVttjb) refers to custom_timer.o(.text._ZN8IUpdatedC2Ev) for IUpdated::IUpdated__sub_object()
    analog_out.o(.text._ZN9AnalogOutC2EPVttjb) refers to analog_out.o(.rodata._ZTV9AnalogOut) for vtable for AnalogOut
    analog_out.o(.text._ZN9AnalogOutC2EPVttjb) refers to analog_out.o(.text._ZN9AnalogOut16setFullRangeTimeEj) for AnalogOut::setFullRangeTime(unsigned int)
    analog_out.o(.text._ZN9AnalogOutC2EPVttjb) refers to analog_out.o(.text._ZN9AnalogOut10setReverseEb) for AnalogOut::setReverse(bool)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOutC2EPVttjb) refers to analog_out.o(.text._ZN9AnalogOutC2EPVttjb) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut16setFullRangeTimeEj) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    analog_out.o(.text._ZN9AnalogOut16setFullRangeTimeEj) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    analog_out.o(.text._ZN9AnalogOut16setFullRangeTimeEj) refers to d2f.o(x$fpl$d2f) for __aeabi_d2f
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut16setFullRangeTimeEj) refers to analog_out.o(.text._ZN9AnalogOut16setFullRangeTimeEj) for [Anonymous Symbol]
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut10setReverseEb) refers to analog_out.o(.text._ZN9AnalogOut10setReverseEb) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut6updateEv) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpeq
    analog_out.o(.text._ZN9AnalogOut6updateEv) refers to analog_out.o(.text._ZN9AnalogOut14updateRawValueEv) for AnalogOut::updateRawValue()
    analog_out.o(.text._ZN9AnalogOut6updateEv) refers to faddsub_clz.o(x$fpl$fadd) for __aeabi_fadd
    analog_out.o(.text._ZN9AnalogOut6updateEv) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut6updateEv) refers to analog_out.o(.text._ZN9AnalogOut6updateEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut14updateRawValueEv) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    analog_out.o(.text._ZN9AnalogOut14updateRawValueEv) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    analog_out.o(.text._ZN9AnalogOut14updateRawValueEv) refers to f2d.o(x$fpl$f2d) for __aeabi_f2d
    analog_out.o(.text._ZN9AnalogOut14updateRawValueEv) refers to ddiv.o(x$fpl$ddiv) for __aeabi_ddiv
    analog_out.o(.text._ZN9AnalogOut14updateRawValueEv) refers to dfix.o(x$fpl$dfix) for __aeabi_d2iz
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut14updateRawValueEv) refers to analog_out.o(.text._ZN9AnalogOut14updateRawValueEv) for [Anonymous Symbol]
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut6getOutEv) refers to analog_out.o(.text._ZN9AnalogOut6getOutEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOut5setSPEf) refers to analog_out.o(.text._Z5limitIfET_S0_S0_S0_) for float limit<float>(float, float, float)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut5setSPEf) refers to analog_out.o(.text._ZN9AnalogOut5setSPEf) for [Anonymous Symbol]
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut9isReverseEv) refers to analog_out.o(.text._ZN9AnalogOut9isReverseEv) for [Anonymous Symbol]
    analog_out.o(.ARM.exidx.text._ZN9AnalogOut16getFullRangeTimeEv) refers to analog_out.o(.text._ZN9AnalogOut16getFullRangeTimeEv) for [Anonymous Symbol]
    analog_out.o(.text._ZN9AnalogOutaSEf) refers to analog_out.o(.text._ZN9AnalogOut5setSPEf) for AnalogOut::setSP(float)
    analog_out.o(.ARM.exidx.text._ZN9AnalogOutaSEf) refers to analog_out.o(.text._ZN9AnalogOutaSEf) for [Anonymous Symbol]
    analog_out.o(.rodata._ZTV9AnalogOut) refers to analog_out.o(.text._ZN9AnalogOut6updateEv) for AnalogOut::update()
    init.o(.text._Z10commonInitv) refers to init.o(.text._ZL26__NVIC_SetPriorityGroupingj) for __NVIC_SetPriorityGrouping(unsigned int)
    init.o(.text._Z10commonInitv) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    init.o(.ARM.exidx.text._Z10commonInitv) refers to init.o(.text._Z10commonInitv) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL26__NVIC_SetPriorityGroupingj) refers to init.o(.text._ZL26__NVIC_SetPriorityGroupingj) for [Anonymous Symbol]
    init.o(.text._Z7rccInitv) refers to simple_input.o(.text._Z11setRegisterIVjEvPT_jj) for void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    init.o(.ARM.exidx.text._Z7rccInitv) refers to init.o(.text._Z7rccInitv) for [Anonymous Symbol]
    init.o(.text._Z8tickInitv) refers to init.o(.text._ZL16__NVIC_EnableIRQ4IRQn) for __NVIC_EnableIRQ(IRQn)
    init.o(.text._Z8tickInitv) refers to init.o(.text._ZL18__NVIC_SetPriority4IRQnj) for __NVIC_SetPriority(IRQn, unsigned int)
    init.o(.ARM.exidx.text._Z8tickInitv) refers to init.o(.text._Z8tickInitv) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL16__NVIC_EnableIRQ4IRQn) refers to init.o(.text._ZL16__NVIC_EnableIRQ4IRQn) for [Anonymous Symbol]
    init.o(.ARM.exidx.text._ZL18__NVIC_SetPriority4IRQnj) refers to init.o(.text._ZL18__NVIC_SetPriority4IRQnj) for [Anonymous Symbol]
    init.o(.text._Z7adcInitv) refers to init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    init.o(.text._Z7adcInitv) refers to main.o(.bss.delay) for delay
    init.o(.text._Z7adcInitv) refers to custom_timer.o(.text._ZN11CommonDelay15prepareAndStartEv) for CommonDelay::prepareAndStart()
    init.o(.text._Z7adcInitv) refers to custom_timer.o(.text._ZN11CommonDelay11notFinishedEv) for CommonDelay::notFinished()
    init.o(.text._Z7adcInitv) refers to main.o(.bss.adcValues) for adcValues
    init.o(.ARM.exidx.text._Z7adcInitv) refers to init.o(.text._Z7adcInitv) for [Anonymous Symbol]
    init.o(.text._Z7pwmInitv) refers to init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int)
    init.o(.text._Z7pwmInitv) refers to init.o(.text._Z17setBitsInRegisterIVtEvPT_jj) for void setBitsInRegister<unsigned short volatile>(unsigned short volatile*, unsigned int, unsigned int)
    init.o(.ARM.exidx.text._Z7pwmInitv) refers to init.o(.text._Z7pwmInitv) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer.o(.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer.o(.text.prvInitialiseNewStreamBuffer) refers to rt_memclr.o(.text) for __aeabi_memclr
    stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.vStreamBufferDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    stream_buffer.o(.text.vStreamBufferDelete) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReset) refers to stream_buffer.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer.o(.text.xStreamBufferReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferSendFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for xTaskGenericNotifyStateClear
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer.o(.text.xStreamBufferReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    stream_buffer.o(.text.xStreamBufferReceive) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer.o(.text.xStreamBufferReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer.o(.text.prvReadBytesFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer.o(.text.xStreamBufferReceiveFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer.o(.text.prvWriteBytesToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to main.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to main.o(.text.vApplicationIdleHook) for vApplicationIdleHook
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to main.o(.text.vApplicationTickHook) for vApplicationTickHook
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    led_task.o(.text._Z7ledTaskPv) refers to main.o(.bss.adcMonitor) for adcMonitor
    led_task.o(.text._Z7ledTaskPv) refers to analog_monitor.o(.text._ZN13AnalogMonitor11isHighAlarmEv) for AnalogMonitor::isHighAlarm()
    led_task.o(.text._Z7ledTaskPv) refers to analog_monitor.o(.text._ZN13AnalogMonitor10isHighWarnEv) for AnalogMonitor::isHighWarn()
    led_task.o(.text._Z7ledTaskPv) refers to analog_monitor.o(.text._ZN13AnalogMonitor9isLowWarnEv) for AnalogMonitor::isLowWarn()
    led_task.o(.text._Z7ledTaskPv) refers to analog_monitor.o(.text._ZN13AnalogMonitor10isLowAlarmEv) for AnalogMonitor::isLowAlarm()
    led_task.o(.text._Z7ledTaskPv) refers to analog_monitor.o(.text._ZN13AnalogMonitor8getValueEv) for AnalogMonitor::getValue()
    led_task.o(.text._Z7ledTaskPv) refers to main.o(.bss.analogOut) for analogOut
    led_task.o(.text._Z7ledTaskPv) refers to analog_out.o(.text._ZN9AnalogOutaSEf) for AnalogOut::operator=(float)
    led_task.o(.text._Z7ledTaskPv) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    led_task.o(.text._Z7ledTaskPv) refers to main.o(.bss.ledDelay) for ledDelay
    led_task.o(.text._Z7ledTaskPv) refers to custom_timer.o(.text._ZN11CommonDelay15finishedImpulseEv) for CommonDelay::finishedImpulse()
    led_task.o(.text._Z7ledTaskPv) refers to main.o(.bss.led) for led
    led_task.o(.text._Z7ledTaskPv) refers to coil.o(.text._ZN4Coil8isActiveEv) for Coil::isActive()
    led_task.o(.text._Z7ledTaskPv) refers to coil.o(.text._ZN4CoilaSEb) for Coil::operator=(bool)
    led_task.o(.text._Z7ledTaskPv) refers to custom_timer.o(.text._ZN11CommonDelay5resetEv) for CommonDelay::reset()
    led_task.o(.text._Z7ledTaskPv) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    led_task.o(.text._Z7ledTaskPv) refers to main.o(.bss.buttonDelay) for buttonDelay
    led_task.o(.text._Z7ledTaskPv) refers to coil.o(.text._ZN12ProgrammCoil6toggleEv) for ProgrammCoil::toggle()
    led_task.o(.text._Z7ledTaskPv) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    led_task.o(.ARM.exidx.text._Z7ledTaskPv) refers to led_task.o(.text._Z7ledTaskPv) for [Anonymous Symbol]
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(RESET) refers to main.o(.text.TIM2_IRQHandler) for TIM2_IRQHandler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text.SystemInit) refers to system_stm32f10x.o(.text.SetSysClock) for SetSysClock
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(.ARM.exidx.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClock) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72) refers to system_stm32f10x.o(.text.SetSysClockTo72) for [Anonymous Symbol]
    atexit_cxa.o(.text) refers to cxa_atexit.o(.text) for __cxa_atexit
    atexit_cxa.o(.ARM.exidx) refers to atexit_cxa.o(.text) for .text
    cxa_atexit.o(.text) refers to aeabi_atexit.o(.text) for __aeabi_atexit
    cxa_atexit.o(.ARM.exidx) refers to cxa_atexit.o(.text) for .text
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    init_aeabi.o(.emb_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.init_array) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.dummy_text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_cpp_2
    init_aeabi.o(.ARM.exidx) refers to init_aeabi.o(.text) for .text
    d2f.o(x$fpl$d2f) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    d2f.o(x$fpl$d2f) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    d2f.o(x$fpl$d2f) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    ddiv.o(x$fpl$drdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$drdiv) refers to ddiv.o(x$fpl$ddiv) for ddiv_entry
    ddiv.o(x$fpl$ddiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(x$fpl$ddiv) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    ddiv.o(x$fpl$ddiv) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfix) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfixr) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(x$fpl$f2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    f2d.o(x$fpl$f2d) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    f2d.o(x$fpl$f2d) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    faddsub_clz.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$fadd) refers to faddsub_clz.o(x$fpl$fsub) for _fsub1
    faddsub_clz.o(x$fpl$fadd) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    faddsub_clz.o(x$fpl$fadd) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    faddsub_clz.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$frsb) refers to faddsub_clz.o(x$fpl$fadd) for _fadd1
    faddsub_clz.o(x$fpl$frsb) refers to faddsub_clz.o(x$fpl$fsub) for _fsub1
    faddsub_clz.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub_clz.o(x$fpl$fsub) refers to faddsub_clz.o(x$fpl$fadd) for _fadd1
    faddsub_clz.o(x$fpl$fsub) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fcmp.o(x$fpl$fcmp) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(x$fpl$fcmp) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fcmp.o(x$fpl$fcmp) refers to fgeqf.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(x$fpl$fcmp) refers to fleqf.o(x$fpl$fleqf) for _fcmple
    fdiv.o(x$fpl$frdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$frdiv) refers to fdiv.o(x$fpl$fdiv) for _fdiv1
    fdiv.o(x$fpl$fdiv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(x$fpl$fdiv) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fdiv.o(x$fpl$fdiv) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fflt_clz.o(x$fpl$ffltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$fflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$ffltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers to fretinf.o(x$fpl$fretinf) for __fpl_fretinf
    fmul.o(x$fpl$fmul) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    new.cpp.o(.text._ZSt17__throw_bad_allocv) refers to abort.o(.text) for abort
    new.cpp.o(.ARM.exidx.text._ZSt17__throw_bad_allocv) refers to new.cpp.o(.text._ZSt17__throw_bad_allocv) for [Anonymous Symbol]
    new.cpp.o(.text._Znwj) refers to h1_alloc.o(.text) for malloc
    new.cpp.o(.text._Znwj) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for std::get_new_handler()
    new.cpp.o(.ARM.exidx.text._Znwj) refers to new.cpp.o(.text._Znwj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjRKSt9nothrow_t) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    new.cpp.o(.ARM.exidx.text._ZnwjRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._Znaj) refers to new.cpp.o(.text._Znwj) for operator new(unsigned int)
    new.cpp.o(.ARM.exidx.text._Znaj) refers to new.cpp.o(.text._Znaj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajRKSt9nothrow_t) refers to new.cpp.o(.text._Znaj) for operator new[](unsigned int)
    new.cpp.o(.ARM.exidx.text._ZnajRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPv) refers to h1_free.o(.text) for free
    new.cpp.o(.ARM.exidx.text._ZdlPv) refers to new.cpp.o(.text._ZdlPv) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdlPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvj) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdlPvj) refers to new.cpp.o(.text._ZdlPvj) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPv) refers to new.cpp.o(.text._ZdlPv) for operator delete(void*)
    new.cpp.o(.ARM.exidx.text._ZdaPv) refers to new.cpp.o(.text._ZdaPv) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    new.cpp.o(.ARM.exidx.text._ZdaPvRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvj) refers to new.cpp.o(.text._ZdaPv) for operator delete[](void*)
    new.cpp.o(.ARM.exidx.text._ZdaPvj) refers to new.cpp.o(.text._ZdaPvj) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjSt11align_val_t) refers to h1_memalign.o(.text) for posix_memalign
    new.cpp.o(.text._ZnwjSt11align_val_t) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for std::get_new_handler()
    new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for operator new(unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajSt11align_val_t) refers to new.cpp.o(.text._ZnwjSt11align_val_t) for operator new(unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_t) refers to new.cpp.o(.text._ZnajSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajSt11align_val_t) for operator new[](unsigned int, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvSt11align_val_t) refers to h1_free.o(.text) for free
    new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdlPvjSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdlPvjSt11align_val_t) refers to new.cpp.o(.text._ZdlPvjSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvSt11align_val_t) refers to new.cpp.o(.text._ZdlPvSt11align_val_t) for operator delete(void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for operator delete[](void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_tRKSt9nothrow_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t) for [Anonymous Symbol]
    new.cpp.o(.text._ZdaPvjSt11align_val_t) refers to new.cpp.o(.text._ZdaPvSt11align_val_t) for operator delete[](void*, std::align_val_t)
    new.cpp.o(.ARM.exidx.text._ZdaPvjSt11align_val_t) refers to new.cpp.o(.text._ZdaPvjSt11align_val_t) for [Anonymous Symbol]
    cxa_virtual.cpp.o(.text.__cxa_pure_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for [Anonymous Symbol]
    cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual) refers to cxa_virtual.cpp.o(.text.__cxa_deleted_virtual) for [Anonymous Symbol]
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_memalign.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_free_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign_threads.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_memalign_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_memalign_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to mutex_dummy.o(.text) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    abort.o(.text) refers to defsig_abrt_outer.o(.text) for __rt_SIGABRT
    abort.o(.text) refers (Weak) to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    abort.o(.text) refers to sys_exit.o(.text) for _sys_exit
    atexit_aeabi.o(.text) refers to aeabi_atexit.o(.text) for __aeabi_atexit
    atexit_aeabi.o(.ARM.exidx) refers to atexit_aeabi.o(.text) for .text
    aeabi_atexit.o(.text) refers (Special) to cxa_finalize.o(.text) for __cxa_finalize
    aeabi_atexit.o(.text) refers to h1_alloc.o(.text) for malloc
    aeabi_atexit.o(.text) refers to rt_ddtor_pointer_addr_intlibspace.o(.text) for __rt_ddtor_pointer_addr
    aeabi_atexit.o(.ARM.exidx) refers (Special) to cxa_finalize.o(.text) for __cxa_finalize
    aeabi_atexit.o(.ARM.exidx) refers to aeabi_atexit.o(.text) for .text
    libinit2.o(.ARM.Collect$$libinit$$00000007) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000033) refers (Weak) to init_aeabi.o(.text) for __cpp_initialize__aeabi_
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    feqf.o(x$fpl$feqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fgeqf.o(x$fpl$fgeqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fgeqf.o(x$fpl$fgeqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fgeqf.o(x$fpl$fgeqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fleqf.o(x$fpl$fleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fleqf.o(x$fpl$fleqf) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fleqf.o(x$fpl$fleqf) refers to fcmpi.o(x$fpl$fcmpinf) for __fpl_fcmp_Inf
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fretinf.o(x$fpl$fretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt14get_unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt12__unexpectedPFvvE) refers to cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt10unexpectedv) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_handlers.cpp.o(.text._ZSt10unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE) for std::__unexpected(void (*)())
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt10unexpectedv) refers to cxa_handlers.cpp.o(.text._ZSt10unexpectedv) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt13get_terminatev) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt13get_terminatev) refers to cxa_handlers.cpp.o(.text._ZSt13get_terminatev) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) refers to abort_message.cpp.o(.text.abort_message) for abort_message
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt11__terminatePFvvE) refers to cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt9terminatev) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_handlers.cpp.o(.text._ZSt9terminatev) refers to cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE) for std::__terminate(void (*)())
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt9terminatev) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for [Anonymous Symbol]
    cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) refers to cxa_default_handlers.cpp.o(.bss.__cxa_new_handler) for __cxa_new_handler
    cxa_handlers.cpp.o(.ARM.exidx.text._ZSt15get_new_handlerv) refers to cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv) for [Anonymous Symbol]
    abort_message.cpp.o(.text.abort_message) refers to abort.o(.text) for abort
    abort_message.cpp.o(.ARM.exidx.text.abort_message) refers to abort_message.cpp.o(.text.abort_message) for [Anonymous Symbol]
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_ddtor_pointer_addr.o(.text) refers to rt_ddtor_pointer_addr.o(.bss) for __rt_ddtor_pointer_addr_data
    rt_ddtor_pointer_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000007) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc1.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init.o(.text) for __Heap_Initialize
    h1_init_threads.o(.text) refers to mutex_dummy.o(.text) for _mutex_initialize
    cxa_finalize.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) for __rt_lib_shutdown_cpp_2
    cxa_finalize.o(.text) refers to rt_ddtor_pointer_addr_intlibspace.o(.text) for __rt_ddtor_pointer_addr
    cxa_finalize.o(.text) refers to h1_free.o(.text) for free
    cxa_finalize.o(.ARM.exidx) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) for __rt_lib_shutdown_cpp_2
    cxa_finalize.o(.ARM.exidx) refers to cxa_finalize.o(.text) for .text
    defsig_abrt_outer.o(.text) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig_abrt_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_abrt_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    fcmpi.o(x$fpl$fcmpinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) refers to cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) for __cxa_unexpected_handler
    cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt14set_unexpectedPFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) refers to cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) for __cxa_terminate_handler
    cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) refers to abort.o(.text) for abort
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt13set_terminatePFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE) refers to cxa_default_handlers.cpp.o(.bss.__cxa_new_handler) for __cxa_new_handler
    cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt15set_new_handlerPFvvE) refers to cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE) for [Anonymous Symbol]
    cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler) refers to abort.o(.text) for abort
    cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler) refers to cxa_handlers.cpp.o(.text._ZSt9terminatev) for std::terminate()
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free.o(.text) for free
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libshutdown2.o(.ARM.Collect$$libshutdown$$00000001) refers (Weak) to cxa_finalize.o(.text) for __cxa_finalize
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final.o(.text) for __Heap_Finalize
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_abrt_inner.o(.text) for __rt_SIGABRT_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    main.o(.text._ZN12ProgrammCoilC2Ev) refers to main.o(.text._ZN7ISwitchC2Ev) for ISwitch::ISwitch__sub_object()
    main.o(.text._ZN12ProgrammCoilC2Ev) refers to coil.o(.rodata._ZTV12ProgrammCoil) for vtable for ProgrammCoil
    main.o(.ARM.exidx.text._ZN12ProgrammCoilC2Ev) refers to main.o(.text._ZN12ProgrammCoilC2Ev) for [Anonymous Symbol]
    main.o(.text._ZN7ISwitchC2Ev) refers to main.o(.rodata._ZTV7ISwitch) for vtable for ISwitch
    main.o(.ARM.exidx.text._ZN7ISwitchC2Ev) refers to main.o(.text._ZN7ISwitchC2Ev) for [Anonymous Symbol]
    main.o(.rodata._ZTV7ISwitch) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    simple_input.o(.ARM.exidx.text._Z11setRegisterIVjEvPT_jj) refers to simple_input.o(.text._Z11setRegisterIVjEvPT_jj) for [Anonymous Symbol]
    custom_timer.o(.text._ZN8IUpdatedC2Ev) refers to custom_timer.o(.rodata._ZTV8IUpdated) for vtable for IUpdated
    custom_timer.o(.ARM.exidx.text._ZN8IUpdatedC2Ev) refers to custom_timer.o(.text._ZN8IUpdatedC2Ev) for [Anonymous Symbol]
    custom_timer.o(.rodata._ZTV8IUpdated) refers to cxa_virtual.cpp.o(.text.__cxa_pure_virtual) for __cxa_pure_virtual
    analog_monitor.o(.text._ZN13AnalogMonitor8getRangeIfEET_PKS1_) refers to faddsub_clz.o(x$fpl$fsub) for __aeabi_fsub
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor8getRangeIfEET_PKS1_) refers to analog_monitor.o(.text._ZN13AnalogMonitor8getRangeIfEET_PKS1_) for [Anonymous Symbol]
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor8getRangeIVtEET_PKS2_) refers to analog_monitor.o(.text._ZN13AnalogMonitor8getRangeIVtEET_PKS2_) for [Anonymous Symbol]
    analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor10copyArraysIfEEvPKT_PS1_h) refers to analog_monitor.o(.text._ZN13AnalogMonitor10copyArraysIfEEvPKT_PS1_h) for [Anonymous Symbol]
    analog_out.o(.text._Z5limitIfET_S0_S0_S0_) refers to fcmp.o(x$fpl$fcmp) for __aeabi_fcmpge
    analog_out.o(.ARM.exidx.text._Z5limitIfET_S0_S0_S0_) refers to analog_out.o(.text._Z5limitIfET_S0_S0_S0_) for [Anonymous Symbol]
    init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) refers to common.o(.text._Z11getPositionj) for getPosition(unsigned int)
    init.o(.ARM.exidx.text._Z17setBitsInRegisterIVjEvPT_jj) refers to init.o(.text._Z17setBitsInRegisterIVjEvPT_jj) for [Anonymous Symbol]
    init.o(.text._Z17setBitsInRegisterIVtEvPT_jj) refers to common.o(.text._Z11getPositionj) for getPosition(unsigned int)
    init.o(.ARM.exidx.text._Z17setBitsInRegisterIVtEvPT_jj) refers to init.o(.text._Z17setBitsInRegisterIVtEvPT_jj) for [Anonymous Symbol]


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationTickHook), (8 bytes).
    Removing main.o(.text.vApplicationMallocFailedHook), (4 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.1), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.2), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.3), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.4), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.5), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.6), (8 bytes).
    Removing main.o(.ARM.exidx.text.__cxx_global_var_init.7), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.TIM2_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text._GLOBAL__sub_I_main.cpp), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing coil.o(.text), (0 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil8setValueEb), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil3setEv), (20 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil3setEv), (8 bytes).
    Removing coil.o(.text._ZN12ProgrammCoil5resetEv), (20 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil5resetEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoil6toggleEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN12ProgrammCoilaSEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4CoilC2EP12GPIO_TypeDefh), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4Coil8isActiveEv), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4Coil8setValueEb), (8 bytes).
    Removing coil.o(.ARM.exidx.text._ZN4CoilaSEb), (8 bytes).
    Removing common.o(.text), (0 bytes).
    Removing common.o(.ARM.exidx.text._Z11getPositionj), (8 bytes).
    Removing common.o(.text._Z10badTimeOutj), (34 bytes).
    Removing common.o(.ARM.exidx.text._Z10badTimeOutj), (8 bytes).
    Removing simple_input.o(.text), (0 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInputC2EP12GPIO_TypeDefh), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._ZN11SimpleInput8isActiveEv), (8 bytes).
    Removing custom_timer.o(.text), (0 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelayC2Et), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay6updateEv), (8 bytes).
    Removing custom_timer.o(.text._ZN11CommonDelay9getPeriodEv), (12 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay9getPeriodEv), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay9setPeriodEt), (8 bytes).
    Removing custom_timer.o(.text._ZN11CommonDelay14getCurrentTimeEv), (12 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay14getCurrentTimeEv), (8 bytes).
    Removing custom_timer.o(.text._ZN11CommonDelay14setCurrentTimeEt), (20 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay14setCurrentTimeEt), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay5startEv), (8 bytes).
    Removing custom_timer.o(.text._ZN11CommonDelay5pauseEv), (32 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay5pauseEv), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay8finishedEv), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay4stopEv), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay5resetEv), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay15prepareAndStartEv), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay8setStartEb), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelayaSEb), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay7startedEv), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay11notFinishedEv), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN11CommonDelay15finishedImpulseEv), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN7DIDelayC2EP7ISwitcht), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN7DIDelay7startedEv), (8 bytes).
    Removing gpio_common.o(.text), (0 bytes).
    Removing gpio_common.o(.ARM.exidx.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh), (8 bytes).
    Removing analog_monitor.o(.text), (0 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorC2EhPVt), (8 bytes).
    Removing analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVtff), (46 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorC2EhPVtff), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitorD2Ev), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor6updateEv), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor8getValueEv), (8 bytes).
    Removing analog_monitor.o(.text._ZN13AnalogMonitor14setValueLimitsEPKf), (26 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor14setValueLimitsEPKf), (8 bytes).
    Removing analog_monitor.o(.text._ZN13AnalogMonitor12setTresholdsEPKf), (26 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor12setTresholdsEPKf), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor13setTresDelaysE9TRES_TYPEt), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor11isHighAlarmEv), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor10isHighWarnEv), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor9isLowWarnEv), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor10isLowAlarmEv), (8 bytes).
    Removing analog_out.o(.text), (0 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOutC2EPVttjb), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut16setFullRangeTimeEj), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut10setReverseEb), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut6updateEv), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut14updateRawValueEv), (8 bytes).
    Removing analog_out.o(.text._ZN9AnalogOut6getOutEv), (12 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut6getOutEv), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut5setSPEf), (8 bytes).
    Removing analog_out.o(.text._ZN9AnalogOut9isReverseEv), (16 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut9isReverseEv), (8 bytes).
    Removing analog_out.o(.text._ZN9AnalogOut16getFullRangeTimeEv), (12 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOut16getFullRangeTimeEv), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._ZN9AnalogOutaSEf), (8 bytes).
    Removing init.o(.text), (0 bytes).
    Removing init.o(.ARM.exidx.text._Z10commonInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL26__NVIC_SetPriorityGroupingj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z7rccInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z8tickInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL16__NVIC_EnableIRQ4IRQn), (8 bytes).
    Removing init.o(.ARM.exidx.text._ZL18__NVIC_SetPriority4IRQnj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z7adcInitv), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z7pwmInitv), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing croutine.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (246 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (224 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (300 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (362 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (414 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.prvCopyDataToQueue), (204 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (46 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (210 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (194 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (38 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (342 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (198 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (20 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing stream_buffer.o(.text), (0 bytes).
    Removing stream_buffer.o(.text.xStreamBufferGenericCreate), (140 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer.o(.text.prvInitialiseNewStreamBuffer), (64 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferDelete), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReset), (100 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSetTriggerLevel), (58 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSpacesAvailable), (88 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferBytesAvailable), (24 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer.o(.text.prvBytesInBuffer), (56 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSend), (322 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteMessageToBuffer), (128 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendFromISR), (186 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceive), (242 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer.o(.text.prvReadMessageFromBuffer), (134 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferNextMessageLengthBytes), (74 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer.o(.text.prvReadBytesFromBuffer), (136 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveFromISR), (172 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsEmpty), (44 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferIsFull), (64 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferSendCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.xStreamBufferReceiveCompletedFromISR), (106 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer.o(.text.uxStreamBufferGetStreamBufferNumber), (12 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.vStreamBufferSetStreamBufferNumber), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer.o(.text.ucStreamBufferGetStreamBufferType), (16 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer.o(.text.prvWriteBytesToBuffer), (138 bytes).
    Removing stream_buffer.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (244 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (454 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (342 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (236 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (292 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetSchedulerState), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (348 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (240 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (312 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (430 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (540 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (406 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (148 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (16 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing led_task.o(.text), (0 bytes).
    Removing led_task.o(.ARM.exidx.text._Z7ledTaskPv), (8 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72), (8 bytes).
    Removing new.cpp.o(.text), (0 bytes).
    Removing new.cpp.o(.text._ZSt17__throw_bad_allocv), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZSt17__throw_bad_allocv), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._Znwj), (8 bytes).
    Removing new.cpp.o(.text._ZnwjRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._Znaj), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._Znaj), (8 bytes).
    Removing new.cpp.o(.text._ZnajRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPv), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvj), (8 bytes).
    Removing new.cpp.o(.text._ZdaPv), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPv), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvj), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvj), (8 bytes).
    Removing new.cpp.o(.text._ZnwjSt11align_val_t), (74 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZnwjSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnwjSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZnajSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZnajSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZnajSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdlPvjSt11align_val_t), (6 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdlPvjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvSt11align_val_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvSt11align_val_tRKSt9nothrow_t), (4 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvSt11align_val_tRKSt9nothrow_t), (8 bytes).
    Removing new.cpp.o(.text._ZdaPvjSt11align_val_t), (6 bytes).
    Removing new.cpp.o(.ARM.exidx.text._ZdaPvjSt11align_val_t), (8 bytes).
    Removing new.cpp.o(.rodata._ZSt7nothrow), (1 bytes).
    Removing cxa_virtual.cpp.o(.text), (0 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_pure_virtual), (8 bytes).
    Removing cxa_virtual.cpp.o(.text.__cxa_deleted_virtual), (44 bytes).
    Removing cxa_virtual.cpp.o(.ARM.exidx.text.__cxa_deleted_virtual), (8 bytes).
    Removing cxa_handlers.cpp.o(.text), (0 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt14get_unexpectedv), (12 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt14get_unexpectedv), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt12__unexpectedPFvvE), (52 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt12__unexpectedPFvvE), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt10unexpectedv), (14 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt10unexpectedv), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt13get_terminatev), (12 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt13get_terminatev), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt11__terminatePFvvE), (48 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt11__terminatePFvvE), (8 bytes).
    Removing cxa_handlers.cpp.o(.text._ZSt9terminatev), (14 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt9terminatev), (8 bytes).
    Removing cxa_handlers.cpp.o(.ARM.exidx.text._ZSt15get_new_handlerv), (8 bytes).
    Removing abort_message.cpp.o(.text), (0 bytes).
    Removing abort_message.cpp.o(.ARM.exidx.text.abort_message), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text), (0 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt14set_unexpectedPFvvE), (30 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt14set_unexpectedPFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt13set_terminatePFvvE), (30 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt13set_terminatePFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.text._ZSt15set_new_handlerPFvvE), (18 bytes).
    Removing cxa_default_handlers.cpp.o(.ARM.exidx.text._ZSt15set_new_handlerPFvvE), (8 bytes).
    Removing cxa_default_handlers.cpp.o(.data.__cxa_terminate_handler), (4 bytes).
    Removing cxa_default_handlers.cpp.o(.data.__cxa_unexpected_handler), (4 bytes).
    Removing main.o(.ARM.exidx.text._ZN12ProgrammCoilC2Ev), (8 bytes).
    Removing main.o(.ARM.exidx.text._ZN7ISwitchC2Ev), (8 bytes).
    Removing simple_input.o(.ARM.exidx.text._Z11setRegisterIVjEvPT_jj), (8 bytes).
    Removing custom_timer.o(.ARM.exidx.text._ZN8IUpdatedC2Ev), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor8getRangeIfEET_PKS1_), (8 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor8getRangeIVtEET_PKS2_), (8 bytes).
    Removing analog_monitor.o(.text._ZN13AnalogMonitor10copyArraysIfEEvPKT_PS1_h), (58 bytes).
    Removing analog_monitor.o(.ARM.exidx.text._ZN13AnalogMonitor10copyArraysIfEEvPKT_PS1_h), (8 bytes).
    Removing analog_out.o(.ARM.exidx.text._Z5limitIfET_S0_S0_S0_), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z17setBitsInRegisterIVjEvPT_jj), (8 bytes).
    Removing init.o(.ARM.exidx.text._Z17setBitsInRegisterIVtEvPT_jj), (8 bytes).

499 unused section(s) (total 17179 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ddtor_pointer_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ddtor_pointer_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  mutex_dummy.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/arm_runtime.c                    0x00000000   Number         0  init_aeabi.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_memalign.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_memalign_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/r_arm_target.c                   0x00000000   Number         0  __ARM_resolve_target1.o ABSOLUTE
    ../clib/r_arm_target.c                   0x00000000   Number         0  __ARM_resolve_target1_abs32.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  atexit_cxa.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  cxa_atexit.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  abort.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  atexit_aeabi.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  aeabi_atexit.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  cxa_finalize.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/d2f.s                           0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/ddiv.s                          0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/dfix.s                          0x00000000   Number         0  dfix.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/f2d.s                           0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/faddsub.s                       0x00000000   Number         0  faddsub_clz.o ABSOLUTE
    ../fplib/fcmp.s                          0x00000000   Number         0  fcmp.o ABSOLUTE
    ../fplib/fcmpi.s                         0x00000000   Number         0  fcmpi.o ABSOLUTE
    ../fplib/fdiv.s                          0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/feqf.s                          0x00000000   Number         0  feqf.o ABSOLUTE
    ../fplib/fflt.s                          0x00000000   Number         0  fflt_clz.o ABSOLUTE
    ../fplib/fgeqf.s                         0x00000000   Number         0  fgeqf.o ABSOLUTE
    ../fplib/fleqf.s                         0x00000000   Number         0  fleqf.o ABSOLUTE
    ../fplib/fmul.s                          0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    ../fplib/fretinf.s                       0x00000000   Number         0  fretinf.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    RTE/Device/STM32F103C8/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    abort_message.cpp                        0x00000000   Number         0  abort_message.cpp.o ABSOLUTE
    analog_monitor.cpp                       0x00000000   Number         0  analog_monitor.o ABSOLUTE
    analog_out.cpp                           0x00000000   Number         0  analog_out.o ABSOLUTE
    coil.cpp                                 0x00000000   Number         0  coil.o ABSOLUTE
    common.cpp                               0x00000000   Number         0  common.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine.o ABSOLUTE
    custom_timer.cpp                         0x00000000   Number         0  custom_timer.o ABSOLUTE
    cxa_default_handlers.cpp                 0x00000000   Number         0  cxa_default_handlers.cpp.o ABSOLUTE
    cxa_handlers.cpp                         0x00000000   Number         0  cxa_handlers.cpp.o ABSOLUTE
    cxa_virtual.cpp                          0x00000000   Number         0  cxa_virtual.cpp.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    gpio_common.cpp                          0x00000000   Number         0  gpio_common.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.cpp                                 0x00000000   Number         0  init.o ABSOLUTE
    led_task.cpp                             0x00000000   Number         0  led_task.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.cpp                                 0x00000000   Number         0  main.o ABSOLUTE
    new.cpp                                  0x00000000   Number         0  new.cpp.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    simple_input.cpp                         0x00000000   Number         0  simple_input.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000128   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000144   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000160   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000007          0x08000162   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000007)
    .ARM.Collect$$libinit$$0000000C          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800016a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0800016a   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libinit$$00000034          0x0800016e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800016e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000170   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000001      0x08000172   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$00000001)
    .ARM.Collect$$libshutdown$$00000002      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000178   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000178   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800017a   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800017a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800017a   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x08000180   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x08000180   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000184   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000184   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800018c   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800018e   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800018e   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000192   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x08000198   Section       64  startup_stm32f10x_md.o(.text)
    .text                                    0x080001d8   Section        0  cxa_atexit.o(.text)
    .text                                    0x080001e2   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0800026c   Section       16  aeabi_memset4.o(.text)
    .text                                    0x0800027c   Section       68  rt_memclr.o(.text)
    .text                                    0x080002c0   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0800030e   Section        0  heapauxi.o(.text)
    .text                                    0x08000314   Section        0  init_aeabi.o(.text)
    .text                                    0x08000338   Section        0  h1_alloc.o(.text)
    .text                                    0x08000396   Section        0  h1_free.o(.text)
    .text                                    0x080003e4   Section        0  abort.o(.text)
    .text                                    0x080003fa   Section        0  aeabi_atexit.o(.text)
    .text                                    0x08000428   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0800048c   Section        0  sys_exit.o(.text)
    .text                                    0x08000498   Section        8  rt_heap_descriptor_intlibspace.o(.text)
    .text                                    0x080004a0   Section        8  rt_ddtor_pointer_addr_intlibspace.o(.text)
    .text                                    0x080004a8   Section        0  hguard.o(.text)
    .text                                    0x080004ac   Section        0  init_alloc.o(.text)
    .text                                    0x08000536   Section        0  h1_init.o(.text)
    .text                                    0x08000544   Section        0  cxa_finalize.o(.text)
    .text                                    0x08000586   Section        0  defsig_abrt_outer.o(.text)
    .text                                    0x08000594   Section        8  libspace.o(.text)
    .text                                    0x0800059c   Section        2  use_no_semi.o(.text)
    .text                                    0x0800059e   Section        0  indicate_semi.o(.text)
    .text                                    0x0800059e   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080005e8   Section        0  maybetermalloc1.o(.text)
    .text                                    0x080005e8   Section        0  h1_extend.o(.text)
    .text                                    0x0800061c   Section        0  exit.o(.text)
    .text                                    0x0800062e   Section        0  defsig_exit.o(.text)
    .text                                    0x08000638   Section        0  defsig_abrt_inner.o(.text)
    .text                                    0x08000668   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x08000676   Section        0  defsig_general.o(.text)
    .text                                    0x080006a8   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x080006f8   Section        0  sys_wrch.o(.text)
    [Anonymous Symbol]                       0x08000710   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x08000750   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08000760   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08000780   Number         0  port.o(.text.SVC_Handler)
    SetSysClock                              0x08000785   Thumb Code     8  system_stm32f10x.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08000784   Section        0  system_stm32f10x.o(.text.SetSysClock)
    SetSysClockTo72                          0x0800078d   Thumb Code   290  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x0800078c   Section        0  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x080008b0   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080008ec   Section        0  system_stm32f10x.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x08000a10   Section        0  system_stm32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000a78   Section        0  main.o(.text.TIM2_IRQHandler)
    _GLOBAL__sub_I_main.cpp                  0x08000ac5   Thumb Code    36  main.o(.text._GLOBAL__sub_I_main.cpp)
    [Anonymous Symbol]                       0x08000ac4   Section        0  main.o(.text._GLOBAL__sub_I_main.cpp)
    [Anonymous Symbol]                       0x08000ae8   Section        0  init.o(.text._Z10commonInitv)
    [Anonymous Symbol]                       0x08000af8   Section        0  common.o(.text._Z11getPositionj)
    [Anonymous Symbol]                       0x08000b38   Section        0  simple_input.o(.text._Z11setRegisterIVjEvPT_jj)
    [Anonymous Symbol]                       0x08000b58   Section        0  init.o(.text._Z17setBitsInRegisterIVjEvPT_jj)
    [Anonymous Symbol]                       0x08000b9c   Section        0  init.o(.text._Z17setBitsInRegisterIVtEvPT_jj)
    [Anonymous Symbol]                       0x08000be0   Section        0  analog_out.o(.text._Z5limitIfET_S0_S0_S0_)
    [Anonymous Symbol]                       0x08000c18   Section        0  init.o(.text._Z7adcInitv)
    [Anonymous Symbol]                       0x08000d70   Section        0  led_task.o(.text._Z7ledTaskPv)
    [Anonymous Symbol]                       0x08000e48   Section        0  init.o(.text._Z7pwmInitv)
    [Anonymous Symbol]                       0x08000ef4   Section        0  init.o(.text._Z7rccInitv)
    [Anonymous Symbol]                       0x08000fc4   Section        0  init.o(.text._Z8tickInitv)
    __NVIC_EnableIRQ(IRQn)                   0x0800101d   Thumb Code    48  init.o(.text._ZL16__NVIC_EnableIRQ4IRQn)
    [Anonymous Symbol]                       0x0800101c   Section        0  init.o(.text._ZL16__NVIC_EnableIRQ4IRQn)
    __NVIC_SetPriority(IRQn, unsigned int)   0x0800104d   Thumb Code    66  init.o(.text._ZL18__NVIC_SetPriority4IRQnj)
    [Anonymous Symbol]                       0x0800104c   Section        0  init.o(.text._ZL18__NVIC_SetPriority4IRQnj)
    __NVIC_SetPriorityGrouping(unsigned int) 0x08001091   Thumb Code    60  init.o(.text._ZL26__NVIC_SetPriorityGroupingj)
    [Anonymous Symbol]                       0x08001090   Section        0  init.o(.text._ZL26__NVIC_SetPriorityGroupingj)
    [Anonymous Symbol]                       0x080010cc   Section        0  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x080011b0   Section        0  custom_timer.o(.text._ZN11CommonDelay11notFinishedEv)
    [Anonymous Symbol]                       0x080011c8   Section        0  custom_timer.o(.text._ZN11CommonDelay15finishedImpulseEv)
    [Anonymous Symbol]                       0x08001214   Section        0  custom_timer.o(.text._ZN11CommonDelay15prepareAndStartEv)
    [Anonymous Symbol]                       0x0800122c   Section        0  custom_timer.o(.text._ZN11CommonDelay4stopEv)
    [Anonymous Symbol]                       0x08001240   Section        0  custom_timer.o(.text._ZN11CommonDelay5resetEv)
    [Anonymous Symbol]                       0x08001250   Section        0  custom_timer.o(.text._ZN11CommonDelay5startEv)
    [Anonymous Symbol]                       0x08001260   Section        0  custom_timer.o(.text._ZN11CommonDelay6updateEv)
    [Anonymous Symbol]                       0x080012a8   Section        0  custom_timer.o(.text._ZN11CommonDelay7startedEv)
    [Anonymous Symbol]                       0x080012b8   Section        0  custom_timer.o(.text._ZN11CommonDelay8finishedEv)
    [Anonymous Symbol]                       0x080012d0   Section        0  custom_timer.o(.text._ZN11CommonDelay8setStartEb)
    [Anonymous Symbol]                       0x080012fc   Section        0  custom_timer.o(.text._ZN11CommonDelay9setPeriodEt)
    [Anonymous Symbol]                       0x08001310   Section        0  custom_timer.o(.text._ZN11CommonDelayC2Et)
    [Anonymous Symbol]                       0x0800133c   Section        0  custom_timer.o(.text._ZN11CommonDelayaSEb)
    [Anonymous Symbol]                       0x0800135c   Section        0  simple_input.o(.text._ZN11SimpleInput8isActiveEv)
    [Anonymous Symbol]                       0x08001374   Section        0  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x08001408   Section        0  coil.o(.text._ZN12ProgrammCoil6toggleEv)
    [Anonymous Symbol]                       0x0800142c   Section        0  coil.o(.text._ZN12ProgrammCoil8isActiveEv)
    [Anonymous Symbol]                       0x0800143c   Section        0  coil.o(.text._ZN12ProgrammCoil8setValueEb)
    [Anonymous Symbol]                       0x08001454   Section        0  main.o(.text._ZN12ProgrammCoilC2Ev)
    [Anonymous Symbol]                       0x08001474   Section        0  coil.o(.text._ZN12ProgrammCoilaSEb)
    [Anonymous Symbol]                       0x08001498   Section        0  analog_monitor.o(.text._ZN13AnalogMonitor10isHighWarnEv)
    [Anonymous Symbol]                       0x080014ac   Section        0  analog_monitor.o(.text._ZN13AnalogMonitor10isLowAlarmEv)
    [Anonymous Symbol]                       0x080014c0   Section        0  analog_monitor.o(.text._ZN13AnalogMonitor11isHighAlarmEv)
    [Anonymous Symbol]                       0x080014d4   Section        0  analog_monitor.o(.text._ZN13AnalogMonitor13setTresDelaysE9TRES_TYPEt)
    [Anonymous Symbol]                       0x080014fc   Section        0  analog_monitor.o(.text._ZN13AnalogMonitor6updateEv)
    [Anonymous Symbol]                       0x08001664   Section        0  analog_monitor.o(.text._ZN13AnalogMonitor8getRangeIVtEET_PKS2_)
    [Anonymous Symbol]                       0x0800167c   Section        0  analog_monitor.o(.text._ZN13AnalogMonitor8getRangeIfEET_PKS1_)
    [Anonymous Symbol]                       0x08001694   Section        0  analog_monitor.o(.text._ZN13AnalogMonitor8getValueEv)
    [Anonymous Symbol]                       0x080016a0   Section        0  analog_monitor.o(.text._ZN13AnalogMonitor9isLowWarnEv)
    [Anonymous Symbol]                       0x080016b4   Section        0  analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVt)
    [Anonymous Symbol]                       0x08001790   Section        0  analog_monitor.o(.text._ZN13AnalogMonitorD2Ev)
    [Anonymous Symbol]                       0x080017e0   Section        0  coil.o(.text._ZN4Coil8isActiveEv)
    [Anonymous Symbol]                       0x080017f8   Section        0  coil.o(.text._ZN4Coil8setValueEb)
    [Anonymous Symbol]                       0x0800183c   Section        0  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    [Anonymous Symbol]                       0x080018b0   Section        0  coil.o(.text._ZN4CoilaSEb)
    [Anonymous Symbol]                       0x080018d4   Section        0  custom_timer.o(.text._ZN7DIDelay7startedEv)
    [Anonymous Symbol]                       0x08001904   Section        0  custom_timer.o(.text._ZN7DIDelayC2EP7ISwitcht)
    [Anonymous Symbol]                       0x08001934   Section        0  main.o(.text._ZN7ISwitchC2Ev)
    [Anonymous Symbol]                       0x0800194c   Section        0  custom_timer.o(.text._ZN8IUpdatedC2Ev)
    [Anonymous Symbol]                       0x08001964   Section        0  analog_out.o(.text._ZN9AnalogOut10setReverseEb)
    [Anonymous Symbol]                       0x0800197c   Section        0  analog_out.o(.text._ZN9AnalogOut14updateRawValueEv)
    [Anonymous Symbol]                       0x080019d4   Section        0  analog_out.o(.text._ZN9AnalogOut16setFullRangeTimeEj)
    [Anonymous Symbol]                       0x08001a1c   Section        0  analog_out.o(.text._ZN9AnalogOut5setSPEf)
    [Anonymous Symbol]                       0x08001a44   Section        0  analog_out.o(.text._ZN9AnalogOut6updateEv)
    [Anonymous Symbol]                       0x08001ad8   Section        0  analog_out.o(.text._ZN9AnalogOutC2EPVttjb)
    [Anonymous Symbol]                       0x08001b2c   Section        0  analog_out.o(.text._ZN9AnalogOutaSEf)
    [Anonymous Symbol]                       0x08001b44   Section        0  cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv)
    [Anonymous Symbol]                       0x08001b50   Section        0  new.cpp.o(.text._ZdlPv)
    [Anonymous Symbol]                       0x08001b54   Section        0  new.cpp.o(.text._ZdlPvj)
    [Anonymous Symbol]                       0x08001b58   Section        0  new.cpp.o(.text._Znwj)
    [Anonymous Symbol]                       0x08001b80   Section        0  cxa_virtual.cpp.o(.text.__cxa_pure_virtual)
    __cxx_global_var_init                    0x08001ba9   Thumb Code    26  main.o(.text.__cxx_global_var_init)
    [Anonymous Symbol]                       0x08001ba8   Section        0  main.o(.text.__cxx_global_var_init)
    __cxx_global_var_init.1                  0x08001bc5   Thumb Code    26  main.o(.text.__cxx_global_var_init.1)
    [Anonymous Symbol]                       0x08001bc4   Section        0  main.o(.text.__cxx_global_var_init.1)
    __cxx_global_var_init.2                  0x08001be1   Thumb Code    16  main.o(.text.__cxx_global_var_init.2)
    [Anonymous Symbol]                       0x08001be0   Section        0  main.o(.text.__cxx_global_var_init.2)
    __cxx_global_var_init.3                  0x08001bf1   Thumb Code    28  main.o(.text.__cxx_global_var_init.3)
    [Anonymous Symbol]                       0x08001bf0   Section        0  main.o(.text.__cxx_global_var_init.3)
    __cxx_global_var_init.4                  0x08001c0d   Thumb Code    26  main.o(.text.__cxx_global_var_init.4)
    [Anonymous Symbol]                       0x08001c0c   Section        0  main.o(.text.__cxx_global_var_init.4)
    __cxx_global_var_init.5                  0x08001c29   Thumb Code    18  main.o(.text.__cxx_global_var_init.5)
    [Anonymous Symbol]                       0x08001c28   Section        0  main.o(.text.__cxx_global_var_init.5)
    __cxx_global_var_init.6                  0x08001c3d   Thumb Code    54  main.o(.text.__cxx_global_var_init.6)
    [Anonymous Symbol]                       0x08001c3c   Section        0  main.o(.text.__cxx_global_var_init.6)
    __cxx_global_var_init.7                  0x08001c75   Thumb Code    38  main.o(.text.__cxx_global_var_init.7)
    [Anonymous Symbol]                       0x08001c74   Section        0  main.o(.text.__cxx_global_var_init.7)
    [Anonymous Symbol]                       0x08001c9a   Section        0  abort_message.cpp.o(.text.abort_message)
    [Anonymous Symbol]                       0x08001ca0   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x08001d09   Thumb Code   282  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08001d08   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x08001e25   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08001e24   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x08001f79   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x08001f78   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x08001fe5   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x08001fe4   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x08002041   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x08002040   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvDeleteTCB                             0x08002085   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x08002084   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetNextExpireTime                     0x0800209d   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x0800209c   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x080020dd   Thumb Code   174  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x080020dc   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x0800218d   Thumb Code    60  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0800218c   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x080021c9   Thumb Code    72  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x080021c8   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x08002211   Thumb Code   230  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x08002210   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x080022f9   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x080022f8   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x08002389   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x08002388   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x08002451   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x08002450   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x080024d9   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x080024d8   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvPortStartFirstTask                    0x08002501   Thumb Code    32  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x08002500   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x08002521   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x08002520   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x08002575   Thumb Code   294  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x08002574   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x0800269d   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x0800269c   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x08002739   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x08002738   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x0800276d   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x0800276c   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x080027a9   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x080027a8   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x080027ed   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x080027ec   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x08002841   Thumb Code    38  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08002840   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x08002869   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x08002868   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x08002889   Thumb Code   174  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08002888   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08002938   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08002ac0   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x08002b10   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x08002b58   Section        0  main.o(.text.vApplicationIdleHook)
    [Anonymous Symbol]                       0x08002b5c   Section        0  main.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x08002b68   Section        0  main.o(.text.vApplicationTickHook)
    [Anonymous Symbol]                       0x08002b6c   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08002b9c   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08002bac   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x08002c18   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x08002c48   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08002c70   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08002ce8   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x08002d18   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x08002d7c   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08002dc8   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x08002dec   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x08002dfc   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x08002e24   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x08002e84   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08002f18   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x08002f28   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08002f28   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08003014   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x08003054   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x080030d4   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x080031a4   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x080032f8   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08003394   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x08003434   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x08003448   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x0800369c   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x0800380c   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x08003a0c   Section        0  timers.o(.text.xTimerCreateTimerTask)
    x$fpl$d2f                                0x08003a5c   Section       98  d2f.o(x$fpl$d2f)
    x$fpl$ddiv                               0x08003ac0   Section      692  ddiv.o(x$fpl$ddiv)
    ddiv_entry                               0x08003ac7   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    x$fpl$dfix                               0x08003d74   Section       94  dfix.o(x$fpl$dfix)
    x$fpl$dfltu                              0x08003dd2   Section       38  dflt_clz.o(x$fpl$dfltu)
    x$fpl$dnaninf                            0x08003df8   Section      156  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dretinf                            0x08003e94   Section       12  dretinf.o(x$fpl$dretinf)
    x$fpl$f2d                                0x08003ea0   Section       86  f2d.o(x$fpl$f2d)
    x$fpl$fadd                               0x08003ef8   Section      196  faddsub_clz.o(x$fpl$fadd)
    _fadd1                                   0x08003f07   Thumb Code     0  faddsub_clz.o(x$fpl$fadd)
    x$fpl$fcmp                               0x08003fbc   Section       84  fcmp.o(x$fpl$fcmp)
    x$fpl$fcmpinf                            0x08004010   Section       24  fcmpi.o(x$fpl$fcmpinf)
    _fdiv1                                   0x08004029   Thumb Code     0  fdiv.o(x$fpl$fdiv)
    x$fpl$fdiv                               0x08004028   Section      388  fdiv.o(x$fpl$fdiv)
    x$fpl$feqf                               0x080041ac   Section      104  feqf.o(x$fpl$feqf)
    x$fpl$fflt                               0x08004214   Section       48  fflt_clz.o(x$fpl$fflt)
    x$fpl$fgeqf                              0x08004244   Section      104  fgeqf.o(x$fpl$fgeqf)
    x$fpl$fleqf                              0x080042ac   Section      104  fleqf.o(x$fpl$fleqf)
    x$fpl$fmul                               0x08004314   Section      258  fmul.o(x$fpl$fmul)
    x$fpl$fnaninf                            0x08004416   Section      140  fnaninf.o(x$fpl$fnaninf)
    x$fpl$fretinf                            0x080044a2   Section       10  fretinf.o(x$fpl$fretinf)
    x$fpl$fsub                               0x080044ac   Section      234  faddsub_clz.o(x$fpl$fsub)
    _fsub1                                   0x080044bb   Thumb Code     0  faddsub_clz.o(x$fpl$fsub)
    x$fpl$usenofp                            0x08004596   Section        0  usenofp.o(x$fpl$usenofp)
    .L.str                                   0x08004624   Data           8  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08004624   Section        0  main.o(.rodata.str1.1)
    .L.str                                   0x0800462c   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800462c   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x08004631   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08004631   Section        0  timers.o(.rodata.str1.1)
    .init_array                              0x08004664   Section        0  init_aeabi.o(.init_array)
    uxCriticalNesting                        0x2000001c   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x2000001c   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000020   Section       96  libspace.o(.bss)
    prvSampleTimeNow.xLastTime               0x2000012c   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x2000012c   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20000130   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000134   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000134   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000138   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000138   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x2000013c   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x2000013c   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000140   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000140   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000144   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000144   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000148   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000148   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200001ac   Data       10240  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200001ac   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x200029ac   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200029ac   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200029b0   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200029b0   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x200029b4   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200029b4   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200029b8   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200029b8   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x200029bc   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x200029bc   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x200029c0   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x200029c0   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x200029d4   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x200029d4   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x200029e8   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200029e8   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200029fc   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200029fc   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002a10   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002a10   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002a14   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002a14   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002a18   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002a18   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002a1c   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002a1c   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002a20   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002a20   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002a24   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002a24   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002a28   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002a28   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002a2c   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002a2c   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002a30   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002a30   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002a44   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002a44   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002a48   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002a48   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002a50   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002a50   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002a64   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002a64   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002a78   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002a78   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002a7c   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002a7c   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002a80   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002a80   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002a84   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002a84   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002a88   Data         512  startup_stm32f10x_md.o(HEAP)
    HEAP                                     0x20002a88   Section      512  startup_stm32f10x_md.o(HEAP)
    Stack_Mem                                0x20002c88   Data        1024  startup_stm32f10x_md.o(STACK)
    STACK                                    0x20002c88   Section     1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x20003088   Data           0  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _mutex_acquire                            - Undefined Weak Reference
    _mutex_free                               - Undefined Weak Reference
    _mutex_release                            - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __dso_handle                             0x08000000   Number         0  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000103   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000129   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000145   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000161   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_2                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000007)
    __rt_lib_init_preinit_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_relocate_pie_1             0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_alloca_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_2                      0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_exceptions_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_rand_1                     0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_signal_1                   0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800016b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_cpp_1                      0x0800016f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_return                     0x0800016f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_shutdown                        0x08000171   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_2                  0x08000173   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000001)
    __rt_lib_shutdown_cpp_1                  0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000179   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0800017b   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800017b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800017b   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x08000181   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x08000181   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000185   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000185   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800018d   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800018f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800018f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000193   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000199   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x080001a1   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x080001a3   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x080001a5   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x080001a7   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x080001a9   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x080001ad   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART1_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART2_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x080001b3   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x080001b5   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __cxa_atexit                             0x080001d9   Thumb Code    10  cxa_atexit.o(.text)
    __aeabi_memcpy                           0x080001e3   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x080001e3   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000249   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x0800026d   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x0800026d   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x0800027d   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0800027d   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x08000281   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x080002c5   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x0800030f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x08000311   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08000313   Thumb Code     2  heapauxi.o(.text)
    __cpp_initialize__aeabi_                 0x08000315   Thumb Code    28  init_aeabi.o(.text)
    malloc                                   0x08000339   Thumb Code    94  h1_alloc.o(.text)
    free                                     0x08000397   Thumb Code    78  h1_free.o(.text)
    abort                                    0x080003e5   Thumb Code    22  abort.o(.text)
    __aeabi_atexit                           0x080003fb   Thumb Code    46  aeabi_atexit.o(.text)
    __aeabi_memcpy4                          0x08000429   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000429   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000429   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000471   Thumb Code     0  rt_memcpy_w.o(.text)
    _sys_exit                                0x0800048d   Thumb Code     8  sys_exit.o(.text)
    __rt_heap_descriptor                     0x08000499   Thumb Code     8  rt_heap_descriptor_intlibspace.o(.text)
    __rt_ddtor_pointer_addr                  0x080004a1   Thumb Code     8  rt_ddtor_pointer_addr_intlibspace.o(.text)
    __use_no_heap                            0x080004a9   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x080004ab   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x080004ad   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x080004af   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x080004b1   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x080004d3   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x080004d9   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x08000537   Thumb Code    10  h1_init.o(.text)
    __Heap_DescSize                          0x08000541   Thumb Code     4  h1_init.o(.text)
    __cxa_finalize                           0x08000545   Thumb Code    66  cxa_finalize.o(.text)
    __rt_SIGABRT                             0x08000587   Thumb Code    14  defsig_abrt_outer.o(.text)
    __user_libspace                          0x08000595   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000595   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000595   Thumb Code     0  libspace.o(.text)
    __I$use$semihosting                      0x0800059d   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0800059d   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800059f   Thumb Code     0  indicate_semi.o(.text)
    __user_setup_stackheap                   0x0800059f   Thumb Code    74  sys_stackheap_outer.o(.text)
    __Heap_ProvideMemory                     0x080005e9   Thumb Code    52  h1_extend.o(.text)
    _maybe_terminate_alloc                   0x080005e9   Thumb Code     0  maybetermalloc1.o(.text)
    exit                                     0x0800061d   Thumb Code    18  exit.o(.text)
    __sig_exit                               0x0800062f   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGABRT_inner                       0x08000639   Thumb Code    14  defsig_abrt_inner.o(.text)
    __rt_SIGRTMEM                            0x08000669   Thumb Code    14  defsig_rtmem_outer.o(.text)
    __default_signal_display                 0x08000677   Thumb Code    50  defsig_general.o(.text)
    __rt_SIGRTMEM_inner                      0x080006a9   Thumb Code    22  defsig_rtmem_inner.o(.text)
    _ttywrch                                 0x080006f9   Thumb Code    14  sys_wrch.o(.text)
    PendSV_Handler                           0x08000711   Thumb Code    68  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x08000761   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x080008b1   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemCoreClockUpdate                    0x080008ed   Thumb Code   290  system_stm32f10x.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x08000a11   Thumb Code   102  system_stm32f10x.o(.text.SystemInit)
    TIM2_IRQHandler                          0x08000a79   Thumb Code    76  main.o(.text.TIM2_IRQHandler)
    commonInit()                             0x08000ae9   Thumb Code    14  init.o(.text._Z10commonInitv)
    getPosition(unsigned int)                0x08000af9   Thumb Code    64  common.o(.text._Z11getPositionj)
    void setRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int) 0x08000b39   Thumb Code    32  simple_input.o(.text._Z11setRegisterIVjEvPT_jj)
    void setBitsInRegister<unsigned int volatile>(unsigned int volatile*, unsigned int, unsigned int) 0x08000b59   Thumb Code    68  init.o(.text._Z17setBitsInRegisterIVjEvPT_jj)
    void setBitsInRegister<unsigned short volatile>(unsigned short volatile*, unsigned int, unsigned int) 0x08000b9d   Thumb Code    68  init.o(.text._Z17setBitsInRegisterIVtEvPT_jj)
    float limit<float>(float, float, float)  0x08000be1   Thumb Code    54  analog_out.o(.text._Z5limitIfET_S0_S0_S0_)
    adcInit()                                0x08000c19   Thumb Code   344  init.o(.text._Z7adcInitv)
    ledTask(void*)                           0x08000d71   Thumb Code   216  led_task.o(.text._Z7ledTaskPv)
    pwmInit()                                0x08000e49   Thumb Code   170  init.o(.text._Z7pwmInitv)
    rccInit()                                0x08000ef5   Thumb Code   206  init.o(.text._Z7rccInitv)
    tickInit()                               0x08000fc5   Thumb Code    88  init.o(.text._Z8tickInitv)
    GPIOcommon::GPIOcommon(GPIO_TypeDef*, unsigned char) 0x080010cd   Thumb Code   226  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    GPIOcommon::GPIOcommon__sub_object(GPIO_TypeDef*, unsigned char) 0x080010cd   Thumb Code   226  gpio_common.o(.text._ZN10GPIOcommonC2EP12GPIO_TypeDefh)
    CommonDelay::notFinished()               0x080011b1   Thumb Code    22  custom_timer.o(.text._ZN11CommonDelay11notFinishedEv)
    CommonDelay::finishedImpulse()           0x080011c9   Thumb Code    76  custom_timer.o(.text._ZN11CommonDelay15finishedImpulseEv)
    CommonDelay::prepareAndStart()           0x08001215   Thumb Code    24  custom_timer.o(.text._ZN11CommonDelay15prepareAndStartEv)
    CommonDelay::stop()                      0x0800122d   Thumb Code    20  custom_timer.o(.text._ZN11CommonDelay4stopEv)
    CommonDelay::reset()                     0x08001241   Thumb Code    16  custom_timer.o(.text._ZN11CommonDelay5resetEv)
    CommonDelay::start()                     0x08001251   Thumb Code    14  custom_timer.o(.text._ZN11CommonDelay5startEv)
    CommonDelay::update()                    0x08001261   Thumb Code    72  custom_timer.o(.text._ZN11CommonDelay6updateEv)
    CommonDelay::started()                   0x080012a9   Thumb Code    16  custom_timer.o(.text._ZN11CommonDelay7startedEv)
    CommonDelay::finished()                  0x080012b9   Thumb Code    22  custom_timer.o(.text._ZN11CommonDelay8finishedEv)
    CommonDelay::setStart(bool)              0x080012d1   Thumb Code    44  custom_timer.o(.text._ZN11CommonDelay8setStartEb)
    CommonDelay::setPeriod(unsigned short)   0x080012fd   Thumb Code    20  custom_timer.o(.text._ZN11CommonDelay9setPeriodEt)
    CommonDelay::CommonDelay(unsigned short) 0x08001311   Thumb Code    42  custom_timer.o(.text._ZN11CommonDelayC2Et)
    CommonDelay::CommonDelay__sub_object(unsigned short) 0x08001311   Thumb Code    42  custom_timer.o(.text._ZN11CommonDelayC2Et)
    CommonDelay::operator=(bool)             0x0800133d   Thumb Code    32  custom_timer.o(.text._ZN11CommonDelayaSEb)
    SimpleInput::isActive()                  0x0800135d   Thumb Code    24  simple_input.o(.text._ZN11SimpleInput8isActiveEv)
    SimpleInput::SimpleInput(GPIO_TypeDef*, unsigned char) 0x08001375   Thumb Code   146  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    SimpleInput::SimpleInput__sub_object(GPIO_TypeDef*, unsigned char) 0x08001375   Thumb Code   146  simple_input.o(.text._ZN11SimpleInputC2EP12GPIO_TypeDefh)
    ProgrammCoil::toggle()                   0x08001409   Thumb Code    34  coil.o(.text._ZN12ProgrammCoil6toggleEv)
    ProgrammCoil::isActive()                 0x0800142d   Thumb Code    16  coil.o(.text._ZN12ProgrammCoil8isActiveEv)
    ProgrammCoil::setValue(bool)             0x0800143d   Thumb Code    24  coil.o(.text._ZN12ProgrammCoil8setValueEb)
    ProgrammCoil::ProgrammCoil__sub_object() 0x08001455   Thumb Code    32  main.o(.text._ZN12ProgrammCoilC2Ev)
    ProgrammCoil::operator=(bool)            0x08001475   Thumb Code    34  coil.o(.text._ZN12ProgrammCoilaSEb)
    AnalogMonitor::isHighWarn()              0x08001499   Thumb Code    18  analog_monitor.o(.text._ZN13AnalogMonitor10isHighWarnEv)
    AnalogMonitor::isLowAlarm()              0x080014ad   Thumb Code    18  analog_monitor.o(.text._ZN13AnalogMonitor10isLowAlarmEv)
    AnalogMonitor::isHighAlarm()             0x080014c1   Thumb Code    18  analog_monitor.o(.text._ZN13AnalogMonitor11isHighAlarmEv)
    AnalogMonitor::setTresDelays(TRES_TYPE, unsigned short) 0x080014d5   Thumb Code    38  analog_monitor.o(.text._ZN13AnalogMonitor13setTresDelaysE9TRES_TYPEt)
    AnalogMonitor::update()                  0x080014fd   Thumb Code   358  analog_monitor.o(.text._ZN13AnalogMonitor6updateEv)
    unsigned short volatile AnalogMonitor::getRange<unsigned short volatile>(unsigned short volatile const*) 0x08001665   Thumb Code    22  analog_monitor.o(.text._ZN13AnalogMonitor8getRangeIVtEET_PKS2_)
    float AnalogMonitor::getRange<float>(float const*) 0x0800167d   Thumb Code    22  analog_monitor.o(.text._ZN13AnalogMonitor8getRangeIfEET_PKS1_)
    AnalogMonitor::getValue()                0x08001695   Thumb Code    12  analog_monitor.o(.text._ZN13AnalogMonitor8getValueEv)
    AnalogMonitor::isLowWarn()               0x080016a1   Thumb Code    18  analog_monitor.o(.text._ZN13AnalogMonitor9isLowWarnEv)
    AnalogMonitor::AnalogMonitor(unsigned char, unsigned short volatile*) 0x080016b5   Thumb Code   220  analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVt)
    AnalogMonitor::AnalogMonitor__sub_object(unsigned char, unsigned short volatile*) 0x080016b5   Thumb Code   220  analog_monitor.o(.text._ZN13AnalogMonitorC2EhPVt)
    AnalogMonitor::~AnalogMonitor()          0x08001791   Thumb Code    80  analog_monitor.o(.text._ZN13AnalogMonitorD2Ev)
    AnalogMonitor::~AnalogMonitor__sub_object() 0x08001791   Thumb Code    80  analog_monitor.o(.text._ZN13AnalogMonitorD2Ev)
    Coil::isActive()                         0x080017e1   Thumb Code    22  coil.o(.text._ZN4Coil8isActiveEv)
    Coil::setValue(bool)                     0x080017f9   Thumb Code    66  coil.o(.text._ZN4Coil8setValueEb)
    Coil::Coil(GPIO_TypeDef*, unsigned char) 0x0800183d   Thumb Code   116  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    Coil::Coil__sub_object(GPIO_TypeDef*, unsigned char) 0x0800183d   Thumb Code   116  coil.o(.text._ZN4CoilC2EP12GPIO_TypeDefh)
    Coil::operator=(bool)                    0x080018b1   Thumb Code    34  coil.o(.text._ZN4CoilaSEb)
    DIDelay::started()                       0x080018d5   Thumb Code    48  custom_timer.o(.text._ZN7DIDelay7startedEv)
    DIDelay::DIDelay(ISwitch*, unsigned short) 0x08001905   Thumb Code    46  custom_timer.o(.text._ZN7DIDelayC2EP7ISwitcht)
    DIDelay::DIDelay__sub_object(ISwitch*, unsigned short) 0x08001905   Thumb Code    46  custom_timer.o(.text._ZN7DIDelayC2EP7ISwitcht)
    ISwitch::ISwitch__sub_object()           0x08001935   Thumb Code    22  main.o(.text._ZN7ISwitchC2Ev)
    IUpdated::IUpdated__sub_object()         0x0800194d   Thumb Code    22  custom_timer.o(.text._ZN8IUpdatedC2Ev)
    AnalogOut::setReverse(bool)              0x08001965   Thumb Code    24  analog_out.o(.text._ZN9AnalogOut10setReverseEb)
    AnalogOut::updateRawValue()              0x0800197d   Thumb Code    86  analog_out.o(.text._ZN9AnalogOut14updateRawValueEv)
    AnalogOut::setFullRangeTime(unsigned int) 0x080019d5   Thumb Code    70  analog_out.o(.text._ZN9AnalogOut16setFullRangeTimeEj)
    AnalogOut::setSP(float)                  0x08001a1d   Thumb Code    38  analog_out.o(.text._ZN9AnalogOut5setSPEf)
    AnalogOut::update()                      0x08001a45   Thumb Code   148  analog_out.o(.text._ZN9AnalogOut6updateEv)
    AnalogOut::AnalogOut(unsigned short volatile*, unsigned short, unsigned int, bool) 0x08001ad9   Thumb Code    82  analog_out.o(.text._ZN9AnalogOutC2EPVttjb)
    AnalogOut::AnalogOut__sub_object(unsigned short volatile*, unsigned short, unsigned int, bool) 0x08001ad9   Thumb Code    82  analog_out.o(.text._ZN9AnalogOutC2EPVttjb)
    AnalogOut::operator=(float)              0x08001b2d   Thumb Code    24  analog_out.o(.text._ZN9AnalogOutaSEf)
    std::get_new_handler()                   0x08001b45   Thumb Code    12  cxa_handlers.cpp.o(.text._ZSt15get_new_handlerv)
    operator delete(void*)                   0x08001b51   Thumb Code     4  new.cpp.o(.text._ZdlPv)
    operator delete(void*, unsigned int)     0x08001b55   Thumb Code     4  new.cpp.o(.text._ZdlPvj)
    operator new(unsigned int)               0x08001b59   Thumb Code    38  new.cpp.o(.text._Znwj)
    __cxa_pure_virtual                       0x08001b81   Thumb Code     8  cxa_virtual.cpp.o(.text.__cxa_pure_virtual)
    abort_message                            0x08001c9b   Thumb Code     4  abort_message.cpp.o(.text.abort_message)
    main                                     0x08001ca1   Thumb Code   102  main.o(.text.main)
    pvPortMalloc                             0x08002939   Thumb Code   390  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x08002ac1   Thumb Code    80  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x08002b11   Thumb Code    72  list.o(.text.uxListRemove)
    vApplicationIdleHook                     0x08002b59   Thumb Code     2  main.o(.text.vApplicationIdleHook)
    vApplicationStackOverflowHook            0x08002b5d   Thumb Code    10  main.o(.text.vApplicationStackOverflowHook)
    vApplicationTickHook                     0x08002b69   Thumb Code     2  main.o(.text.vApplicationTickHook)
    vListInitialise                          0x08002b6d   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x08002b9d   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x08002bad   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x08002c19   Thumb Code    48  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x08002c49   Thumb Code    38  port.o(.text.vPortExitCritical)
    vPortFree                                0x08002c71   Thumb Code   118  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08002ce9   Thumb Code    46  port.o(.text.vPortSetupTimerInterrupt)
    vQueueWaitForMessageRestricted           0x08002d19   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x08002d7d   Thumb Code    74  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x08002dc9   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08002ded   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08002dfd   Thumb Code    38  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x08002e25   Thumb Code    96  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x08002e85   Thumb Code   148  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x08002f19   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08002f29   Thumb Code   236  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x08003015   Thumb Code    64  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x08003055   Thumb Code   126  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x080030d5   Thumb Code   208  queue.o(.text.xQueueGenericReset)
    xQueueReceive                            0x080031a5   Thumb Code   338  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x080032f9   Thumb Code   154  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x08003395   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskGetTickCount                        0x08003435   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x08003449   Thumb Code   596  tasks.o(.text.xTaskIncrementTick)
    xTaskRemoveFromEventList                 0x0800369d   Thumb Code   368  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x0800380d   Thumb Code   510  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08003a0d   Thumb Code    80  timers.o(.text.xTimerCreateTimerTask)
    __aeabi_d2f                              0x08003a5d   Thumb Code     0  d2f.o(x$fpl$d2f)
    _d2f                                     0x08003a5d   Thumb Code    98  d2f.o(x$fpl$d2f)
    __aeabi_ddiv                             0x08003ac1   Thumb Code     0  ddiv.o(x$fpl$ddiv)
    _ddiv                                    0x08003ac1   Thumb Code   556  ddiv.o(x$fpl$ddiv)
    __aeabi_d2iz                             0x08003d75   Thumb Code     0  dfix.o(x$fpl$dfix)
    _dfix                                    0x08003d75   Thumb Code    94  dfix.o(x$fpl$dfix)
    __aeabi_ui2d                             0x08003dd3   Thumb Code     0  dflt_clz.o(x$fpl$dfltu)
    _dfltu                                   0x08003dd3   Thumb Code    38  dflt_clz.o(x$fpl$dfltu)
    __fpl_dnaninf                            0x08003df9   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x08003e95   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __aeabi_f2d                              0x08003ea1   Thumb Code     0  f2d.o(x$fpl$f2d)
    _f2d                                     0x08003ea1   Thumb Code    86  f2d.o(x$fpl$f2d)
    __aeabi_fadd                             0x08003ef9   Thumb Code     0  faddsub_clz.o(x$fpl$fadd)
    _fadd                                    0x08003ef9   Thumb Code   196  faddsub_clz.o(x$fpl$fadd)
    __aeabi_fcmpeq                           0x08003fbd   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _feq                                     0x08003fbd   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    _fneq                                    0x08003fcb   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmpgt                           0x08003fd9   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fgr                                     0x08003fd9   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmpge                           0x08003fe7   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fgeq                                    0x08003fe7   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmple                           0x08003ff5   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fleq                                    0x08003ff5   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __aeabi_fcmplt                           0x08004003   Thumb Code     0  fcmp.o(x$fpl$fcmp)
    _fls                                     0x08004003   Thumb Code    14  fcmp.o(x$fpl$fcmp)
    __fpl_fcmp_Inf                           0x08004011   Thumb Code    24  fcmpi.o(x$fpl$fcmpinf)
    __aeabi_fdiv                             0x08004029   Thumb Code     0  fdiv.o(x$fpl$fdiv)
    _fdiv                                    0x08004029   Thumb Code   384  fdiv.o(x$fpl$fdiv)
    __aeabi_cfcmpeq                          0x080041ad   Thumb Code     0  feqf.o(x$fpl$feqf)
    _fcmpeq                                  0x080041ad   Thumb Code   104  feqf.o(x$fpl$feqf)
    __aeabi_i2f                              0x08004215   Thumb Code     0  fflt_clz.o(x$fpl$fflt)
    _fflt                                    0x08004215   Thumb Code    48  fflt_clz.o(x$fpl$fflt)
    _fcmpge                                  0x08004245   Thumb Code   104  fgeqf.o(x$fpl$fgeqf)
    __aeabi_cfcmple                          0x080042ad   Thumb Code     0  fleqf.o(x$fpl$fleqf)
    _fcmple                                  0x080042ad   Thumb Code   104  fleqf.o(x$fpl$fleqf)
    __fpl_fcmple_InfNaN                      0x080042ff   Thumb Code     0  fleqf.o(x$fpl$fleqf)
    __aeabi_fmul                             0x08004315   Thumb Code     0  fmul.o(x$fpl$fmul)
    _fmul                                    0x08004315   Thumb Code   258  fmul.o(x$fpl$fmul)
    __fpl_fnaninf                            0x08004417   Thumb Code   140  fnaninf.o(x$fpl$fnaninf)
    __fpl_fretinf                            0x080044a3   Thumb Code    10  fretinf.o(x$fpl$fretinf)
    __aeabi_fsub                             0x080044ad   Thumb Code     0  faddsub_clz.o(x$fpl$fsub)
    _fsub                                    0x080044ad   Thumb Code   234  faddsub_clz.o(x$fpl$fsub)
    AHBPrescTable                            0x08004596   Data          16  system_stm32f10x.o(.rodata.AHBPrescTable)
    __I$use$fp                               0x08004596   Number         0  usenofp.o(x$fpl$usenofp)
    vtable for CommonDelay                   0x080045a8   Data          16  custom_timer.o(.rodata._ZTV11CommonDelay)
    vtable for SimpleInput                   0x080045b8   Data          12  simple_input.o(.rodata._ZTV11SimpleInput)
    vtable for ProgrammCoil                  0x080045c4   Data          16  coil.o(.rodata._ZTV12ProgrammCoil)
    vtable for AnalogMonitor                 0x080045d4   Data          12  analog_monitor.o(.rodata._ZTV13AnalogMonitor)
    vtable for Coil                          0x080045e0   Data          16  coil.o(.rodata._ZTV4Coil)
    vtable for DIDelay                       0x080045f0   Data          16  custom_timer.o(.rodata._ZTV7DIDelay)
    vtable for ISwitch                       0x08004600   Data          12  main.o(.rodata._ZTV7ISwitch)
    vtable for IUpdated                      0x0800460c   Data          12  custom_timer.o(.rodata._ZTV8IUpdated)
    vtable for AnalogOut                     0x08004618   Data          12  analog_out.o(.rodata._ZTV9AnalogOut)
    uxTopUsedPriority                        0x0800463c   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x08004640   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08004660   Number         0  anon$$obj.o(Region$$Table)
    SHT$$INIT_ARRAY$$Base                    0x08004660   Number         0  main.o(.init_array)
    SHT$$INIT_ARRAY$$Limit                   0x08004664   Number         0  init_aeabi.o(.init_array)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    allTimersSize                            0x20000004   Data           1  main.o(.data.allTimersSize)
    updateObjects                            0x20000008   Data          20  main.o(.data.updateObjects)
    __libspace_start                         0x20000020   Data          96  libspace.o(.bss)
    __cxa_new_handler                        0x20000080   Data           4  cxa_default_handlers.cpp.o(.bss.__cxa_new_handler)
    __temporary_stack_top$libspace           0x20000080   Data           0  libspace.o(.bss)
    adcMonitor                               0x20000084   Data          56  main.o(.bss.adcMonitor)
    adcValues                                0x200000bc   Data           4  main.o(.bss.adcValues)
    analogOut                                0x200000c0   Data          28  main.o(.bss.analogOut)
    button                                   0x200000dc   Data          12  main.o(.bss.button)
    buttonDelay                              0x200000e8   Data          16  main.o(.bss.buttonDelay)
    delay                                    0x200000f8   Data          12  main.o(.bss.delay)
    led                                      0x20000104   Data          16  main.o(.bss.led)
    ledDelay                                 0x20000114   Data          16  main.o(.bss.ledDelay)
    ledSwitch                                0x20000124   Data           8  main.o(.bss.ledSwitch)
    pxCurrentTCB                             0x20000130   Data           4  tasks.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00004688, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00004664, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO          730    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO          771  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x00000034   Code   RO         1212    !!!scatter          c_w.l(__scatter.o)
    0x08000128   0x08000128   0x0000001a   Code   RO         1214    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000142   0x08000142   0x00000002   PAD
    0x08000144   0x08000144   0x0000001c   Code   RO         1216    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000160   0x08000160   0x00000002   Code   RO         1150    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000162   0x08000162   0x00000000   Code   RO          946    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO          948    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO          950    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000008   Code   RO          951    .ARM.Collect$$libinit$$00000007  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          953    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          955    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          957    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          960    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          962    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          964    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          966    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          968    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          970    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          972    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          974    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          976    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          978    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          980    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          984    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          986    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000000   Code   RO          988    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800016a   0x0800016a   0x00000004   Code   RO          989    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x0800016e   0x0800016e   0x00000000   Code   RO          990    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0800016e   0x0800016e   0x00000002   Code   RO          991    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000170   0x08000170   0x00000002   Code   RO         1210    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000172   0x08000172   0x00000006   Code   RO         1151    .ARM.Collect$$libshutdown$$00000001  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1152    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1154    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1157    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1160    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1162    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000000   Code   RO         1165    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000178   0x08000178   0x00000002   Code   RO         1166    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0800017a   0x0800017a   0x00000000   Code   RO          868    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0800017a   0x0800017a   0x00000000   Code   RO         1038    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0800017a   0x0800017a   0x00000006   Code   RO         1050    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000180   0x08000180   0x00000000   Code   RO         1040    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x08000180   0x08000180   0x00000004   Code   RO         1041    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000184   0x08000184   0x00000000   Code   RO         1043    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000184   0x08000184   0x00000008   Code   RO         1044    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800018c   0x0800018c   0x00000002   Code   RO         1167    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1182    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800018e   0x0800018e   0x00000004   Code   RO         1183    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000192   0x08000192   0x00000006   Code   RO         1184    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000198   0x08000198   0x00000040   Code   RO          731    .text               startup_stm32f10x_md.o
    0x080001d8   0x080001d8   0x0000000a   Code   RO          758    .text               c_w.l(cxa_atexit.o)
    0x080001e2   0x080001e2   0x0000008a   Code   RO          761    .text               c_w.l(rt_memcpy_v6.o)
    0x0800026c   0x0800026c   0x00000010   Code   RO          763    .text               c_w.l(aeabi_memset4.o)
    0x0800027c   0x0800027c   0x00000044   Code   RO          765    .text               c_w.l(rt_memclr.o)
    0x080002c0   0x080002c0   0x0000004e   Code   RO          767    .text               c_w.l(rt_memclr_w.o)
    0x0800030e   0x0800030e   0x00000006   Code   RO          769    .text               c_w.l(heapauxi.o)
    0x08000314   0x08000314   0x00000024   Code   RO          776    .text               c_w.l(init_aeabi.o)
    0x08000338   0x08000338   0x0000005e   Code   RO          873    .text               c_w.l(h1_alloc.o)
    0x08000396   0x08000396   0x0000004e   Code   RO          875    .text               c_w.l(h1_free.o)
    0x080003e4   0x080003e4   0x00000016   Code   RO          935    .text               c_w.l(abort.o)
    0x080003fa   0x080003fa   0x0000002e   Code   RO          940    .text               c_w.l(aeabi_atexit.o)
    0x08000428   0x08000428   0x00000064   Code   RO          943    .text               c_w.l(rt_memcpy_w.o)
    0x0800048c   0x0800048c   0x0000000c   Code   RO         1031    .text               c_w.l(sys_exit.o)
    0x08000498   0x08000498   0x00000008   Code   RO         1055    .text               c_w.l(rt_heap_descriptor_intlibspace.o)
    0x080004a0   0x080004a0   0x00000008   Code   RO         1060    .text               c_w.l(rt_ddtor_pointer_addr_intlibspace.o)
    0x080004a8   0x080004a8   0x00000004   Code   RO         1062    .text               c_w.l(hguard.o)
    0x080004ac   0x080004ac   0x0000008a   Code   RO         1064    .text               c_w.l(init_alloc.o)
    0x08000536   0x08000536   0x0000000e   Code   RO         1068    .text               c_w.l(h1_init.o)
    0x08000544   0x08000544   0x00000042   Code   RO         1080    .text               c_w.l(cxa_finalize.o)
    0x08000586   0x08000586   0x0000000e   Code   RO         1083    .text               c_w.l(defsig_abrt_outer.o)
    0x08000594   0x08000594   0x00000008   Code   RO         1110    .text               c_w.l(libspace.o)
    0x0800059c   0x0800059c   0x00000002   Code   RO         1113    .text               c_w.l(use_no_semi.o)
    0x0800059e   0x0800059e   0x00000000   Code   RO         1115    .text               c_w.l(indicate_semi.o)
    0x0800059e   0x0800059e   0x0000004a   Code   RO         1116    .text               c_w.l(sys_stackheap_outer.o)
    0x080005e8   0x080005e8   0x00000000   Code   RO         1122    .text               c_w.l(maybetermalloc1.o)
    0x080005e8   0x080005e8   0x00000034   Code   RO         1124    .text               c_w.l(h1_extend.o)
    0x0800061c   0x0800061c   0x00000012   Code   RO         1128    .text               c_w.l(exit.o)
    0x0800062e   0x0800062e   0x0000000a   Code   RO         1130    .text               c_w.l(defsig_exit.o)
    0x08000638   0x08000638   0x00000030   Code   RO         1132    .text               c_w.l(defsig_abrt_inner.o)
    0x08000668   0x08000668   0x0000000e   Code   RO         1134    .text               c_w.l(defsig_rtmem_outer.o)
    0x08000676   0x08000676   0x00000032   Code   RO         1173    .text               c_w.l(defsig_general.o)
    0x080006a8   0x080006a8   0x00000050   Code   RO         1175    .text               c_w.l(defsig_rtmem_inner.o)
    0x080006f8   0x080006f8   0x0000000e   Code   RO         1177    .text               c_w.l(sys_wrch.o)
    0x08000706   0x08000706   0x0000000a   PAD
    0x08000710   0x08000710   0x00000044   Code   RO          285    .text.PendSV_Handler  port.o
    0x08000754   0x08000754   0x0000000c   PAD
    0x08000760   0x08000760   0x00000024   Code   RO          271    .text.SVC_Handler   port.o
    0x08000784   0x08000784   0x00000008   Code   RO          739    .text.SetSysClock   system_stm32f10x.o
    0x0800078c   0x0800078c   0x00000122   Code   RO          743    .text.SetSysClockTo72  system_stm32f10x.o
    0x080008ae   0x080008ae   0x00000002   PAD
    0x080008b0   0x080008b0   0x0000003c   Code   RO          287    .text.SysTick_Handler  port.o
    0x080008ec   0x080008ec   0x00000122   Code   RO          741    .text.SystemCoreClockUpdate  system_stm32f10x.o
    0x08000a0e   0x08000a0e   0x00000002   PAD
    0x08000a10   0x08000a10   0x00000066   Code   RO          737    .text.SystemInit    system_stm32f10x.o
    0x08000a76   0x08000a76   0x00000002   PAD
    0x08000a78   0x08000a78   0x0000004c   Code   RO           28    .text.TIM2_IRQHandler  main.o
    0x08000ac4   0x08000ac4   0x00000024   Code   RO           30    .text._GLOBAL__sub_I_main.cpp  main.o
    0x08000ae8   0x08000ae8   0x0000000e   Code   RO          240    .text._Z10commonInitv  init.o
    0x08000af6   0x08000af6   0x00000002   PAD
    0x08000af8   0x08000af8   0x00000040   Code   RO           89    .text._Z11getPositionj  common.o
    0x08000b38   0x08000b38   0x00000020   Code   RO          111    .text._Z11setRegisterIVjEvPT_jj  simple_input.o
    0x08000b58   0x08000b58   0x00000044   Code   RO          262    .text._Z17setBitsInRegisterIVjEvPT_jj  init.o
    0x08000b9c   0x08000b9c   0x00000044   Code   RO          264    .text._Z17setBitsInRegisterIVtEvPT_jj  init.o
    0x08000be0   0x08000be0   0x00000036   Code   RO          237    .text._Z5limitIfET_S0_S0_S0_  analog_out.o
    0x08000c16   0x08000c16   0x00000002   PAD
    0x08000c18   0x08000c18   0x00000158   Code   RO          252    .text._Z7adcInitv   init.o
    0x08000d70   0x08000d70   0x000000d8   Code   RO          721    .text._Z7ledTaskPv  led_task.o
    0x08000e48   0x08000e48   0x000000aa   Code   RO          254    .text._Z7pwmInitv   init.o
    0x08000ef2   0x08000ef2   0x00000002   PAD
    0x08000ef4   0x08000ef4   0x000000ce   Code   RO          244    .text._Z7rccInitv   init.o
    0x08000fc2   0x08000fc2   0x00000002   PAD
    0x08000fc4   0x08000fc4   0x00000058   Code   RO          246    .text._Z8tickInitv  init.o
    0x0800101c   0x0800101c   0x00000030   Code   RO          248    .text._ZL16__NVIC_EnableIRQ4IRQn  init.o
    0x0800104c   0x0800104c   0x00000042   Code   RO          250    .text._ZL18__NVIC_SetPriority4IRQnj  init.o
    0x0800108e   0x0800108e   0x00000002   PAD
    0x08001090   0x08001090   0x0000003c   Code   RO          242    .text._ZL26__NVIC_SetPriorityGroupingj  init.o
    0x080010cc   0x080010cc   0x000000e2   Code   RO          164    .text._ZN10GPIOcommonC2EP12GPIO_TypeDefh  gpio_common.o
    0x080011ae   0x080011ae   0x00000002   PAD
    0x080011b0   0x080011b0   0x00000016   Code   RO          144    .text._ZN11CommonDelay11notFinishedEv  custom_timer.o
    0x080011c6   0x080011c6   0x00000002   PAD
    0x080011c8   0x080011c8   0x0000004c   Code   RO          146    .text._ZN11CommonDelay15finishedImpulseEv  custom_timer.o
    0x08001214   0x08001214   0x00000018   Code   RO          136    .text._ZN11CommonDelay15prepareAndStartEv  custom_timer.o
    0x0800122c   0x0800122c   0x00000014   Code   RO          132    .text._ZN11CommonDelay4stopEv  custom_timer.o
    0x08001240   0x08001240   0x00000010   Code   RO          134    .text._ZN11CommonDelay5resetEv  custom_timer.o
    0x08001250   0x08001250   0x0000000e   Code   RO          126    .text._ZN11CommonDelay5startEv  custom_timer.o
    0x0800125e   0x0800125e   0x00000002   PAD
    0x08001260   0x08001260   0x00000048   Code   RO          116    .text._ZN11CommonDelay6updateEv  custom_timer.o
    0x080012a8   0x080012a8   0x00000010   Code   RO          142    .text._ZN11CommonDelay7startedEv  custom_timer.o
    0x080012b8   0x080012b8   0x00000016   Code   RO          130    .text._ZN11CommonDelay8finishedEv  custom_timer.o
    0x080012ce   0x080012ce   0x00000002   PAD
    0x080012d0   0x080012d0   0x0000002c   Code   RO          138    .text._ZN11CommonDelay8setStartEb  custom_timer.o
    0x080012fc   0x080012fc   0x00000014   Code   RO          120    .text._ZN11CommonDelay9setPeriodEt  custom_timer.o
    0x08001310   0x08001310   0x0000002a   Code   RO          114    .text._ZN11CommonDelayC2Et  custom_timer.o
    0x0800133a   0x0800133a   0x00000002   PAD
    0x0800133c   0x0800133c   0x00000020   Code   RO          140    .text._ZN11CommonDelayaSEb  custom_timer.o
    0x0800135c   0x0800135c   0x00000018   Code   RO          102    .text._ZN11SimpleInput8isActiveEv  simple_input.o
    0x08001374   0x08001374   0x00000092   Code   RO          100    .text._ZN11SimpleInputC2EP12GPIO_TypeDefh  simple_input.o
    0x08001406   0x08001406   0x00000002   PAD
    0x08001408   0x08001408   0x00000022   Code   RO           67    .text._ZN12ProgrammCoil6toggleEv  coil.o
    0x0800142a   0x0800142a   0x00000002   PAD
    0x0800142c   0x0800142c   0x00000010   Code   RO           59    .text._ZN12ProgrammCoil8isActiveEv  coil.o
    0x0800143c   0x0800143c   0x00000018   Code   RO           61    .text._ZN12ProgrammCoil8setValueEb  coil.o
    0x08001454   0x08001454   0x00000020   Code   RO           53    .text._ZN12ProgrammCoilC2Ev  main.o
    0x08001474   0x08001474   0x00000022   Code   RO           69    .text._ZN12ProgrammCoilaSEb  coil.o
    0x08001496   0x08001496   0x00000002   PAD
    0x08001498   0x08001498   0x00000012   Code   RO          190    .text._ZN13AnalogMonitor10isHighWarnEv  analog_monitor.o
    0x080014aa   0x080014aa   0x00000002   PAD
    0x080014ac   0x080014ac   0x00000012   Code   RO          194    .text._ZN13AnalogMonitor10isLowAlarmEv  analog_monitor.o
    0x080014be   0x080014be   0x00000002   PAD
    0x080014c0   0x080014c0   0x00000012   Code   RO          188    .text._ZN13AnalogMonitor11isHighAlarmEv  analog_monitor.o
    0x080014d2   0x080014d2   0x00000002   PAD
    0x080014d4   0x080014d4   0x00000026   Code   RO          186    .text._ZN13AnalogMonitor13setTresDelaysE9TRES_TYPEt  analog_monitor.o
    0x080014fa   0x080014fa   0x00000002   PAD
    0x080014fc   0x080014fc   0x00000166   Code   RO          178    .text._ZN13AnalogMonitor6updateEv  analog_monitor.o
    0x08001662   0x08001662   0x00000002   PAD
    0x08001664   0x08001664   0x00000016   Code   RO          205    .text._ZN13AnalogMonitor8getRangeIVtEET_PKS2_  analog_monitor.o
    0x0800167a   0x0800167a   0x00000002   PAD
    0x0800167c   0x0800167c   0x00000016   Code   RO          203    .text._ZN13AnalogMonitor8getRangeIfEET_PKS1_  analog_monitor.o
    0x08001692   0x08001692   0x00000002   PAD
    0x08001694   0x08001694   0x0000000c   Code   RO          180    .text._ZN13AnalogMonitor8getValueEv  analog_monitor.o
    0x080016a0   0x080016a0   0x00000012   Code   RO          192    .text._ZN13AnalogMonitor9isLowWarnEv  analog_monitor.o
    0x080016b2   0x080016b2   0x00000002   PAD
    0x080016b4   0x080016b4   0x000000dc   Code   RO          172    .text._ZN13AnalogMonitorC2EhPVt  analog_monitor.o
    0x08001790   0x08001790   0x00000050   Code   RO          176    .text._ZN13AnalogMonitorD2Ev  analog_monitor.o
    0x080017e0   0x080017e0   0x00000016   Code   RO           73    .text._ZN4Coil8isActiveEv  coil.o
    0x080017f6   0x080017f6   0x00000002   PAD
    0x080017f8   0x080017f8   0x00000042   Code   RO           75    .text._ZN4Coil8setValueEb  coil.o
    0x0800183a   0x0800183a   0x00000002   PAD
    0x0800183c   0x0800183c   0x00000074   Code   RO           71    .text._ZN4CoilC2EP12GPIO_TypeDefh  coil.o
    0x080018b0   0x080018b0   0x00000022   Code   RO           77    .text._ZN4CoilaSEb  coil.o
    0x080018d2   0x080018d2   0x00000002   PAD
    0x080018d4   0x080018d4   0x00000030   Code   RO          150    .text._ZN7DIDelay7startedEv  custom_timer.o
    0x08001904   0x08001904   0x0000002e   Code   RO          148    .text._ZN7DIDelayC2EP7ISwitcht  custom_timer.o
    0x08001932   0x08001932   0x00000002   PAD
    0x08001934   0x08001934   0x00000016   Code   RO           55    .text._ZN7ISwitchC2Ev  main.o
    0x0800194a   0x0800194a   0x00000002   PAD
    0x0800194c   0x0800194c   0x00000016   Code   RO          160    .text._ZN8IUpdatedC2Ev  custom_timer.o
    0x08001962   0x08001962   0x00000002   PAD
    0x08001964   0x08001964   0x00000018   Code   RO          214    .text._ZN9AnalogOut10setReverseEb  analog_out.o
    0x0800197c   0x0800197c   0x00000056   Code   RO          218    .text._ZN9AnalogOut14updateRawValueEv  analog_out.o
    0x080019d2   0x080019d2   0x00000002   PAD
    0x080019d4   0x080019d4   0x00000046   Code   RO          212    .text._ZN9AnalogOut16setFullRangeTimeEj  analog_out.o
    0x08001a1a   0x08001a1a   0x00000002   PAD
    0x08001a1c   0x08001a1c   0x00000026   Code   RO          222    .text._ZN9AnalogOut5setSPEf  analog_out.o
    0x08001a42   0x08001a42   0x00000002   PAD
    0x08001a44   0x08001a44   0x00000094   Code   RO          216    .text._ZN9AnalogOut6updateEv  analog_out.o
    0x08001ad8   0x08001ad8   0x00000052   Code   RO          210    .text._ZN9AnalogOutC2EPVttjb  analog_out.o
    0x08001b2a   0x08001b2a   0x00000002   PAD
    0x08001b2c   0x08001b2c   0x00000018   Code   RO          228    .text._ZN9AnalogOutaSEf  analog_out.o
    0x08001b44   0x08001b44   0x0000000c   Code   RO         1024    .text._ZSt15get_new_handlerv  libcppabi_w.l(cxa_handlers.cpp.o)
    0x08001b50   0x08001b50   0x00000004   Code   RO          828    .text._ZdlPv        libcpp_w.l(new.cpp.o)
    0x08001b54   0x08001b54   0x00000004   Code   RO          832    .text._ZdlPvj       libcpp_w.l(new.cpp.o)
    0x08001b58   0x08001b58   0x00000026   Code   RO          820    .text._Znwj         libcpp_w.l(new.cpp.o)
    0x08001b7e   0x08001b7e   0x00000002   PAD
    0x08001b80   0x08001b80   0x00000028   Code   RO          863    .text.__cxa_pure_virtual  libcppabi_w.l(cxa_virtual.cpp.o)
    0x08001ba8   0x08001ba8   0x0000001a   Code   RO           10    .text.__cxx_global_var_init  main.o
    0x08001bc2   0x08001bc2   0x00000002   PAD
    0x08001bc4   0x08001bc4   0x0000001a   Code   RO           12    .text.__cxx_global_var_init.1  main.o
    0x08001bde   0x08001bde   0x00000002   PAD
    0x08001be0   0x08001be0   0x00000010   Code   RO           14    .text.__cxx_global_var_init.2  main.o
    0x08001bf0   0x08001bf0   0x0000001c   Code   RO           16    .text.__cxx_global_var_init.3  main.o
    0x08001c0c   0x08001c0c   0x0000001a   Code   RO           18    .text.__cxx_global_var_init.4  main.o
    0x08001c26   0x08001c26   0x00000002   PAD
    0x08001c28   0x08001c28   0x00000012   Code   RO           20    .text.__cxx_global_var_init.5  main.o
    0x08001c3a   0x08001c3a   0x00000002   PAD
    0x08001c3c   0x08001c3c   0x00000036   Code   RO           22    .text.__cxx_global_var_init.6  main.o
    0x08001c72   0x08001c72   0x00000002   PAD
    0x08001c74   0x08001c74   0x00000026   Code   RO           24    .text.__cxx_global_var_init.7  main.o
    0x08001c9a   0x08001c9a   0x00000004   Code   RO         1028    .text.abort_message  libcppabi_w.l(abort_message.cpp.o)
    0x08001c9e   0x08001c9e   0x00000002   PAD
    0x08001ca0   0x08001ca0   0x00000066   Code   RO           26    .text.main          main.o
    0x08001d06   0x08001d06   0x00000002   PAD
    0x08001d08   0x08001d08   0x0000011a   Code   RO          520    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x08001e22   0x08001e22   0x00000002   PAD
    0x08001e24   0x08001e24   0x00000154   Code   RO          508    .text.prvAddNewTaskToReadyList  tasks.o
    0x08001f78   0x08001f78   0x0000006a   Code   RO          656    .text.prvCheckForValidListAndQueue  timers.o
    0x08001fe2   0x08001fe2   0x00000002   PAD
    0x08001fe4   0x08001fe4   0x0000005a   Code   RO          622    .text.prvCheckTasksWaitingTermination  tasks.o
    0x0800203e   0x0800203e   0x00000002   PAD
    0x08002040   0x08002040   0x00000042   Code   RO          410    .text.prvCopyDataFromQueue  queue.o
    0x08002082   0x08002082   0x00000002   PAD
    0x08002084   0x08002084   0x00000018   Code   RO          514    .text.prvDeleteTCB  tasks.o
    0x0800209c   0x0800209c   0x00000040   Code   RO          690    .text.prvGetNextExpireTime  timers.o
    0x080020dc   0x080020dc   0x000000ae   Code   RO          331    .text.prvHeapInit   heap_4.o
    0x0800218a   0x0800218a   0x00000002   PAD
    0x0800218c   0x0800218c   0x0000003c   Code   RO          546    .text.prvIdleTask   tasks.o
    0x080021c8   0x080021c8   0x00000048   Code   RO          382    .text.prvInitialiseNewQueue  queue.o
    0x08002210   0x08002210   0x000000e6   Code   RO          506    .text.prvInitialiseNewTask  tasks.o
    0x080022f6   0x080022f6   0x00000002   PAD
    0x080022f8   0x080022f8   0x0000008e   Code   RO          620    .text.prvInitialiseTaskLists  tasks.o
    0x08002386   0x08002386   0x00000002   PAD
    0x08002388   0x08002388   0x000000c6   Code   RO          333    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x0800244e   0x0800244e   0x00000002   PAD
    0x08002450   0x08002450   0x00000086   Code   RO          704    .text.prvInsertTimerInActiveList  timers.o
    0x080024d6   0x080024d6   0x00000002   PAD
    0x080024d8   0x080024d8   0x00000028   Code   RO          412    .text.prvIsQueueEmpty  queue.o
    0x08002500   0x08002500   0x00000020   Code   RO          277    .text.prvPortStartFirstTask  port.o
    0x08002520   0x08002520   0x00000054   Code   RO          698    .text.prvProcessExpiredTimer  timers.o
    0x08002574   0x08002574   0x00000126   Code   RO          694    .text.prvProcessReceivedCommands  timers.o
    0x0800269a   0x0800269a   0x00000002   PAD
    0x0800269c   0x0800269c   0x0000009a   Code   RO          692    .text.prvProcessTimerOrBlockTask  timers.o
    0x08002736   0x08002736   0x00000002   PAD
    0x08002738   0x08002738   0x00000034   Code   RO          702    .text.prvReloadTimer  timers.o
    0x0800276c   0x0800276c   0x0000003c   Code   RO          512    .text.prvResetNextTaskUnblockTime  tasks.o
    0x080027a8   0x080027a8   0x00000044   Code   RO          696    .text.prvSampleTimeNow  timers.o
    0x080027ec   0x080027ec   0x00000052   Code   RO          700    .text.prvSwitchTimerLists  timers.o
    0x0800283e   0x0800283e   0x00000002   PAD
    0x08002840   0x08002840   0x00000026   Code   RO          269    .text.prvTaskExitError  port.o
    0x08002866   0x08002866   0x00000002   PAD
    0x08002868   0x08002868   0x0000001e   Code   RO          658    .text.prvTimerTask  timers.o
    0x08002886   0x08002886   0x00000002   PAD
    0x08002888   0x08002888   0x000000ae   Code   RO          402    .text.prvUnlockQueue  queue.o
    0x08002936   0x08002936   0x00000002   PAD
    0x08002938   0x08002938   0x00000186   Code   RO          329    .text.pvPortMalloc  heap_4.o
    0x08002abe   0x08002abe   0x00000002   PAD
    0x08002ac0   0x08002ac0   0x00000050   Code   RO          267    .text.pxPortInitialiseStack  port.o
    0x08002b10   0x08002b10   0x00000048   Code   RO          369    .text.uxListRemove  list.o
    0x08002b58   0x08002b58   0x00000002   Code   RO            2    .text.vApplicationIdleHook  main.o
    0x08002b5a   0x08002b5a   0x00000002   PAD
    0x08002b5c   0x08002b5c   0x0000000a   Code   RO            8    .text.vApplicationStackOverflowHook  main.o
    0x08002b66   0x08002b66   0x00000002   PAD
    0x08002b68   0x08002b68   0x00000002   Code   RO            4    .text.vApplicationTickHook  main.o
    0x08002b6a   0x08002b6a   0x00000002   PAD
    0x08002b6c   0x08002b6c   0x0000002e   Code   RO          361    .text.vListInitialise  list.o
    0x08002b9a   0x08002b9a   0x00000002   PAD
    0x08002b9c   0x08002b9c   0x0000000e   Code   RO          363    .text.vListInitialiseItem  list.o
    0x08002baa   0x08002baa   0x00000002   PAD
    0x08002bac   0x08002bac   0x0000006a   Code   RO          367    .text.vListInsert   list.o
    0x08002c16   0x08002c16   0x00000002   PAD
    0x08002c18   0x08002c18   0x00000030   Code   RO          281    .text.vPortEnterCritical  port.o
    0x08002c48   0x08002c48   0x00000026   Code   RO          283    .text.vPortExitCritical  port.o
    0x08002c6e   0x08002c6e   0x00000002   PAD
    0x08002c70   0x08002c70   0x00000076   Code   RO          335    .text.vPortFree     heap_4.o
    0x08002ce6   0x08002ce6   0x00000002   PAD
    0x08002ce8   0x08002ce8   0x0000002e   Code   RO          275    .text.vPortSetupTimerInterrupt  port.o
    0x08002d16   0x08002d16   0x00000002   PAD
    0x08002d18   0x08002d18   0x00000064   Code   RO          440    .text.vQueueWaitForMessageRestricted  queue.o
    0x08002d7c   0x08002d7c   0x0000004a   Code   RO          524    .text.vTaskDelay    tasks.o
    0x08002dc6   0x08002dc6   0x00000002   PAD
    0x08002dc8   0x08002dc8   0x00000024   Code   RO          578    .text.vTaskInternalSetTimeOutState  tasks.o
    0x08002dec   0x08002dec   0x0000000e   Code   RO          582    .text.vTaskMissedYield  tasks.o
    0x08002dfa   0x08002dfa   0x00000002   PAD
    0x08002dfc   0x08002dfc   0x00000026   Code   RO          566    .text.vTaskPlaceOnEventList  tasks.o
    0x08002e22   0x08002e22   0x00000002   PAD
    0x08002e24   0x08002e24   0x00000060   Code   RO          570    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x08002e84   0x08002e84   0x00000094   Code   RO          544    .text.vTaskStartScheduler  tasks.o
    0x08002f18   0x08002f18   0x00000010   Code   RO          518    .text.vTaskSuspendAll  tasks.o
    0x08002f28   0x08002f28   0x000000ec   Code   RO          536    .text.vTaskSwitchContext  tasks.o
    0x08003014   0x08003014   0x00000040   Code   RO          273    .text.xPortStartScheduler  port.o
    0x08003054   0x08003054   0x0000007e   Code   RO          380    .text.xQueueGenericCreate  queue.o
    0x080030d2   0x080030d2   0x00000002   PAD
    0x080030d4   0x080030d4   0x000000d0   Code   RO          378    .text.xQueueGenericReset  queue.o
    0x080031a4   0x080031a4   0x00000152   Code   RO          408    .text.xQueueReceive  queue.o
    0x080032f6   0x080032f6   0x00000002   PAD
    0x080032f8   0x080032f8   0x0000009a   Code   RO          580    .text.xTaskCheckForTimeOut  tasks.o
    0x08003392   0x08003392   0x00000002   PAD
    0x08003394   0x08003394   0x000000a0   Code   RO          504    .text.xTaskCreate   tasks.o
    0x08003434   0x08003434   0x00000014   Code   RO          552    .text.xTaskGetTickCount  tasks.o
    0x08003448   0x08003448   0x00000254   Code   RO          550    .text.xTaskIncrementTick  tasks.o
    0x0800369c   0x0800369c   0x00000170   Code   RO          572    .text.xTaskRemoveFromEventList  tasks.o
    0x0800380c   0x0800380c   0x000001fe   Code   RO          522    .text.xTaskResumeAll  tasks.o
    0x08003a0a   0x08003a0a   0x00000002   PAD
    0x08003a0c   0x08003a0c   0x00000050   Code   RO          654    .text.xTimerCreateTimerTask  timers.o
    0x08003a5c   0x08003a5c   0x00000062   Code   RO          779    x$fpl$d2f           fz_ws.l(d2f.o)
    0x08003abe   0x08003abe   0x00000002   PAD
    0x08003ac0   0x08003ac0   0x000002b4   Code   RO          782    x$fpl$ddiv          fz_ws.l(ddiv.o)
    0x08003d74   0x08003d74   0x0000005e   Code   RO          785    x$fpl$dfix          fz_ws.l(dfix.o)
    0x08003dd2   0x08003dd2   0x00000026   Code   RO          789    x$fpl$dfltu         fz_ws.l(dflt_clz.o)
    0x08003df8   0x08003df8   0x0000009c   Code   RO          996    x$fpl$dnaninf       fz_ws.l(dnaninf.o)
    0x08003e94   0x08003e94   0x0000000c   Code   RO          998    x$fpl$dretinf       fz_ws.l(dretinf.o)
    0x08003ea0   0x08003ea0   0x00000056   Code   RO          795    x$fpl$f2d           fz_ws.l(f2d.o)
    0x08003ef6   0x08003ef6   0x00000002   PAD
    0x08003ef8   0x08003ef8   0x000000c4   Code   RO          797    x$fpl$fadd          fz_ws.l(faddsub_clz.o)
    0x08003fbc   0x08003fbc   0x00000054   Code   RO          803    x$fpl$fcmp          fz_ws.l(fcmp.o)
    0x08004010   0x08004010   0x00000018   Code   RO         1091    x$fpl$fcmpinf       fz_ws.l(fcmpi.o)
    0x08004028   0x08004028   0x00000184   Code   RO          806    x$fpl$fdiv          fz_ws.l(fdiv.o)
    0x080041ac   0x080041ac   0x00000068   Code   RO         1000    x$fpl$feqf          fz_ws.l(feqf.o)
    0x08004214   0x08004214   0x00000030   Code   RO          810    x$fpl$fflt          fz_ws.l(fflt_clz.o)
    0x08004244   0x08004244   0x00000068   Code   RO         1002    x$fpl$fgeqf         fz_ws.l(fgeqf.o)
    0x080042ac   0x080042ac   0x00000068   Code   RO         1004    x$fpl$fleqf         fz_ws.l(fleqf.o)
    0x08004314   0x08004314   0x00000102   Code   RO          815    x$fpl$fmul          fz_ws.l(fmul.o)
    0x08004416   0x08004416   0x0000008c   Code   RO         1006    x$fpl$fnaninf       fz_ws.l(fnaninf.o)
    0x080044a2   0x080044a2   0x0000000a   Code   RO         1008    x$fpl$fretinf       fz_ws.l(fretinf.o)
    0x080044ac   0x080044ac   0x000000ea   Code   RO          799    x$fpl$fsub          fz_ws.l(faddsub_clz.o)
    0x08004596   0x08004596   0x00000000   Code   RO         1010    x$fpl$usenofp       fz_ws.l(usenofp.o)
    0x08004596   0x08004596   0x00000010   Data   RO          746    .rodata.AHBPrescTable  system_stm32f10x.o
    0x080045a6   0x080045a6   0x00000002   PAD
    0x080045a8   0x080045a8   0x00000010   Data   RO          152    .rodata._ZTV11CommonDelay  custom_timer.o
    0x080045b8   0x080045b8   0x0000000c   Data   RO          104    .rodata._ZTV11SimpleInput  simple_input.o
    0x080045c4   0x080045c4   0x00000010   Data   RO           80    .rodata._ZTV12ProgrammCoil  coil.o
    0x080045d4   0x080045d4   0x0000000c   Data   RO          196    .rodata._ZTV13AnalogMonitor  analog_monitor.o
    0x080045e0   0x080045e0   0x00000010   Data   RO           79    .rodata._ZTV4Coil   coil.o
    0x080045f0   0x080045f0   0x00000010   Data   RO          153    .rodata._ZTV7DIDelay  custom_timer.o
    0x08004600   0x08004600   0x0000000c   Data   RO           57    .rodata._ZTV7ISwitch  main.o
    0x0800460c   0x0800460c   0x0000000c   Data   RO          162    .rodata._ZTV8IUpdated  custom_timer.o
    0x08004618   0x08004618   0x0000000c   Data   RO          230    .rodata._ZTV9AnalogOut  analog_out.o
    0x08004624   0x08004624   0x00000008   Data   RO           43    .rodata.str1.1      main.o
    0x0800462c   0x0800462c   0x00000005   Data   RO          640    .rodata.str1.1      tasks.o
    0x08004631   0x08004631   0x00000008   Data   RO          707    .rodata.str1.1      timers.o
    0x08004639   0x08004639   0x00000003   PAD
    0x0800463c   0x0800463c   0x00000004   Data   RO          625    .rodata.uxTopUsedPriority  tasks.o
    0x08004640   0x08004640   0x00000020   Data   RO         1211    Region$$Table       anon$$obj.o
    0x08004660   0x08004660   0x00000004   Data   RO           44    .init_array         main.o
    0x08004664   0x08004660   0x00000000   Data   RO          774    .init_array         c_w.l(init_aeabi.o)


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08004668, Size: 0x00003088, Max: 0x00005000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08004668   0x00000004   Data   RW          745    .data.SystemCoreClock  system_stm32f10x.o
    0x20000004   0x0800466c   0x00000001   Data   RW           42    .data.allTimersSize  main.o
    0x20000005   0x0800466d   0x00000003   PAD
    0x20000008   0x08004670   0x00000014   Data   RW           41    .data.updateObjects  main.o
    0x2000001c   0x08004684   0x00000004   Data   RW          289    .data.uxCriticalNesting  port.o
    0x20000020        -       0x00000060   Zero   RW         1111    .bss                c_w.l(libspace.o)
    0x20000080        -       0x00000004   Zero   RW         1104    .bss.__cxa_new_handler  libcppabi_w.l(cxa_default_handlers.cpp.o)
    0x20000084        -       0x00000038   Zero   RW           39    .bss.adcMonitor     main.o
    0x200000bc        -       0x00000004   Zero   RW           38    .bss.adcValues      main.o
    0x200000c0        -       0x0000001c   Zero   RW           40    .bss.analogOut      main.o
    0x200000dc        -       0x0000000c   Zero   RW           33    .bss.button         main.o
    0x200000e8        -       0x00000010   Zero   RW           36    .bss.buttonDelay    main.o
    0x200000f8        -       0x0000000c   Zero   RW           37    .bss.delay          main.o
    0x20000104        -       0x00000010   Zero   RW           32    .bss.led            main.o
    0x20000114        -       0x00000010   Zero   RW           35    .bss.ledDelay       main.o
    0x20000124        -       0x00000008   Zero   RW           34    .bss.ledSwitch      main.o
    0x2000012c        -       0x00000004   Zero   RW          711    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000130        -       0x00000004   Zero   RW          624    .bss.pxCurrentTCB   tasks.o
    0x20000134        -       0x00000004   Zero   RW          709    .bss.pxCurrentTimerList  timers.o
    0x20000138        -       0x00000004   Zero   RW          634    .bss.pxDelayedTaskList  tasks.o
    0x2000013c        -       0x00000004   Zero   RW          347    .bss.pxEnd          heap_4.o
    0x20000140        -       0x00000004   Zero   RW          635    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000144        -       0x00000004   Zero   RW          710    .bss.pxOverflowTimerList  timers.o
    0x20000148        -       0x00000064   Zero   RW          626    .bss.pxReadyTasksLists  tasks.o
    0x200001ac        -       0x00002800   Zero   RW          353    .bss.ucHeap         heap_4.o
    0x200029ac        -       0x00000004   Zero   RW          631    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200029b0        -       0x00000004   Zero   RW          630    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x200029b4        -       0x00000004   Zero   RW          637    .bss.uxSchedulerSuspended  tasks.o
    0x200029b8        -       0x00000004   Zero   RW          628    .bss.uxTaskNumber   tasks.o
    0x200029bc        -       0x00000004   Zero   RW          627    .bss.uxTopReadyPriority  tasks.o
    0x200029c0        -       0x00000014   Zero   RW          712    .bss.xActiveTimerList1  timers.o
    0x200029d4        -       0x00000014   Zero   RW          713    .bss.xActiveTimerList2  timers.o
    0x200029e8        -       0x00000014   Zero   RW          645    .bss.xDelayedTaskList1  tasks.o
    0x200029fc        -       0x00000014   Zero   RW          646    .bss.xDelayedTaskList2  tasks.o
    0x20002a10        -       0x00000004   Zero   RW          348    .bss.xFreeBytesRemaining  heap_4.o
    0x20002a14        -       0x00000004   Zero   RW          641    .bss.xIdleTaskHandle  tasks.o
    0x20002a18        -       0x00000004   Zero   RW          350    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002a1c        -       0x00000004   Zero   RW          642    .bss.xNextTaskUnblockTime  tasks.o
    0x20002a20        -       0x00000004   Zero   RW          644    .bss.xNumOfOverflows  tasks.o
    0x20002a24        -       0x00000004   Zero   RW          351    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002a28        -       0x00000004   Zero   RW          352    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002a2c        -       0x00000004   Zero   RW          643    .bss.xPendedTicks   tasks.o
    0x20002a30        -       0x00000014   Zero   RW          639    .bss.xPendingReadyList  tasks.o
    0x20002a44        -       0x00000004   Zero   RW          632    .bss.xSchedulerRunning  tasks.o
    0x20002a48        -       0x00000008   Zero   RW          349    .bss.xStart         heap_4.o
    0x20002a50        -       0x00000014   Zero   RW          636    .bss.xSuspendedTaskList  tasks.o
    0x20002a64        -       0x00000014   Zero   RW          629    .bss.xTasksWaitingTermination  tasks.o
    0x20002a78        -       0x00000004   Zero   RW          633    .bss.xTickCount     tasks.o
    0x20002a7c        -       0x00000004   Zero   RW          706    .bss.xTimerQueue    timers.o
    0x20002a80        -       0x00000004   Zero   RW          708    .bss.xTimerTaskHandle  timers.o
    0x20002a84        -       0x00000004   Zero   RW          638    .bss.xYieldPending  tasks.o
    0x20002a88        -       0x00000200   Zero   RW          729    HEAP                startup_stm32f10x_md.o
    0x20002c88        -       0x00000400   Zero   RW          728    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       824          0         12          0          0       5870   analog_monitor.o
       526          0         12          0          0       4377   analog_out.o
       346          0         32          0          0       4221   coil.o
        64          0          0          0          0       1804   common.o
       536          0         44          0          0       5415   custom_timer.o
       226          0          0          0          0       2288   gpio_common.o
       880          0          0          0      10268       4068   heap_4.o
      1132          0          0          0          0       7822   init.o
       216          0          0          0          0       1901   led_task.o
       238          0          0          0          0       2050   list.o
       514          0         24         21        168       6261   main.o
       510         12          0          4          0       2489   port.o
      1124          0          0          0          0      12159   queue.o
       202          0         12          0          0       3083   simple_input.o
        64         26        236          0       1536        824   startup_stm32f10x_md.o
       690          0         16          4          0       2944   system_stm32f10x.o
      3694          0          9          0        260      21776   tasks.o
      1148         10          8          0         60       7648   timers.o

    ----------------------------------------------------------------------
     13090         60        442         32      12292      97000   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       156         12          5          3          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        22          0          0          0          0         80   abort.o
        46          0          0          0          0         84   aeabi_atexit.o
        16          0          0          0          0         68   aeabi_memset4.o
        10          0          0          0          0         68   cxa_atexit.o
        66          0          0          0          0         84   cxa_finalize.o
        48         34          0          0          0         76   defsig_abrt_inner.o
        14          0          0          0          0         80   defsig_abrt_outer.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        18          0          0          0          0         80   exit.o
        94          0          0          0          0         80   h1_alloc.o
        52          0          0          0          0         68   h1_extend.o
        78          0          0          0          0         80   h1_free.o
        14          0          0          0          0         84   h1_init.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
        36          8          0          0          0         80   init_aeabi.o
       138          0          0          0          0        168   init_alloc.o
         2          0          0          0          0          0   libinit.o
        14          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         8          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         0          0          0          0          0          0   maybetermalloc1.o
         8          4          0          0          0         68   rt_ddtor_pointer_addr_intlibspace.o
         8          4          0          0          0         68   rt_heap_descriptor_intlibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
         2          0          0          0          0         68   use_no_semi.o
        98          4          0          0          0         92   d2f.o
       692        140          0          0          0        216   ddiv.o
        94          4          0          0          0         92   dfix.o
        38          0          0          0          0         68   dflt_clz.o
       156          4          0          0          0         92   dnaninf.o
        12          0          0          0          0         68   dretinf.o
        86          4          0          0          0         84   f2d.o
       430          8          0          0          0        168   faddsub_clz.o
        84          0          0          0          0        196   fcmp.o
        24          0          0          0          0         68   fcmpi.o
       388         76          0          0          0         96   fdiv.o
       104          4          0          0          0         84   feqf.o
        48          0          0          0          0         68   fflt_clz.o
       104          4          0          0          0         84   fgeqf.o
       104          4          0          0          0         84   fleqf.o
       258          4          0          0          0         84   fmul.o
       140          4          0          0          0         84   fnaninf.o
        10          0          0          0          0         68   fretinf.o
         0          0          0          0          0          0   usenofp.o
        46          0          0          0          0        380   new.cpp.o
         4          0          0          0          0         36   abort_message.cpp.o
         0          0          0          0          4          0   cxa_default_handlers.cpp.o
        12          0          0          0          0        132   cxa_handlers.cpp.o
        40         32          0          0          0         52   cxa_virtual.cpp.o

    ----------------------------------------------------------------------
      4488        416          0          0        100       5036   Library Totals
        20          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1496        124          0          0         96       2640   c_w.l
      2870        260          0          0          0       1796   fz_ws.l
        46          0          0          0          0        380   libcpp_w.l
        56         32          0          0          4        220   libcppabi_w.l

    ----------------------------------------------------------------------
      4488        416          0          0        100       5036   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     17578        476        442         32      12392      99188   Grand Totals
     17578        476        442         32      12392      99188   ELF Image Totals
     17578        476        442         32          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                18020 (  17.60kB)
    Total RW  Size (RW Data + ZI Data)             12424 (  12.13kB)
    Total ROM Size (Code + RO Data + RW Data)      18052 (  17.63kB)

==============================================================================

